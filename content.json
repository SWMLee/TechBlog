{"meta":{"title":"知己识人","subtitle":"My mind will never lie！","description":"记录人生点滴","author":"SWM Lee","url":"http://yoursite.com","root":"/"},"pages":[{"title":"关于","date":"2019-06-23T02:15:52.000Z","updated":"2019-12-12T12:21:52.560Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":"wahtever is worth doing at all is worth doing well。"},{"title":"分类","date":"2019-07-08T16:00:00.000Z","updated":"2019-12-18T14:08:07.063Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"分类说明","date":"2019-06-22T16:51:22.000Z","updated":"2019-12-12T12:25:10.851Z","comments":true,"path":"categoryExplain/index.html","permalink":"http://yoursite.com/categoryExplain/index.html","excerpt":"","text":"本站文章主要分为以下4类： 一般文学：偶尔，让我们回味文学的技艺。 什么是文学？文学是一种语言艺术，是话语蕴藉中的审美意识形态。 但是，“文学，在最广泛的意义上，是任何单一的书面作品。”所以，小学作文从最广泛的意义上来讲，也算文学的哦。 不过不是所有人都愿意展示自己的“小学作文”，不过我就属于脸皮厚的那一种。就是一般般，也想得夸赞。 有些东西当然是想让大家都看看，不过好不好看某种程度来讲，“雨女无瓜”。 因为即便恨铁不成钢，也无可如何。 技术文章 吃饭的家伙，代码要写好，经验不可少。不一定非要是指导别人，分享，共同进步。被指点那必定是最好的。 心理说法 自我揣测的内心世界。 情绪调节：有些常见的情绪，或许并不乐见。 人都是有情绪的，“从心理学的角度看，情绪是人脑的高级功能，是人类生存适应的第一心理手段。” “情绪最能表达人的内心状态。” 不过从某种情绪的分类来看，我更喜欢积极情绪，而不是消极情绪，因为，“过于强烈和持久的消极情绪则对人的健康和社会适应有害。” 不过，有些东西不是想有就能有，有些东西想丢却又丢不掉。 所以积极点，调节一下这些消极的情绪。毕竟，有句话说的好：“不要做情绪的奴隶。” 梦之解析：人都会做梦，而我的梦则会让我知道梦了什么。 “梦之解析”分类主要是讲述平常做了梦，能够比较清楚地记住梦境情节，加以对平时事迹的分析，对梦中事物做出自以为是的联想，从中汲取积极能力，充实希望的力量。 对于梦境内容，一般都是梦醒时立马文字记录，从而避免梦醒了因为太困又睡着，早上起来之后对梦中的内容记得不清楚。 对于对梦境的联想分析，一般都会在当天晚上进行记录，白天上班同时进行联想分析，晚上整理文字，从而避免时间间隔太久倒是分析不及时不够准确地问题。 内容都是自以为是的说明，并没有太多的专业依据，听取积极力量即可，不要太较真。 绝望系列：生之绝望，活之艰辛。 “有时候你不努力一下，你都不知道什么叫绝望”。 我不会生产绝望，也不鼓励绝望，不过现实往往会让人绝望。 我不知道绝望的人会做什么，我大概可以想到，有些人看到了比自己更悲惨的人生，会对自己充满希望。 或许其实我说的也不是绝望，只是一些伤心的现实。 “但热闹是它们的，我什么也没有。” 只要你不认同它，生活就远远没有绝望！ 2019/06/23 10:21"},{"title":"标签","date":"2019-07-08T16:00:00.000Z","updated":"2019-12-18T14:08:21.553Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Angular i18n使用说明","slug":"TechnicalEssays/angular-i18n-demo","date":"2019-12-18T14:32:47.000Z","updated":"2019-12-19T13:09:39.193Z","comments":true,"path":"2019/12/18/TechnicalEssays/angular-i18n-demo/","link":"","permalink":"http://yoursite.com/2019/12/18/TechnicalEssays/angular-i18n-demo/","excerpt":"","text":"angular 项目，在实际使用开发时，难免会遇到需要使用多国语言的需求，也就是 angular 的国际化 i18n 的需求。 那么如何做到呢？ 本文主要通过对一个常见的注册页面，实现多国语言版本的切换，来说明 angular i18n 的用法。代码已放到github。 创建一个 angular 项目，并编写英文版注册页面1、创建项目创建就是直接终端输入ng new angular-i18n-demo即可。因为只是说明 i18n 的使用，不会过多复杂，不需要其他的模块例如 router、service 等。 目前前端开发，不使用一些样式（说白了就是 UI 组件）就很累，所以创建好 angular 项目之后，添加 angular material，使得注册页面稍微好看一点。在 angular 项目根目录终端输入ng add @angular/material即可。 2、编写页面不需要实现注册功能，构建一个注册页面就好了。因为已经使用了 angular material，就稍微用几个模块。 2.1、在 app.module.ts 引入 angular material 模块在 app.module.ts 的@NgModule 装饰器下的 imports 属性中，添加以下内容： BrowserAnimationsModule, MatToolbarModule, MatCardModule, MatInputModule, MatButtonModule, MatIconModule然后逐一导入，在顶部应该会有： import { BrowserAnimationsModule } from &#39;@angular/platform-browser/animations&#39;; import { MatInputModule, MatCardModule, MatToolbarModule, MatButtonModule, MatIconModule } from &#39;@angular/material&#39;;2.2 在 app 目录下，创建一个注册的组件如下图： 我这个是直接使用指令ng g component register生成，angular-cli 工具的操作，它会直接把这个组件也添加到模块文件： 2.3 添加代码：修改register.component.html代码如下： &lt;div class=&#39;my-div&#39;&gt; &lt;mat-toolbar&gt; &lt;mat-icon&gt;create&lt;/mat-icon&gt;&amp;nbsp;&amp;nbsp; Registration &lt;/mat-toolbar&gt; &lt;mat-card&gt; &lt;mat-card-content&gt; &lt;form&gt; &lt;div class=&quot;word-align&quot;&gt;First Name&lt;/div&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;mat-form-field&gt; &lt;input matInput placeholder=&quot;First name&quot; name=&quot;fname&quot; required&gt; &lt;/mat-form-field&gt; &lt;br /&gt; &lt;div class=&quot;word-align&quot;&gt;Last Name&lt;/div&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;mat-form-field&gt; &lt;input matInput placeholder=&quot;Last Name&quot; name=&quot;lname&quot; required&gt; &lt;/mat-form-field&gt; &lt;br /&gt; &lt;div class=&quot;word-align&quot;&gt;Address&lt;/div&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;mat-form-field&gt; &lt;input matInput placeholder=&quot;Address&quot; name=&quot;address&quot; required&gt; &lt;/mat-form-field&gt; &lt;br /&gt; &lt;div class=&quot;word-align&quot;&gt;Email&lt;/div&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;mat-form-field&gt; &lt;input matInput placeholder=&quot;Email&quot; name=&quot;email&quot;&gt; &lt;/mat-form-field&gt; &lt;br /&gt; &lt;div class=&quot;word-align&quot;&gt;Password&lt;/div&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;mat-form-field&gt; &lt;input matInput placeholder=&quot;Password&quot; name=&quot;password&quot;&gt; &lt;/mat-form-field&gt; &lt;br /&gt; &lt;div class=&quot;word-align&quot;&gt;Confirm Password&lt;/div&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;mat-form-field&gt; &lt;input matInput placeholder=&quot;Confirm Password&quot; name=&quot;confirmPassword&quot;&gt; &lt;/mat-form-field&gt; &lt;br /&gt; &lt;/form&gt; &lt;/mat-card-content&gt; &lt;mat-card-actions&gt; &lt;button mat-raised-button (click)=&quot;register()&quot; color=&quot;primary&quot;&gt;REGISTER&lt;/button&gt; &lt;/mat-card-actions&gt; &lt;/mat-card&gt;修改register.component.scss代码如下： // div居中 .my-div { width: 40%; margin-left: 30%; } // 设定form中label等宽 .word-align { display: inline-block; text-align: justify; text-justify: distribute-all-lines; /*ie6-8*/ text-align-last: justify; /* ie9*/ -moz-text-align-last: justify; /*ff*/ -webkit-text-align-last: justify; /*chrome 20+*/ width: 70px; margin-right: 0px; }因为我们不会去实现注册功能，所以在register.component.ts中，只需要添加一个空白注册函数就好了： import { Component, OnInit } from &#39;@angular/core&#39;; @Component({ selector: &#39;app-register&#39;, templateUrl: &#39;./register.component.html&#39;, styleUrls: [&#39;./register.component.scss&#39;] }) export class RegisterComponent implements OnInit { constructor() { } ngOnInit() { } register() { } // 新建一个空白注册函数 }2.4 将注册页面显示出来现在运行这个 angular 项目，首页看到的还是默认的界面。删除 app.component.html 原本的所有东西，添加一句各个注册组件的 selector： &lt;app-register&gt;&lt;/app-register&gt;我用ng server -o --port 1234启动，在浏览器中应该看到如下画面： 到这里，常规的注册页面就完成了，是个英文版本，i18n 准备工作就好了，下面开始实现变简体中文。 修改注册页面为简体中文版本在 angular 官方文档中，我们可以看到i18n 模板翻译分为 4 个阶段,主要就是 在组件模板中标记需要翻译的静态文本信息。 创建翻译文件：使用 Angular CLI 的 xi18n 命令，把标记过的文本提取到一个符合行业标准的翻译源文件中。 编辑所生成的翻译文件：把提取出的文本翻译成目标语言。 把翻译完成的文件合并回应用 一步一步来。 1、组件模板中标记需要翻译的静态文本信息常规的标签直接在标签中添加 i18n 关键字即可，如下图： 要翻译的内容的元素标签中其他内容时，可以使用 ng-container 将文本包裹起来，示例如下： 如果是要翻译某个标签的属性值，则需要添加 i18n-&lt;属性名&gt;标签，示例如下： 更多用法参看 angular 官网i18n 模板翻译 2、创建翻译源文件将模板做好标记后，使用指令ng xi18n --output-path &lt;path&gt;,生成翻译源文件，&lt;path&gt;则是文件位置。 此外还有属性： –i18nFormat：明确指定想用的格式（默认 XLIFF 1.2） –out-file： 为提取工具生成的翻译源文件改名（默认为 messages ） –i18n-locale：指定应用的基本地区（对 angular 没有，但可能对其他需求有用） 等等 我的指令是ng xi18n --output-path src/locale --out-file register.zh-Hans.xlf，生成的翻译源文件如下图： 3、翻译文本节点打开生成的翻译源文件，找到文中的标签，可以看到里面有一个标签，这标签里面的文字，就是需要多国语言需要翻译的文字。 现在要做的就是，复制标签这一行，放到原本这一行下面，并把它的标签名名为 target，并把它的内容改为需要翻译的语言文字。 例如，我现在要做的是把英文翻译成简体中文，那么修改示例如下： 注意所有的标签都添加对应的标签。 特别注意： 翻译源文件里面有很多的 id，而且还特别长. 这是因为在“1、组件模板中标记需要翻译的静态文本信息”时，没有给每一个标记 i18n 的地方添加 id，所以工具自动生成了随机 id。 这个 id 最好不要修改，一旦修改可能在文字替换时就对应不上。 如果模板文件有修改，则可能需要重新再生成一份翻译源文件，因为这些随机 id 可能已经变了。 当然，如果不嫌麻烦，可以给每个模板文件有标记 i18n 的地方，都给他添加 id，那么生成的翻译源文件的 id 就不会变。 模板中添加 id 使用示例： &lt;div class=&quot;word-align&quot; i18n=&quot;@@firstName&quot;&gt;First Name&lt;/div&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;(因为工具会生成随机 id，且如果需要翻译的文字太多，逐一设置 id 比较麻烦，所以我没有这样设 id) 4、修改 angular.json 配置文件4.1、添加编译配置打开 angular.json 文件，找到属性 projects–&gt;{angular-i18n-demo(angular 项目名)}–&gt;architect–&gt;build–&gt;configurations;在 production 同级属性，添加对不同语言的编译配置，如下图： 配置内容简单说明： 使用 AOT 方式编译 文件输出路径 i18n 文件位置 i18n 使用的格式 i18n 的位置 如果翻译有缺失报警告 添加基本路径 最后一条需要多说一点，就是翻译后，例如英文版本编译后访问的地址是http://localhost:4200/register，如果要看到中文版，则需要访问http://localhost:4200/register/zh-Hans 4.2、添加测试运行配置同样在 angular.json 文件，就在添加编译配置的父级 build 下一个属性 server，在 server–&gt;configurations 属性，在 production 同级属性，添加以下内容： 注意：ng serve 运行时只能一次运行一种语言的翻译，无法同时加载多种语言。 5、测试运行，查看效果到这里，我们就有了一个简体中文版本的注册页面可以看了。启动项目，在项目根目录启动终端输入 ng serve --configuration=zh-Hans -o --port 1234项目启动成功，则可以看到简体中文版注册页面了，如下图: 注意看 url，之前的英文版是直接的http://localhost:1234，现在简体中文版是http://localhost:1234/zh-Hans 如果觉得每次测试运行查看修改输入文字太长，可以修改 package.json 文件，在 script 属性下，新加一句 &quot;zh-Hans&quot;: &quot;ng serve --configuration=zh-Hans -o --port 1234&quot;就可以使用npm run zh-Hans启动了。 后续将 angular 项目便已打包部署到服务器例如 nginx，则可以设计点击按钮切换 url，切换语言，就和 MDN 一样效果。 例如https://developer.mozilla.org/en-US/docs/Glossary/JavaScript是英文，直接修改 url 为https://developer.mozilla.org/zh-CN/docs/Glossary/JavaScript就变成简体了。 小结到这里，angular i18n 多国语言使用说明就基本完了，更多的细节可以去 angular 官方国际化 i18n升华。 总结一下基本步骤： 准备好需要翻译的页面模板； 根据需要翻译的页面模板，创建对应的翻译源文件； 修改翻译源文件，添加标签即内容； 修改 angular 项目的配置； 运行查看结果。 源代码已放到github，已经整理添加了中文繁体、中文简体、英语、百度翻译版本日语，可参考配置 angular i18n 多国语言。","categories":[{"name":"技术文章","slug":"技术文章","permalink":"http://yoursite.com/categories/技术文章/"},{"name":"angular","slug":"技术文章/angular","permalink":"http://yoursite.com/categories/技术文章/angular/"}],"tags":[{"name":"angular","slug":"angular","permalink":"http://yoursite.com/tags/angular/"},{"name":"i18n","slug":"i18n","permalink":"http://yoursite.com/tags/i18n/"}]},{"title":"将Node.js项目打包为一个可执行文件","slug":"TechnicalEssays/pack-nodejs-project","date":"2019-12-18T14:25:53.000Z","updated":"2019-12-19T13:09:29.229Z","comments":true,"path":"2019/12/18/TechnicalEssays/pack-nodejs-project/","link":"","permalink":"http://yoursite.com/2019/12/18/TechnicalEssays/pack-nodejs-project/","excerpt":"","text":"实际上，nodejs 项目本来不需要做什么打包编译动作的，因为 js 本来也就不是编译型语言，只是个解释型语言，所以只要有 nodejs 运行环境，代码拷过去就能运行。 但是难免有些机器可能并没有安装 nodejs 运行环境，或者项目代码指定了 nodejs 的运行环境版本与实际不符合，就会多一个步骤去规整化运行环境的问题。 这本来不是个问题，那么简单打包后，变成一个可执行文件，就可以不用担心运行环境的问题了。 本文目的：将 Node 项目打包为可执行文件，可以在没有安装 Node.js 运行环境的设备上运行。 主要介绍两种将 nodejs 项目打包的工具，pkg 和 nexe。 使用 pkg 打包 nodejs 项目（网上推荐较多）注意 pkg 支持的 nodejs 版本问题注意：pkg 各个版本所支持的 Node 版本有所不同（主要集中在长期支持版本）。例如最新版本之 pkg4.4 不支持 Node9 版本。 如何查看 pkg 支持的 nodejs 版本？ 访问 pkg 源码 package.json,在”dependencies”属性中，查看”pkg-fetch”的版本。这个 pkg-fetch 可以获取的 nodejs 版本，就是 pkg 工具包可以打包的版本。 例如现在的 pkg 默认是 4.4.2，对应的 pkg-fetch 是 2.6.4，找到 pkg-fetch 对应版本的源文件中的 patches.json 文件，地址[https://github.com/zeit/pkg-fetch/blob/master/patches/patches.json],得到以下数据： 如果安装的 pkg 版本，和实际需要打包的 nodejs 项目的版本不同，则可能会出现类似pkg error no available node version satisfies &#39;node 9&#39;的报错信息。 为了节约大家的时间，秉承用新不用旧，我简单列举以下(2019/12/17 记)： nodejs 版本为 v12、v10、v8、v6、v4、v0.12，用 pkg4.4 版本；nodejs 版本为 v9，用 pkg4.3 版本；nodejs 版本为 v7，用 pkg4.2 版本； 我好像没找到 pkg-fetch 中的 patches.json 有支持 nodejs v11、v5 版本的，所有就不列示了。 一般习惯，还是使用长期支持版本的 nodejs 开发为好，这样也可以直接使用最新版本的 pkg 而忽略版本问题了。 安装配置全局安装：npm install -g pkg安装成功，输入pkg -h就可以看到指令信息了。 一般操作说明如下：pkg 的基本语法是pkg [options] &lt;input&gt;，那么 [option] 简单说明： -t:指定打包的目标平台和 Node 版本，如-t node12-linux-x64,node12-win-x64,node12-macos-x64.-c：指定一个 JSON 配置文件，用来配置额外的打包脚本或资源。–options:指定 Node 或 V8 运行时选项，打包后默认执行，通过–option name 取消。-o：指定输出可执行文件名称，若使用了-t 指定多个目标，则需要使用—out-path 指定输出路径。-d：输出打包日志，以便排查问题。-b：从 node 源代码编译 node 二进制文件，默认会下载官方预编译的文件，使用该选项便不会有前面说明的 Node 版本支持问题，初次编译会耗用大量时间。 &lt;input&gt;可通过三种方式指定: 项目的入口文件如：pkg app.js;项目的 package.json 文件，pkg 会使用 package.json 中配置 bin 属性作为入口文件。项目的路径，pkg 会寻找路径中的 package.json。 打包项目：我简单的生成一个 express 项目，然后用来说明打包过程 创建 express 项目（如果没有安装过 express-generator，需要先安装npm install express-generator -g，再使用） express node-express-demo1、首先在 package.json 中配置 bin 属性作为入口。添加以下属性（express 项目默认入口文件就是./bin/www）： &quot;bin&quot;: &quot;./bin/www&quot;如存在不能自动打包的文件（如：require（变量）、非 Javascript 文件），则需要通过 pkg 属性手动配置。同样在 package.json 中添加 pkg 属性，类似： &quot;pkg&quot;: { &quot;scripts&quot;: [&quot;xxx&quot;,&quot;xx&quot;], &quot;assets&quot;: [&quot;xxx&quot;,&quot;xx&quot;] }再执行 pkg 打包命令（注意你的 os 平台和 nodejs 版本，例如我的是 ubuntu 下 nodejs12.16 版本）： david@ubuntu:~/TTT/node-express-demo$ pkg -t node12-linux-x64 -o pkg-ned -b package.json &gt; pkg@4.4.2 &gt; Building base binary from source: built-v12.13.1-linux-x64 &gt; Cloning Node.js repository from GitHub... git [====================] 100% &gt; Checking out v12.13.1 &gt; Applying patches &gt; Compiling Node.js from sources... make [====================] 100% david@ubuntu:~/TTT/node-express-demo$这个首次编译打包等待时间可能会有好长，好长，好长，耐心等待一下。别看着没进度就忍不住把它终止了。但这是第一次执行时，后续同样的编译需求，则直接使用缓存的编译环境资源，就几秒钟了。 pkg 无法自动打包二进制模块文件，该类文件与平台有关，若依赖中包含此类文件需手动复制到打包后可执行文件目录下如 node-java 有编译 nodejavabridge_bindings.node 文件，需从 node_modules/java/build/Release 中复制出来。 运行打包后文件，程序可正常运行。 为方便使用，将 pkg 打包命令写入到 package.json,打包时运行 npm run pkg。 在 package.json 的 script 属性下，加入一句，例如： &quot;pkg&quot;: &quot;pkg -t node12-linux-x64 -o pkg-ned -b package.json&quot;打包成功后，可以在 nodejs 项目的根目录下看见生成了 pkg-ned 文件，直接运行示例如下： 待解决问题：我之前使用成品的项目打包时没有遇到，但是这次直接使用的 express-generator 生成的模板项目打包，则出现了，运行打包后可执行文件，首页访问报错的问题，如下图： 这个问题待我找到原因再补充上。 使用 nexe 打包 nodejs 项目（实际测试较好用）nexe 可以通过命令行将 Node 项目打包为可执行文件。值得一说的是，nexe 预编译之 Node 只有偶数版本，所以例如使用 v9 版本，只能自行编译。 安装 nexe：npm install -g nexe 安装成功后，终端输入 nexe -h就可以看到命令格式了。 一般使用格式是 nexe &lt;entry-file&gt; [options]简单说明[options]:-i：指定 Node 项目入口文件-o：指定输出可执行文件路径名称-t：指定編譯平臺 Node 版本（支援版本）-n：指定主模块名称-r：添加资源文件-a：指定已构建的 nexe 二进制文件–build：从源码编译 Node 最简单的使用 ，在 nodejs 项目下运行 nexe &lt;入口文件&gt;，例如我的是 .bin/www，但是 nodejs 版本是 9.x david@ubuntu:~/TTT/node-express-demo$ nvm use 9.11.2 Now using node v9.11.2 (npm v5.6.0) david@ubuntu:~/TTT/node-express-demo$ nexe ./bin/www ℹ nexe 3.3.2 ✔ Downloading pre-built Node.js ✔ Finished in 1.037s Error: https://github.com/nexe/nexe/releases/download/v3.0.0/linux-x64-9.11.2 is not available, create it using the --build flag See nexe -h for usage.. david@ubuntu:~/TTT/node-express-demo$因为没有 nodev9 不是预编译版本，所以报错。因此就需要使用–build，如下： nexe -i app.js -o nexe-ned -t linux-x64-9.11.2 --build需要等待一些时间，还需要联网。整个过程就是下载对应的 node 资源，然后编译，写文件。当然，这也是第一次执行时，后续同样的编译需求，则直接使用缓存的编译环境资源。 具体显示流程如下： david@ubuntu:~/TTT/node-express-demo$ nexe -i ./bin/www -o nexe-ned -t linux-x64-9.11.2 --build ℹ nexe 3.3.2 ✔ Node source extracted to: /home/david/.nexe/9.11.2 ✔ Node binary compiled ✔ Entry: &#39;bin/www&#39; written to: nexe-ned ✔ Finished in 2057.42s david@ubuntu:~/TTT/node-express-demo$运行效果如下： 小结总结起来，感觉使用 nexe 效果更好一点：首先没有版本限制，只是看能不能预编译(LTS 版本有预编译)；额外的配置需求相对较少；测试模板项目测试没有出现意外；首次编译打包的时间相对较短很多。 当然这只是我的个人看法，也有人询问过 nexe 和 pkg 的区别,也引用如下： nexe: Bundles the application if desired using webpack. Downloads node source (or a prebuilt binary) Adds your application bundle as a native module (like fs, http, path etc) Applies arbitrary source patches. Maybe compiles downloaded source Inserts bundle into pre-sized binary Code is run as main when executable is run (instead of the repl) pkg: Bundles the application with a custom v8 script compiler into a snapshot Downloads the node source (or a prebuilt binary) Applies arbitrary source patches Maybe compiles downloaded source Appends snapshotted output to the end of the binary Snapshot (cachedData from v8) is loaded/run when binary executes. (以上可窥见 pkg 打包文件首页访问出错原因) 不过两者都是不错的 nodejs 打包工具了，有需求都可能尝试一下。","categories":[{"name":"技术文章","slug":"技术文章","permalink":"http://yoursite.com/categories/技术文章/"},{"name":"nodejs","slug":"技术文章/nodejs","permalink":"http://yoursite.com/categories/技术文章/nodejs/"}],"tags":[{"name":"nodejs","slug":"nodejs","permalink":"http://yoursite.com/tags/nodejs/"},{"name":"pkg","slug":"pkg","permalink":"http://yoursite.com/tags/pkg/"},{"name":"nexe","slug":"nexe","permalink":"http://yoursite.com/tags/nexe/"}]},{"title":"使用 Verdaccio 搭建 npm 私有仓储","slug":"TechnicalEssays/verdaccio-private-registry","date":"2019-12-18T14:12:44.000Z","updated":"2019-12-19T13:09:16.897Z","comments":true,"path":"2019/12/18/TechnicalEssays/verdaccio-private-registry/","link":"","permalink":"http://yoursite.com/2019/12/18/TechnicalEssays/verdaccio-private-registry/","excerpt":"","text":"前言在 2018 年 1 月份的时候，我有开始搭建 npm 私有仓库，那个时候的 Sinopia 也已经停止维护 3 年了，而 verdaccio 还可能不是特别受欢迎，只有 1700 个 star，搭建 npm 私有仓库的工具还有不少。 但在我今天写此文的时候，已经有 8.5K 的 star 了，版本也从 2.7.1 更新到了 4.4，而且基本上没有别的比较好的选择可以替代了。 无营养的话，两年前 sinopia 有 4318 个 star，现在还是增加为 5.3k 了，即便一直没更新，优秀的作品依旧优秀。 安裝使用 Verdaccio（本文是在 Ubuntu 下）1、安裝 verdaccio verdaccio 是个发布在 npm 上的命令行工具。可以通过 npm 直接下载安装： npm install -g verdaccio2、開啓服務verdaccio 在文件系统上存储数据，没有额外依赖，而且提供了一套默认配置，我们可以直接启动仓储服务。 在终端直接输入： verdaccio 终端上的日志显示了默认配置文件路径和 verdaccio 工作的地址端口。 3、查看安裝成功效果浏览器打开http://localhost:4873/ ，页面如下： 不得不说，这比两年前有自我辨识度，之前看起来就像是山寨 npmjs。 4、修改 npm 默认仓库地址 不过目前直接使用的 npm install 还是会去找 npmjs 的，所以，如果需要将默认寻找的地址改为自己的私有仓库，则需要修改 npm 默认的仓库地址，修改如下： npm set registry http://localhost:4873/查看有没有修改成功，使用npm get registry，查看显示的地址即可。 5、卸载 verdaccio 当然，如果不想用了，就是一个 npm 下载的工具包而已，直接卸载即可： npm uninstall -g verdaccio常规的配置说明配置文件一般在home/{user}/.config/verdaccio/config.yaml，把{user}替换成你的主机用户名。 简单说明如下（注意与实际配置对比参看）： - storage: 设置托管或缓存包的存放目录 - auth: 权限控制 - htpasswd: 启用 htpasswd 插件管理权限 - file: 制定 htpasswd 文件路径，htpasswd 中存储者用户名和加密过的秘钥 - max\\*users: 最多允许注册用户数 - uplinks: 设置外部仓储，如果 verdaccio 找不到请求的包（非 verdaccio 托管），就会查找外部仓储。常见的有 - {name}: 外部仓储名称 - url: 访问路径 - timeout: 超时 - maxage: 默认值 2m，2m 钟内不会就同样的请求访问外部仓储 - fail\\*timeout: 如果外部访问失败，在多长时间内不回重试 - headers: 添加自定义 http 头当外部仓储访问请求中，例如 authorization: &quot;Basic YourBase64EncodedCredentials==&quot; - cache: 是否启用缓存，默认启用。 # 常用仓储有 npmjs: url: https://registry.npmjs.org yarnjs: url: https://registry.yarnpkg.com cnpmjs: url: https://registry.npm.taobao.org - packages: 包访问或发布控制 - {regexp}: 包名匹配正则。 - access: 访问控制，可选值有 - \\$all（用户不限制）, - \\$anonymous（用户不限制）, - \\$authenticated（所有登录用户）, username( 用户名，需指定具体用户，可指定多个用户，用户间空格隔开，如 secret super-secret-area ultra-secret-area)。 - publish: 发布控制， - proxy: 代理控制，设置的值必选现在 uplinks 中定义。 # 常用的包名正则有： \\*\\* # 匹配任意包 @\\*/\\_ # 匹配任意 scope 包 @npmuser/\\_ # 匹配 scope 为 npmuser 的包 npmuser-\\* # 匹配包名有 npmuser- 前缀的包 # 包名正则规范通 gitignore 一致，verdaccio 内部使用 minimatch 实现的，如果需要书写更复杂的正则，可以参考 [minimatch](https://www.npmjs.com/package/minimatch/) 文档。 - web: 前端展示页面控制 - title: 设置页面标题 - logo: 指定 logo 图片文件路径 - publish: 发布包是的全局配置 - allow_offline: 在外部仓储离线时是否允许发布。在发布包是 verdaccio 会检查依赖包有效性，这个过程中需要访问外部仓储。 - url_prefix: 设置资源文件路径前缀。默认不需要设置，但如果使用 nginx 代理并改写了请求路径，就需要指定了。 - listen: 设置服务运行地址端口，默认为 http://localhost:4873 支持的配置有： localhost:4873 # default value http://localhost:4873 # same thing 0.0.0.0:4873 # listen on all addresses (INADDR_ANY) https://example.org:4873 # if you want to use https [::1]:4873 # ipv6 unix:/tmp/verdaccio.sock # unix socket - https: HTTPS 证书配置 - key: path/to/server.key - cert: path/to/server.crt - ca: path/to/server.pem - log: 日志控制 - type: file, stdout, stderr, 其中 stdout 需要同时指定 path - level: trace | debug | info | http (default) | warn | error | fatal - format: json | pretty | pretty-timestamped - http_proxy: 设置以 http 形式访问外部仓储时使用的代理 - https_proxy: 设置以 https 形式访问外部仓储时使用的代理 - no_proxy: 不使用代理的请求路径 - max_body_size: 请求时上传的 json 允许的最大值 - notify: 当有包发布成功时，verdaccio 会发送通知。通知实际上是一次 http 请求。支持配置多套通知 - method: 请求方法 GET,POST 等 HTTP Method - packagePattern: 包匹配正则， 这儿为 js 正则，仅当发布的包名匹配正则时才发送通知 - packagePatternFlags: js 正则标志位，如 i 忽略大小写 - headers: 自定义请求头 - endpoint: 请求地址 - content: handlebar 格式 html 模板，可以使用变量详见 Package Metadata上传私有包1、创建包 新建一个文件夹，并npm init，再创建一个 index.js 文件，内容如下图，将此包示例为个人私有包。 2、发布包 首先在私有仓库服务器注册一个用户，此处注册成功会自动登入仓库，输入注册语句（之前访问http://localhost:4873上面有显示）： david@ubuntu:~$ npm adduser --registry http://localhost:4873 Username: david Password: Email: (this IS public) 183318×××@qq.com Logged in as david on http://localhost:4873/. david@ubuntu:~$ 如果之前有注册用户，此处可以直接登入 david@ubuntu:~$ npm login --registry http://localhost:4873 Username: david Password: Email: (this IS public) 183318×××@qq.com Logged in as david on http://localhost:4873/. david@ubuntu:~$登入成功之后，在刚刚创建的私有包的根目录下，运行发布包命令 npm publish，即可将包发布到私有仓库。 如果没有设定本机默认的 npm 仓库是指定的私有仓库，最好还是指定仓库位置，否则有可能是发布到 npmjs 上去。 david@ubuntu:~/TTT/privatePackage$ npm publish --registry http://localhost:4873 npm notice npm notice 📦 privatepackage@1.0.0 npm notice === Tarball Contents === ……省略一些npm notice…… npm notice + privatepackage@1.0.0 david@ubuntu:~/TTT/privatePackage$发布成功之后，再访问http://localhost:4873页面，就能看到已发布的私有包了。 当然后续下载使用，就和访问 npmjs 公共包是一样的。 其他常用操作与配置使用 pm2 启动verdaccio 毕竟还是一个 nodejs 程序，直接在命令行输入verdaccio启动了，保不齐因为何种原因崩溃。这类守护型工具，常用的就例如 forever 或者 pm2。以 pm2 为例，用最简单的pm2 start {program}来启动。 全局安装： npm install pm2 -g使用 pm2 start。 start 后跟 verdaccio 全局安装的启动地址： pm2 start {/home/david/.nvm/versions/node/v12.6.0/lib/node_modules/verdaccio/bin/verdaccio}如果不知道自己 mpnjs 全局安装的 package 的位置，输入npm config ls -l；找到参数 prefix. 例如我的就是prefix = &quot;/home/david/.nvm/versions/node/v12.6.0&quot;. 那么我的 start 的路径就是：/home/david/.nvm/versions/node/v12.6.0/lib/node_modules/verdaccio/bin/verdaccio，如下图： 浏览器显示公共包之前有说明，如果你把 verdaccio 私有仓库设为默认仓库，如果某个 package 在私有仓库没有找到，可以设定在链接的外部仓库去寻找，例如我全局安装了一个 doctoc 工具，npm install -g doctoc。 david@ubuntu:~$ npm i -g doctoc /home/david/.nvm/versions/node/v12.6.0/bin/doctoc -&gt; /home/david/.nvm/versions/node/v12.6.0/lib/node_modules/doctoc/doctoc.js + doctoc@1.4.0 updated 1 package in 7.961s david@ubuntu:~$因为我最开始，已经把 npm 的默认仓库地址改为私有地址了，又在配置文件中默认连接了 npmjs，所以执行这一句之后，首先在 verdaccio 的 storage 的位置找，找不到 doctoc，然后会去 npmjs (配置文件中的 uplinks 参数)去寻找，找到之后下载下来，也存放了一份到 storage 的位置。 现在去配置文件设置的 storage 的地址，应该是可以看到 doctoc 工具包，同样可以看到之前上传的 privatepackage 私有包： 当然，从安装结果可以看到，只是个索引，真实位置还是在 npm 全局安装的位置。 但是访问http://localhost:4873默认是不会显示的，一定程度来讲，共有的包也不必要显示在自家私有仓库内。 如果非要显示，也是可以的，修改显示的列表文件。 找到.verdaccio-db.json文件，默认就在私有仓库的设定 storage 的位置，verdaccio 默认位置~/.local/share/verdaccio/storage/.verdaccio-db.json.打开之后，把需要显示的包名，添加到 list 变量的对象中，如下图： 然后在重启 verdaccio。如果使用了 pm2，按上述说明作业，直接 pm2 restart verdaccio即可。如果还没有使用 pm2，直接关闭 verdaccio 的命令窗口在启动就好。 再访问http://localhost:4873，就可以看到 doctoc 包了，如下图： 以上实践有效，如果有问题，可提出交流，谢谢。","categories":[{"name":"技术文章","slug":"技术文章","permalink":"http://yoursite.com/categories/技术文章/"},{"name":"npm","slug":"技术文章/npm","permalink":"http://yoursite.com/categories/技术文章/npm/"}],"tags":[{"name":"npm","slug":"npm","permalink":"http://yoursite.com/tags/npm/"},{"name":"verdaccio","slug":"verdaccio","permalink":"http://yoursite.com/tags/verdaccio/"}]},{"title":"想着她的好，喜欢的不得了","slug":"OrdinaryArticles/Essay/05LikeTheGoodOfHer","date":"2019-12-18T11:28:37.000Z","updated":"2019-12-19T14:15:10.664Z","comments":true,"path":"2019/12/18/OrdinaryArticles/Essay/05LikeTheGoodOfHer/","link":"","permalink":"http://yoursite.com/2019/12/18/OrdinaryArticles/Essay/05LikeTheGoodOfHer/","excerpt":"","text":"&emsp;&emsp;今天不知道为什么，突然有了这样的情况，在不经意的几个瞬间，突然就在想着她的优点，甚至都觉得害羞，不好意思。 &emsp;&emsp;她长的漂亮，笑着也好看；工作勤劳，还能力优秀；性格开朗，又平易近人……不经意的几个照面，让我莫名心跳加速，面红耳赤，思绪纷飞。 &emsp;&emsp;这种感觉，似曾相识，就像是高中时，暗恋某个女同学一样。 &emsp;&emsp;然而大家都认识一年多，关系也ok，突然间就想着她的好，喜欢的不得了。 &emsp;&emsp;今日这感觉突兀的出现，肯定是有个解释的。如果我年轻十岁，我一定是喜悦中带着羞愧，兴奋中带着担忧。可惜，岁月老去，现在反而觉得是一种疾病，想着治愈。 &emsp;&emsp;所以，成年人的自觉，自我安慰。 &emsp;&emsp;回想到前一天，刚和领导交流完，关于前途和未来，都没有，看起来是非走不可了。但是领导似乎也带有七分真情，虽然3分资源不能给予，但是7分温情还能散播，不可谓没做挽留。本来之前一直也想走的同事，因为直属领导再往上级领导提出了对她的加薪申请，安抚住了躁乱的心情。另外一个，也因为时事不顺，流年不丰，担心走了之后难再如意就业。本来我也是受到他们的指点，才鼓起勇气，当面提出，但是情况不可谓积极。如果我年轻几年，不会有那么多的顾虑，说走就走，美其名，追求理想和自由。 &emsp;&emsp;昨天和同事吃饭的时候，顺便也说到了这个女生，就是这个我今天多次想念，见面还让我背脊出汗，浑身不安的女生。本来她也是早在8月份，就有辞职打算，困于没有新人接手工作，一直拖着。直到最近，领导用心良苦，为她争取调换部门，争取涨薪的机会。现在得知，她暂时也不打算离职了。她将调去的部门，正好就到隔壁部门，我就开玩笑的说了一句：“调到那部门，要是被别的小兔崽子泡走了是真亏啊。” &emsp;&emsp;所以说，看起来像一句玩笑话，难道我潜意识已经在认真思考了吗？ &emsp;&emsp;现实是残酷的，我也想相信这是突然间来电，有了感觉。但是从最近的情况了看，我不得不找到其它的借口。 &emsp;&emsp;她是一个优秀的女生，美丽的女生。人们大都喜欢美好的事物，尤其在烦躁混乱、情绪低落、前景灰暗的时候。总是希望有人能够带着走出困境。这些东西，可能是领袖精神，可能是榜样模范，可能是理想梦想……都是些想着去依靠、去信赖的东西，亦如黑暗中的火炬，荒漠中的指南针。我不是一个愿意一直呆着低谷的人，有的时候当失败成为习惯，就不免一直妥协，一直低迷，难以振作。如果主观能动性没有了积极能力，追求美好甚至成为了一种奖励。我可能只是把她想象成了一个偶像而已。 &emsp;&emsp;此外，当本来一起都想离开的人，逐一改变了自己的想法，对我，或多或少，可能会产生一些影响。像我这样的人，没有出众的本领，只有兢兢业业，勤勤恳恳的工作态度。离开了一个熟悉的地方，就混入了人潮洪流，毫无特色。我不知道我能不能抓住一两根救命稻草。身如柳絮随风飘，飘到哪里是哪里，我是不是真的能做到？但是，有一件事情不得不承认，一个人，一定比两个人自由。如果心有羁绊，负重前行，那么飘飞，可能并不是愉快的决定，美好的选择。是否在内心深处的自己，他自知我的飘飞，可能没有好的结果，试图寻找到一些放不下的事物，设障阻拦。孤心飘落随流水，一朝初阳共长天。 &emsp;&emsp;也许，只是常态不在意，突然间害怕失去后的失落。 &emsp;&emsp;也许，是真的不愿承认，自我意识的美好追求。 &emsp;&emsp;也许，真的就是弥补内心情感空白的一个企盼。 &emsp;&emsp;纷扰世界，或许只是一时冲动。","categories":[{"name":"一般文字","slug":"一般文字","permalink":"http://yoursite.com/categories/一般文字/"},{"name":"杂文随笔","slug":"一般文字/杂文随笔","permalink":"http://yoursite.com/categories/一般文字/杂文随笔/"}],"tags":[{"name":"爱情","slug":"爱情","permalink":"http://yoursite.com/tags/爱情/"}]},{"title":"是否受到了惩罚，才会后悔未曾抵制住诱惑？","slug":"OrdinaryArticles/Essay/04RegretForWhat","date":"2019-12-16T11:59:07.000Z","updated":"2019-12-19T14:04:37.007Z","comments":true,"path":"2019/12/16/OrdinaryArticles/Essay/04RegretForWhat/","link":"","permalink":"http://yoursite.com/2019/12/16/OrdinaryArticles/Essay/04RegretForWhat/","excerpt":"","text":"&emsp;&emsp;“诱惑”一般是作为贬义名词来使用的。如果让我来说，平时口语也常用省略语，所以也有可能指代“诱惑力”、“诱惑物”等名词。 &emsp;&emsp;最近心情不太平静，为了简单的发泄，在手指伤未好的情况下，我终究还是又去打篮球了。或许这就是心境的真实反馈，越是想排遣什么，越是难以实现。今天左手无名指头节关节处，又被别人的指甲戳掉了不小的一块肉，当时就血流不止，只能赶忙用水冲洗，然后把外套搭在肩上，匆匆回去。 &emsp;&emsp;当心情不好的时候，做一点自己喜欢的事情，大抵是好的缓解。如果我今天手指没有再度受伤，按照我的预期，应该是出了一身大汗，回到宿舍吹一吹风扇，痛快洗个热水澡，美美地躺在床上听听音乐，困乏睡觉。 &emsp;&emsp;做自己喜欢的事情，往往是一心一意的，那就没了打扰。所以在球场上跑跳的时候，我不觉得我是难过、我是悲伤。我不可能一直打球，至少在那一段时间，我应该是忘记了烦恼。 &emsp;&emsp;但是我忘了一个事，我的左手并没有痊愈，还是不太灵便，所以这次受伤，在寒冷冬季，则又需等待一个不短的复原周期。 &emsp;&emsp;做自己喜欢的事情，算不算被诱惑呢？ &emsp;&emsp;如果再等两天，我伤好了，打球必然会更加得心应手，舒展自如，或许就不会受伤了。 &emsp;&emsp;又或者，如果得知老板今天不会来巡视，正好事情不忙，会不会偷偷用手机上上网，逛逛网上商城看看剧？如果看见前面行人钱包掉在了地上，四下无人，打开钱包发现鼓鼓囊囊，会不会偷偷走在相反的路上？如果有人跟你说，用地上的报纸打死一只苍蝇，就能得到2千多人民币，如果再吃掉它就能获得1万5千人民币，你会不会做？如果钱真的到账了呢，游戏是否还继续？ &emsp;&emsp;一番甜言蜜语，一段信誓旦旦，保不齐可以得到一夜柔情；一句落井下石，一番冷嘲热讽，说不定就能摧毁意志人心。 &emsp;&emsp;有些事情，有些话，未必一定能忍住不做，忍住不说，如果没有发生意料之外的事情，并不用担心有什么后果。 &emsp;&emsp;如果我没有再度左手受伤，我完全不用在意为什么伤没好就去打球；如果没有人打我小报告，我就轻松舒适地度过一个工作日；如果我良心依旧安宁，白捡一大把钞票自我感觉良好；做点简单小事，就有大笔收入，有何不好…… &emsp;&emsp;往往是受到了惩罚，才会反思未曾抵制住诱惑。有一句俗话：善有善报，恶有恶报，不是不报，时候未到。这不就是给各种人都自我安慰的吗？或许等你没了，“报”都还没有来，不管是企盼还是担忧都将毫无意义。报应这种东西，信了，才有，不信，未必不可。 &emsp;&emsp;但是被动诱惑和主动作恶可不是同一件事情了。我不相信报应，我就想要打家劫舍，杀人放火。这是另外的范畴，动机不良，报应可能没有，惩戒必然随后。 &emsp;&emsp;为已然发生的事情暗自神伤，不如引以为戒，下不为例，岂不更好，如果你真的放得下的话。如果你完全没有受到伤痛，甚至还有些愉悦，你应该是不会后悔没有抵制住诱惑吧。","categories":[{"name":"一般文字","slug":"一般文字","permalink":"http://yoursite.com/categories/一般文字/"},{"name":"杂文随笔","slug":"一般文字/杂文随笔","permalink":"http://yoursite.com/categories/一般文字/杂文随笔/"}],"tags":[{"name":"杂谈","slug":"杂谈","permalink":"http://yoursite.com/tags/杂谈/"}]},{"title":"有些事来不及准备，但还是得面对","slug":"OrdinaryArticles/Essay/03ReadyForConsequence","date":"2019-12-15T04:16:06.000Z","updated":"2019-12-19T14:00:48.724Z","comments":true,"path":"2019/12/15/OrdinaryArticles/Essay/03ReadyForConsequence/","link":"","permalink":"http://yoursite.com/2019/12/15/OrdinaryArticles/Essay/03ReadyForConsequence/","excerpt":"","text":"&emsp;&emsp;上周某天晚上下班，为了排遣一下内心的烦闷，便去打了会篮球。可能在防守时有些积极，左手撞到了持球人的膝盖，导致我左手小指脱臼，直接向后翻了60度。我从来没有脱臼过，一时间主观感觉就是当时的场景我看着太吓人了，但鬼使神差地，我直接把它扳回去了，似乎还听见骨头“咔”的一声。 &emsp;&emsp;当时吧，小指两个关节处就明显变黑了，连带着我整个左手都使不上劲，随便碰着点啥都痛得不行。第二天上班时，一同事看见了，便询问了一句，得到经过后便说：你还自己扳了，扳错了咋办，你还是去医院看看吧。 &emsp;&emsp;突然觉得好像是这么回事，之前没有遇到过，看着手指向后弯折了就觉得害怕，也来不及思考，直接就扳回来了，还没来得及准备如果扳错了该怎么办。 &emsp;&emsp;好在是过了大概3、4天，感觉好点了，可以向内大概弯折30度了，其它几个手指头也可以使劲了。自我感慨庆幸没有把手指头扳坏。 &emsp;&emsp;所以那天下班后不是很想回宿舍，便又去看别人打球。站在场边背着手，就像个老大爷。可是后面来人凑组少个人，便叫我，我说我手指有伤打不了，他们连连说没事，你就在外面发发球就好了。盛情难却，既然都这么说了，那就去发发球吧。然而好歹不歹，我站在外面捡到一个弹到很远的篮板球，准备传给队友，被一个防守球员准备抢断，一把又打到了我左手手指。我那个痛得啊，连连直甩手。算是犯规了，那人也过来关切：没事吧？我也不能说别的：没事没事，戳到手指了。那一轮被打下了，我就悄悄地离开了球场。 &emsp;&emsp;就因为这样，手指的康复又慢了几天。 &emsp;&emsp;一开始的打球，我没有准备好面对手指会脱臼的情况，第二次打球，我也没有准备好面对又把手指弄伤的情况。没有人能考虑到所有的情况，然后针对每种情况做好对策。我想过打球会受伤，但是没想到是手指脱臼啊；我想过看球可能会被邀球，但是没想到那么热情推不掉啊；我想过伤没好打球可能会再伤，但是没想到我已经小心翼翼了还是发生了啊。…… &emsp;&emsp;有些顾虑使得你不得不面对一些风险。如果不是最近心情压抑，才不会想着去发泄一下；如果不是喜欢打篮球，也不会想着去打篮球排遣；如果不是盛情难却怕有口舌，也不会手指没好的情况下再去打球…… &emsp;&emsp;凡事有因果，但是如何处理这“果”，并不是都在预料。因为，由“果”溯“因”，这很简单，是基于已发生的事物去回推另一件或多件已发生的事物，但是，你追溯到了“因”，你却不能断定它一定会导致这个已经发生的“果”。 &emsp;&emsp;有些要做的事情，你永远不知道会导致的所有结果，所以你没法针对所有的结果做好准备。但是如果你已经做了这些事，你不得不面对这些事情产生的后果。 &emsp;&emsp;即便是逃避，那也是面对事物的选择。 &emsp;&emsp;计划之外，或者意外，才是检验一个人应变能力的好时机，但并不是所有人都能随机应变还处理得体。如果看到有些人的举动有违常规，说不定他就是没有准备好应对突然发生的事物，但是他不得不面对这已经发生的事情。 &emsp;&emsp;未知的事物让人敬畏，已知的事物同样应当如此。","categories":[{"name":"一般文字","slug":"一般文字","permalink":"http://yoursite.com/categories/一般文字/"},{"name":"杂文随笔","slug":"一般文字/杂文随笔","permalink":"http://yoursite.com/categories/一般文字/杂文随笔/"}],"tags":[{"name":"生活","slug":"生活","permalink":"http://yoursite.com/tags/生活/"}]},{"title":"Angular Schematics 简明教程","slug":"TechnicalEssays/angular-schematics-tutorial","date":"2019-12-12T12:39:17.000Z","updated":"2019-12-19T13:09:36.761Z","comments":true,"path":"2019/12/12/TechnicalEssays/angular-schematics-tutorial/","link":"","permalink":"http://yoursite.com/2019/12/12/TechnicalEssays/angular-schematics-tutorial/","excerpt":"angular schematics 101 :基本内容说明基础三问:angular schematics 是什么?有什么用?怎么用?","text":"angular schematics 101 :基本内容说明基础三问:angular schematics 是什么?有什么用?怎么用? angular schematics 是什么?首先要知道什么是 schematics(原理图):angular 官方文档说明: ①: 原理图是一个基于模板的支持复杂逻辑的代码生成器。它是一组通过生成代码或修改代码来转换软件项目的指令。 原理图会打包成集合（collection）并用 npm 安装。②: 原理图的集合可以作为一个强大的工具，以创建、修改和维护任何软件项目，特别是当要自定义 Angular 项目以满足你自己组织的特定需求时。例如，你可以借助原理图来用预定义的模板或布局生成常用的 UI 模式或特定的组件。你也可以使用原理图来强制执行架构规则和约定，让你的项目保持一致性和互操作性。 所以 简单来讲,angular schematics 就是 angular 生态圈中,针对 angular 项目的代码生成器。 所以 angular schematics 只是模板代码生成器?不可否则,schematics 最主要的作用就是代码生成器.有很多模板代码结构内容都是一样的,例如 component,每次新建一个 component,都需要复制上一份的代码进行修改. angular-cli 默认有一些可以按照模板生成的组件,例如 componet、router、service、interceptor 等等，这也是很多插件工具一键生成模板代码的依据。但是并不是所有代码都适合所有开发者。例如有些使用者常与 CURD 打交道，所以希望生成的 service 直接包含所有的 CRUD 函数，输入不同的名称对应生成不同产品。等等各自自适应、自构建的模板。 除此之外，它还能用于按照一定规则修改程式代码、快速按照所需模块等，就如引用的 angular 官方文档说明的第 ② 点。毕竟至少对应到了 ng generate 、 ng add 和 ng update 指令。 简单上手 angular schematics：创建一个 hello1、全局安装 schematics cli（需要 node 6.9 以上版本） npm install -g @angular-devkit/schematics-cli安装完成之后，可以在终端输入schmatics命令，能显示 schematics 的指令说明则表示安装成功。 2、创建一个空的原理图 schematics blank --name=hello生成的原理图中基本内容结构可参看官网说明集合的内容和命名原理图简单说明如下： collection.json 配置一般一个原理图就只配置一次，所以大部分内容都是在 index.ts 中实现，所以，一定先清楚这个文件的内容：具体可以参看官方说明原理图的概念简单说明如下： 3、运行原理图因为创建的是一个空白原理图，运行是不会有任何输出显示的。 3.1 在当前位置运行：先构建： npm run build再运行 schematics .:hello简单说明：ts 代码在编译之后转换成 js 代码才能运行，在原理图中，在执行npm run build之后，会出现其他的 XXX.d.ts、XXX.js、XXX.js.map。运行时，.:hello的.是当前位置，hello则是在 collection.json 中配置的原理图的名字。当然，一份 collection.json 中可以配置多个原理图，所以要指定使用的是哪一个。 “Nothing to be done.”显然没有任何意义，我们可以在 index.ts 中加入一句打印，看看效果： export function hello(_options: any): Rule { return (tree: Tree, _context: SchematicContext) =&gt; { console.log(&quot;hello&quot;); return tree; }; }那么再次编译运行之后，就可以看到输入的是： david@ubuntu:~/TTT/hello$ schematics .:hello hello Nothing to be done. david@ubuntu:~/TTT/hello$3.2 在相对路劲下运行如果现在不在 hello 下运行了，那么就不能直接.:了，需要找到该原理图的 collection.json 文件，并指定使用哪一个。例如在 hello 同级目录下新建个 test 文件夹，在 test 中运行则是： david@ubuntu:~/TTT/test$ schematics ../hello/src/collection.json:hello hello Nothing to be done. david@ubuntu:~/TTT/test$以上就是 angular schematics 的基础说明和运行，是不是毫无实际意义？没错。接下来，我们开始进入有点实际作用的内容。 angular schematics 实现 ng generator 使用模板生成组件本节会实现，在 angular 项目中，使用 ng generator 指令生成一个通用的 component 组件，和一般向后台请求数据需要包含 CRUD 函数的 service 组件。here we go。 准备工作新建一个空白 schematics，如下： schematics blank --name=angular-schematics-tutorial将原本的内容： 修改为： 为了方便，不用每次修改都运行 build，在此项目的 package.json 的 script 加入一行： &quot;build:watch&quot;: &quot;tsc -p tsconfig.json --watch&quot;使得该项目一致在 watch 状态下，然后运行 npm run build:watch准备工作完成，进入正题。 实现创建通用 component 组件一般每个命令原理图都包含以下内容： index.ts： 定义命名原理图中转换逻辑的代码。schema.json： 原理图变量定义。schema.d.ts： 原理图变量。files/： 要复制的可选组件/模板文件。 我们的也不例外。 创建 component 文件模板 template一般 angular component 会包含 4 个文件：XXX.html，XXX.scss，XXX.spec.ts，XXX.ts。所以，先准备好这些模板。 在/component 文件夹下新建 files 文件夹，并创建以下 4 个文件，效果如下： 简单说明两个函数： classify() 方法接受一个值，并返回标题格式（title case）的值。比如，如果提供的名字是 my service，它就会返回 MyService。dasherize() 方法接受一个值，并以中线分隔并小写的形式返回值。比如，如果提供的名字是 MyService，它就会返回 “my-service” 的形式。 此 component 模块的效果就是，在新建一个 component 时，输入 component 的名字，例如 apple，则会在该 angular 项目的 src/app/下，新建一个文件夹 apple，下面 4 个文件 apple.component.html， apple.component.scss，apple.component.spec.ts，apple.component.ts。 模板内容分别如下：__name@dasherize__.component.html.template文件： &lt;p&gt; &lt;%= dasherize(name) %&gt; works! &lt;/p&gt; __name@dasherize__.component.spec.ts.template文件： /* tslint:disable:no-unused-variable */ import { async, ComponentFixture, TestBed } from &#39;@angular/core/testing&#39;; import { By } from &#39;@angular/platform-browser&#39;; import { DebugElement } from &#39;@angular/core&#39;; import { &lt;%= classify(name) %&gt;Component } from &#39;./&lt;%= dasherize(name) %&gt;.component&#39;; describe(&#39;&lt;%= classify(name) %&gt;Component&#39;, () =&gt; { let component: &lt;%= classify(name) %&gt;Component; let fixture: ComponentFixture&lt;&lt;%= classify(name) %&gt;Component&gt;; beforeEach(async(() =&gt; { TestBed.configureTestingModule({ declarations: [&lt;%= classify(name) %&gt;Component] }) .compileComponents(); })); beforeEach(() =&gt; { fixture = TestBed.createComponent(&lt;%= classify(name) %&gt;Component); component = fixture.componentInstance; fixture.detectChanges(); }); it(&#39;should create&#39;, () =&gt; { expect(component).toBeTruthy(); }); });__name@dasherize__.component.ts.template文件： import { Component, OnInit } from &#39;@angular/core&#39;; @Component({ selector: &#39;app-&lt;%= dasherize(name) %&gt;&#39;, templateUrl: &#39;./&lt;%= dasherize(name) %&gt;.component.html&#39;, styleUrls: [&#39;./&lt;%= dasherize(name) %&gt;.component.scss&#39;] }) export class &lt;%=classify(name)%&gt;Component implements OnInit { constructor() { } ngOnInit() { } }scss 部分就没有必要了。此部分内容，可参考 angular-cli 源代码内容：angular-cli component 组件模板 配置 schema.json,定义该原理图可用选项在 component 文件夹下新建 schema.json，并输入以下内容： { &quot;$schema&quot;: &quot;http://json-schema.org/schema&quot;, &quot;id&quot;: &quot;componentSchema&quot;, &quot;title&quot;: &quot;component options schema.&quot;, &quot;type&quot;: &quot;object&quot;, &quot;descripiton&quot;: &quot;创建一个component范本&quot;, &quot;properties&quot;: { &quot;name&quot;: { &quot;description&quot;: &quot;component的名字.&quot;, &quot;type&quot;: &quot;string&quot;, &quot;$default&quot;: { &quot;$source&quot;: &quot;argv&quot;, &quot;index&quot;: 0 }, &quot;x-prompt&quot;: &quot;你想创建的component的名字:&quot; } }, &quot;required&quot;: [ &quot;name&quot; ] }属性说明： id：这个模式定义在集合中的唯一 id。title：一个人类可读的模式描述。type：由这些属性提供的类型描述符。properties：一个定义该原理图可用选项的对象。required：必填的选项 注意属性(proerties)选项： $default 的设定，上面的表示，如果没有指定输入的选项，那么输入的第一个就是 name x-prompt：如果没有输入选项，则提示语提示输入 创建好 schema.json 之后，一定要记得在 collection.json 中配置 schema 属性 创建 schema.d.ts,定义的各个选项的值一般的，可以手动创建 schema.d.ts，如本生成 component 的原理图，它的 schema.json 中属性只有一个必填的 name，那么编写的 schema.d.ts 内容就如下： export interface Schema { name: string; }实际上，这个文件可以使用指令生成，在 schema.json 的同级目录下，开启终端输入指令，如下： npx -p dtsgenerator dtsgen schema.json -o schema.d.ts效果如下 但注意，生成之后把 declare 改成 export，因为需要把这接口导出使用。 编写规则工厂逻辑代码以上都定义完之后，便到了最重要的环节，编写逻辑代码实现 componet 组件的生成。 简单分析，至少我们有以下几步工作需要完成：第一步：判断目标项目是不是 angular 项目。如果不在 angular 项目中去生成 angular 的 componet，那就没什么意义。这一步可以提出来通用。 同理，@schematics 对 angular 有很多的已有支持，我们这里可以用到一些便捷的方法，所以需要先安装@schematics/angular，输入指令如下： npm install @schematics/angular -S第二步：读取预设的模板 template 文件，并将使用者输入选项应用到模板。第三步：合并模板文件，返回新的 tree。 修改 index.ts 代码具体如下： import { Rule, SchematicContext, Tree, apply, mergeWith, url, move, applyTemplates, SchematicsException } from &#39;@angular-devkit/schematics&#39;; import { strings } from &#39;@angular-devkit/core&#39;; import { ComponentSchema as Schema } from &#39;./schema&#39; import { buildDefaultPath } from &#39;@schematics/angular/utility/project&#39;; import { parseName } from &#39;@schematics/angular/utility/parse-name&#39;; export function genComponent(_options: Schema): Rule { return (tree: Tree, _context: SchematicContext) =&gt; { // 获取到在angular cli工作区下的 路劲和要生成的组件 前缀name const { name, path } = getParsePath(tree, _options); // 读取模板文件 const sourceTemplates = url(&#39;./files&#39;); // 应用模板文件 const sourceParametrizedTemplates = apply(sourceTemplates, [ applyTemplates({ ..._options, ...strings, name }), move(path) ]); // 将传入的值(option)与模板文件合并(传入值替代模板变量值) return mergeWith(sourceParametrizedTemplates)(tree, _context); }; } function getParsePath(tree: Tree, options: any): any { // 读取angular.json文件并存为buffer const workspaceConfigBuffer = tree.read(&quot;angular.json&quot;) // 判断是不是在一个angular-cli工作区 if (!workspaceConfigBuffer) { throw new SchematicsException(&#39;不在angular cli工作区,请在angular项目中执行!&#39;) } // 读取并整理angular配置 const workspaceConfig = JSON.parse(workspaceConfigBuffer.toString()); // 有传入project属性或者是默认project const projectName = options.project || workspaceConfig.defaultProject; // 获取project定义 const project = workspaceConfig.projects[projectName]; // 获取默认project路径 const defaultProjectPath = buildDefaultPath(project); // parseName()可以把路径和文件名拆开,取得path和name // 例如 src/feartures/login,会被拆分为 path:src/features 和 name:login const parsePath = parseName(defaultProjectPath, options.name); return parsePath; }像上述的buildDefaultPath，parseName方法就是@schematics/angular 中提供的。 编写测试用例测试代码这个测试方面的内容也是个大项，这里就不多说明，简单说一下我们的测试用例。我的测试就是模拟生成一个 angular 项目，然后看看是否在里面生成了 component 的那 4 个文件，若有生成，那么通过，否则就失败。修改 index_spec.ts 代码如下： import * as path from &#39;path&#39;; import { SchematicTestRunner, UnitTestTree } from &#39;@angular-devkit/schematics/testing&#39;; import { Schema as ApplicationOptions, Style } from &#39;@schematics/angular/application/schema&#39;; import { Schema as WorkspaceOptions } from &#39;@schematics/angular/workspace/schema&#39;; import { strings } from &#39;@angular-devkit/core&#39;; const collectionPath = path.join(__dirname, &#39;../collection.json&#39;); describe(&#39;component&#39;, () =&gt; { // 选项 --name的值 const name = &#39;apple&#39;; const runner = new SchematicTestRunner(&#39;schematics&#39;, collectionPath); // 模拟ng new创建angular项目，主要对workspace和application进行配置 // angular项目的配置 const workspaceOptions: WorkspaceOptions = { name: &#39;workspace&#39;, // 不重要的名字，随意取，不影响测试结果 newProjectRoot: &#39;projects&#39;, // 项目app的根目录，可以随意取，但是验证会用到 version: &#39;6.0.0&#39;, // 版本号，随意，不影响测试 }; const appOptions: ApplicationOptions = { name: &#39;component&#39;, // 项目名称 inlineStyle: false, // 以下是项目属性，随意true/false，不影响测试结果 inlineTemplate: false, routing: false, style: Style.Css, skipTests: false, skipPackageJson: false, }; // 调用 SchematicTestRunner 的 runExternalSchematicAsync 方法，并以给出的参数生成angular项目 let appTree: UnitTestTree; beforeEach(async () =&gt; { appTree = await runner.runExternalSchematicAsync( &#39;@schematics/angular&#39;, &#39;workspace&#39;, workspaceOptions ).toPromise(); appTree = await runner.runExternalSchematicAsync( &#39;@schematics/angular&#39;, &#39;application&#39;, appOptions, appTree ).toPromise(); }); // 最基本的判断,如果生成的文件名和预期生成的文件名一致,就验证成功 it(&#39;works&#39;, async () =&gt; { // runSchematicAsync()参数：项目名、参数、Tree const tree = await runner.runSchematicAsync(&#39;component&#39;, { name }, appTree).toPromise(); const dasherizeName = strings.dasherize(name); /* 以下其实可以直接4个toContain代替*/ // 预期生成的文件 const expectFiles = [ `/projects/component/src/app/${dasherizeName}/${dasherizeName}.component.ts`, `/projects/component/src/app/${dasherizeName}/${dasherizeName}.component.html`, `/projects/component/src/app/${dasherizeName}/${dasherizeName}.component.scss`, `/projects/component/src/app/${dasherizeName}/${dasherizeName}.component.spec.ts`, ] // 如果实际模拟的angular项目中拥有预期生成的文件,则将它从expectFiles中移除 for (const v of tree.files) { for (let i = 0; i &lt; expectFiles.length; i++) { const e = expectFiles[i]; if (v.toString() === e) { expectFiles.splice(i, 1); } } } //如果预期生成的文件都有生成,那么预期的应该是0=0成立 expect(0).toEqual(expectFiles.length); }); });运行测试用例就很简单了，直接npm run test，如果测试成功，终端应该如下输出： david@ubuntu:~/TTT/angular-schematics-tutorial$ npm run test &gt; angular-schematics-tutorial@0.0.0 test /home/david/TTT/angular-schematics-tutorial &gt; npm run build &amp;&amp; jasmine src/**/*_spec.js &gt; angular-schematics-tutorial@0.0.0 build /home/david/TTT/angular-schematics-tutorial &gt; tsc -p tsconfig.json Randomized with seed 66156 Started . 1 spec, 0 failures Finished in 0.369 seconds Randomized with seed 66156 (jasmine --random=true --seed=66156) david@ubuntu:~/TTT/angular-schematics-tutorial$实际 angular 项目运行测试用例通过可能很好，但最好还是去实际项目中测试一下，向生成一个 angular 项目： ng new angular-demo在该 angular-demo 项目中运行指令angular-demo$ schematics ../angular-schematics-tutorial/src/，可以看到结果如下： david@ubuntu:~/TTT/angular-demo$ schematics ../angular-schematics-tutorial/src/collection.json:component --debug=false ? 你想创建的component的名字: comp/apple CREATE /src/app/comp/apple/apple.component.html (23 bytes) CREATE /src/app/comp/apple/apple.component.scss (0 bytes) CREATE /src/app/comp/apple/apple.component.spec.ts (755 bytes) CREATE /src/app/comp/apple/apple.component.ts (607 bytes) david@ubuntu:~/TTT/angular-demo$简单说明：其中指令 –debug=false 是为了实际生成文件，如果不加这一句，不会生成实际的文件。因为没有直接输入--name=comp/apple或者直接comp/apple,所以出现了输入提示语。直接输入 schematics ../angular-schematics-tutorial/src/collection.json:component --name=comp/apple --debug=false则不会出现提示语。 注意：如果已有同位置同名文件，再次生成会报错，提示already exists.。 我们查看生成的 component 组件模块内容： 可以看到，文件有实际生成，模板内容有被替换。 恭喜，如果到这里都正确，那么已经完成了自定义原理图的制作和使用了。 所以，想要生成一个具有 CRUD 函数的 service 步骤效果就是一样的，不再赘述，具体可参看代码。 理论上，一个原理图项目(schematics)可以有很多个原理图(schematic)，但是要在 collection 中统一指定配置。 总结制作原理图的一般步骤： 1、新建原理图使用模板文件； 2、创建该原理图需要的 schema.json 并将该原理图配置到 collection.json； 3、依照 schema.json 创建接口 schema.d.ts； 4、在 index.ts 中编写实现该原理图目的的逻辑代码； 5(非必须)、编写测试用例进行测试； 6(测试)、利用测试用例或实际项目进行测试。 angular schematics 实现 ng add 指令安装模块ng add 有什么用？ 将对外部库的支持添加到您的项目中。 如何使用？ ng add [options] 但是实际上，这个能够直接使用 ng add 也是应该这个需要添加的库，内部实现了对此原理图的功能。 举个例子，众所周知，angular material 可以直接使用 ng add 添加到已有的 angular 专案。执行ng add @angular/material。 效果如下： 但是，如果我想添加 Font Awesome 到 angular 项目，你就需要 npm install @fortawesome/fontawesome-svg-core npm install @fortawesome/free-solid-svg-icons npm install @fortawesome/angular-fontawesome@&lt;version&gt;然后手动引入模块,声明使用等等操作。 为什么不能使用 ng add？你看： font awesome 不支持直接的 ng add,因为 package 中没有实现导入等作业，所以只执行了安装。 所以本节的目标，就是编写一个原理图，实现 ng add 的时候1、一次性安装以上 3 个 package，2、在 app.module.ts 中引入 FontAwesomeModule3、在 app.component.ts 声明并在 app.component.html 实例化。 创建 ng add 的 schema.json 并配置在与之前 component 文件夹同级的路径下，创建 ng-add 文件夹。 在 ng-add 文件夹下创建 schema.json 文件，并编写如下内容： { &quot;$schema&quot;: &quot;http://json-schema.org/schema&quot;, &quot;id&quot;: &quot;NgAddSchema&quot;, &quot;title&quot;: &quot;Ng-Add Schema&quot;, &quot;type&quot;: &quot;object&quot;, &quot;description&quot;: &quot;给angular项目添加 Font-Awesome。&quot;, &quot;properties&quot;: { &quot;project&quot;: { &quot;type&quot;: &quot;string&quot;, &quot;description&quot;: &quot;给angular项目添加 Font-Awesome。&quot; } } }在 collection.json 中的 “schematics”添加子项，内容如下： &quot;ng-add&quot;: { &quot;description&quot;: &quot;给angular项目中添加 Font-Awesome库。&quot;, &quot;factory&quot;: &quot;./ng-add&quot;, &quot;schema&quot;: &quot;./ng-add/schema.json&quot; }注意名称保持 ng-add。 生成并导出 schema.d.ts 文件schema.d.ts 文件内容大概如下： /** * Ng-Add Schema * 给angular项目添加 Font-Awesome。 */ export interface NgAddSchema { /** * 给angular项目添加 Font-Awesome。 */ project?: string; }编写规则工厂实现逻辑代码在文件夹 ng-add 下新建 index.ts 文件，并写入以下代码： import { Rule, SchematicContext, Tree, SchematicsException } from &#39;@angular-devkit/schematics&#39;; import { buildDefaultPath } from &#39;@schematics/angular/utility/project&#39;; import { NodePackageInstallTask } from &#39;@angular-devkit/schematics/tasks&#39;; import { NgAddSchema } from &#39;./schema&#39;; import { addImportToModule } from &#39;@schematics/angular/utility/ast-utils&#39;; import { InsertChange } from &#39;@schematics/angular/utility/change&#39;; import * as ts from &#39;@schematics/angular/third_party/github.com/Microsoft/TypeScript/lib/typescript&#39;; export default function (_options: NgAddSchema): Rule { return (_tree: Tree, _context: SchematicContext) =&gt; { // 如果不是 Angular 项目则抛出错误 const workspaceConfigBuffer = _tree.read(&#39;angular.json&#39;); if (!workspaceConfigBuffer) { throw new SchematicsException(&#39;Not an Angular CLI workspace&#39;); } // 取得 project 的根目录 const workspaceConfig = JSON.parse(workspaceConfigBuffer.toString()); const projectName = _options.project || workspaceConfig.defaultProject; const project = workspaceConfig.projects[projectName]; const defaultProjectPath = buildDefaultPath(project); //将 FortAwesomeModule 加入 AppModule const modulePath = `${defaultProjectPath}/app.module.ts`; const sourceFile = readIntoSourceFile(_tree, modulePath); const importPath = &#39;@fortawesome/angular-fontawesome&#39;; const moduleName = &#39;FontAwesomeModule&#39;; const declarationChanges = addImportToModule(sourceFile, modulePath, moduleName, importPath); const declarationRecorder = _tree.beginUpdate(modulePath); for (const change of declarationChanges) { if (change instanceof InsertChange) { declarationRecorder.insertLeft(change.pos, change.toAdd); } } _tree.commitUpdate(declarationRecorder); // 将某个 icon 引入到 app.component.ts，再到 app.component.html 中使用它。（声明并实例化） // 获取 app.component.ts 的 AST const componentPath = `${defaultProjectPath}/app.component.ts`; const componentSourceFile = readIntoSourceFile(_tree, componentPath); // 取得所有的 ImpotDeclaration const allImports = componentSourceFile.statements.filter(node =&gt; ts.isImportDeclaration(node))! as ts.ImportDeclaration[]; // 找到最后一个 ImpotDeclaration let lastImport: ts.Node | undefined; for (const importNode of allImports) { if (!lastImport || importNode.getStart() &gt; lastImport.getStart()) { lastImport = importNode; } } // 找到 ClassDeclaration const classDeclaration = componentSourceFile.statements.find(node =&gt; ts.isClassDeclaration(node))! as ts.ClassDeclaration; // 取得所有的 property const allProperties = classDeclaration.members.filter(node =&gt; ts.isPropertyDeclaration(node))! as ts.PropertyDeclaration[]; // 取得最后一个 propery let lastProperty: ts.Node | undefined; for (const propertyNode of allProperties) { if (!lastProperty || propertyNode.getStart() &gt; propertyNode.getStart()) { lastProperty = propertyNode; } } const componentRecorder = _tree.beginUpdate(componentPath); const importFaCoffee = &#39;\\nimport { faCoffee } from \\&#39;@fortawesome/free-solid-svg-icons\\&#39;;&#39;; componentRecorder.insertLeft(lastImport!.end, importFaCoffee); // 添加声明部分的代码 const faCoffeeProperty = &#39;faCoffee = faCoffee;&#39; const changeText = lastProperty ? lastProperty.getFullText() : &#39;&#39;; let toInsert = &#39;&#39;; if (changeText.match(/^\\r?\\r?\\n/)) { toInsert = `${changeText.match(/^\\r?\\n\\s*/)![0]}${faCoffeeProperty}`; } else { toInsert = `\\n ${faCoffeeProperty}\\n`; } // 插入字串 if (lastProperty) { componentRecorder.insertLeft(lastProperty!.end, toInsert); } else { componentRecorder.insertLeft(classDeclaration.end - 1, toInsert); } _tree.commitUpdate(componentRecorder); //在 app.component.html 里面加上 &lt;fa-icon [icon]=&quot;faCoffee&quot;&gt;&lt;/fa-icon&gt; ： const htmlPath = `${defaultProjectPath}/app.component.html`; const htmlStr = `\\n&lt;fa-icon [icon]=&quot;faCoffee&quot;&gt;&lt;/fa-icon&gt;\\n`; const htmlSourceFile = readIntoSourceFile(_tree, htmlPath); const htmlRecorder = _tree.beginUpdate(htmlPath); htmlRecorder.insertLeft(htmlSourceFile.end, htmlStr); _tree.commitUpdate(htmlRecorder); // 修改 package.json const dependencies = [ { name: &#39;@fortawesome/fontawesome-svg-core&#39;, version: &#39;~1.2.25&#39; }, { name: &#39;@fortawesome/free-solid-svg-icons&#39;, version: &#39;~5.11.2&#39; }, { name: &#39;@fortawesome/angular-fontawesome&#39;, version: &#39;~0.5.0&#39; } ]; dependencies.forEach(dependency =&gt; { addPackageToPackageJson( _tree, dependency.name, dependency.version ); }); // 使用 Schematic安装3个依赖 Package 。 // 使用Angular Schematics 的 API - NodePackageInstallTask 。 _context.addTask( new NodePackageInstallTask({ packageName: dependencies.map(d =&gt; d.name).join(&#39; &#39;) }) ); return _tree; }; }; //读取文件 function readIntoSourceFile(host: Tree, modulePath: string): ts.SourceFile { const text = host.read(modulePath); if (text === null) { throw new SchematicsException(`File ${modulePath} does not exist.`); } const sourceText = text.toString(&#39;utf-8&#39;); return ts.createSourceFile(modulePath, sourceText, ts.ScriptTarget.Latest, true); } // 给package.json添加依赖包 function addPackageToPackageJson(host: Tree, pkg: string, version: string): Tree { if (host.exists(&#39;package.json&#39;)) { const sourceText = host.read(&#39;package.json&#39;)!.toString(&#39;utf-8&#39;); const json = JSON.parse(sourceText); if (!json.dependencies) { json.dependencies = {}; } if (!json.dependencies[pkg]) { json.dependencies[pkg] = version; json.dependencies = sortObjectByKeys(json.dependencies); } host.overwrite(&#39;package.json&#39;, JSON.stringify(json, null, 2)); } return host; } // 对象key排序 function sortObjectByKeys(obj: any) { return Object.keys(obj).sort().reduce((result, key) =&gt; (result[key] = obj[key]) &amp;&amp; result, {} as any); }代码不用细读，大约做了以下几件事： 1、判断是不是 angular 项目2、获取 angular.json 中参数配置3、在 app.module.ts 中引入 FontAwesomeModule4、在 app.component.ts 声明一个 Font5、在 app.component.html 实例化。6、修改模板项目 package.json 依赖列表，加入那 3 个库；7、实现那 3 个库的安装。…… 测试并使用如果需要写测试用例，那么可以 ng-add 文件夹下添加 index_spec.ts 并写代码(可参看源码) 直接在 angular 项目中实践： 如果到这里都正常，那么恭喜你，自定义原理库实现 ng add 也成功了！ angular schematics 实现 ng update 更新模块时修改指定组件内容上面 2 节分别实现了 ng generator 和 ng add，那么接下来就是 ng update 了。关于 angular schematics 自定义 ng update 的实践目前网上找的示例都比较少，还不是很清晰。我们这里也会做个实例，但是不会深究。 ng update 有什么用？ 更新您的应用程序及其依赖项。 如何使用？ ng update [options] 一般的，如果你的 angular 项目是老旧版本的，运行ng update指令，可能就会出现类似以下的内容： Using package manager: &#39;npm&#39; Collecting installed dependencies... Found 33 dependencies. We analyzed your package.json, there are some packages to update: Name Version Command to update -------------------------------------------------------------------------------- @angular/cdk 8.1.4 -&gt; 8.2.3 ng update @angular/cdk @angular/cli 8.3.0 -&gt; 8.3.20 ng update @angular/cli @angular/core 8.2.3 -&gt; 8.2.14 ng update @angular/core @angular/material 8.1.4 -&gt; 8.2.3 ng update @angular/material rxjs 6.4.0 -&gt; 6.5.3 ng update rxjs 大家可以仔细看看，这份分析结果说明了什么？一共有 33 个依赖，但是只有 5 个可以使用 ng update 升级？从哪里看出哪些依赖能用 ng update 升级？各个依赖包的 package.json ug update 的原理逻辑还是比较复杂了，其实直接看 angular-cli 的升级，比较容易看出端倪。 访问https://github.com/angular/angular-cli/tree/master/packages/schematics/angular/migrations， 查看 migration-collection.json 文件，随意选一个，例如以下： // 上略 &quot;migration-07&quot;: { &quot;version&quot;: &quot;8.0.0-beta.12&quot;, &quot;factory&quot;: &quot;./update-8&quot;, &quot;description&quot;: &quot;Update an Angular CLI project to version 8.&quot; }, // 下略看起来大概意思就是，ug update 将 angular 升级到 8.0.0-beta.12 版本时，就会执行migration-07的升级相关命令，其工厂函数内容就在 update-8 的文件夹中。 有兴致可以细研究 ng update 到 8.0.0-beta.12 具体做了什么。我们只需要简单知道migration-07他会依照相关规则去执行一些动作。 那么，这份migration-collection.json是在哪里使用的呢？ 可以看到，在这里：https://github.com/angular/angular-cli/blob/master/packages/angular/cli/package.json，在 angular-cli 的 package.json 文件中被定义的。 以上只是一些我在知道结果之后抛出来给大家看的关键点，大家可以深入研究。我在这里，就简单写个示例，供分析。 注意：为了后续 ng update 实际使用效果，在此时进行后续作业前，可将现在的代码备份一下，作为 0.0.1 版本。 版本号的更改当然在 package.json 中。 本节需要实现的目标是：1、本 angular-schematics-tutorial package 在 angular 项目中使用时，可以使用 ng update 进行升级2、在升级到指定版本时，能够按照升级需求修改已有 angular 项目中部分规则内容。 这也是在使用 ng update 升级 angular 项目时，可以看到很多旧版本的写法，他会自动纠正成新版本的写法。 不过，依照我的简单总结，使用 ng update 升级，其实有几点要做： 创建 migration.json 文件在 src/文件夹下，与 collection.json 同级目录，新建 migration.json 文件(名字虽然不限制，但是以便识别)，并写入以下内容： { &quot;$schema&quot;: &quot;../node_modules/@angular-devkit/schematics/collection-schema.json&quot;, &quot;schematics&quot;: { &quot;migration002&quot;: { &quot;version&quot;: &quot;0.0.2&quot;, &quot;description&quot;: &quot;更新angular-schematics-tutorial到0.0.2版本时执行的更新&quot;, &quot;factory&quot;: &quot;./ng-update/index#update&quot; } } }此份说明，当后续把这个 schematics 项目打包之后，其他 angular 项目中使用了这个包，升级到 0.0.2 版本时，就要执行在/ng-update/index.ts 文件中的逻辑规则更新代码了。 在 package.json 中声明 ug-update 配置在 package.json 中，添加以下项目： &quot;ng-update&quot;: { &quot;migrations&quot;: &quot;./src/migration.json&quot; },其作用，就是在执行 ng update 时，能够找到对应的配置文件 编写更新执行的规则工厂逻辑代码因为只是简单示例，我简单的实现，如果把此 angular-schematics-tutorial 包升级到了 0.0.2 版本，那么一并更新 app.component.ts 里面的 title 变量的值，为AngularSchematicsTutorial002，如果在我之前使用的测试 angular-demo 中运行，可以先看到，目前的 title 值应该是title = &#39;angular-demo&#39;;。 在 component 同级文件夹路径下新建 ng-update 文件夹，并添加 index.ts 文件，并添加以下代码： import { Rule, Tree, SchematicContext, SchematicsException } from &#39;@angular-devkit/schematics&#39;; import { buildDefaultPath } from &#39;@schematics/angular/utility/project&#39;; import * as ts from &#39;typescript&#39;; export function update(): Rule { return (_tree: Tree, _context: SchematicContext) =&gt; { // 解析angular项目 const workspaceConfigBuffer = _tree.read(&#39;angular.json&#39;); if (!workspaceConfigBuffer) { throw new SchematicsException(&#39;Not an Angular CLI workspace&#39;); } const workspaceConfig = JSON.parse(workspaceConfigBuffer.toString()); const projectName = workspaceConfig.defaultProject; const project = workspaceConfig.projects[projectName]; const defaultProjectPath = buildDefaultPath(project); // 把 app.component.ts 转成 Typescript AST const componentPath = `${defaultProjectPath}/app.component.ts`; const componentSourceFile = readIntoSourceFile(_tree, componentPath); // 找出 title 变量 const classDeclaration = componentSourceFile.statements.find(node =&gt; ts.isClassDeclaration(node))! as ts.ClassDeclaration; const allProperties = classDeclaration.members.filter(node =&gt; ts.isPropertyDeclaration(node))! as ts.PropertyDeclaration[]; const titleProperty = allProperties.find(node =&gt; node.name.getText() === &#39;title&#39;); // 如果有找到 title 变量，则修改它的值 if (titleProperty) { const initialLiteral = titleProperty.initializer as ts.StringLiteral; const componentRecorder = _tree.beginUpdate(componentPath); const startPos = initialLiteral.getStart(); componentRecorder.remove(startPos, initialLiteral.getWidth()); componentRecorder.insertRight(startPos, &#39;\\&#39;AngularSchematicsTutorial002\\&#39;&#39;); _tree.commitUpdate(componentRecorder); } return _tree; } } function readIntoSourceFile(host: Tree, modulePath: string): ts.SourceFile { const text = host.read(modulePath); if (text === null) { throw new SchematicsException(`File ${modulePath} does not exist.`); } const sourceText = text.toString(&#39;utf-8&#39;); return ts.createSourceFile(modulePath, sourceText, ts.ScriptTarget.Latest, true); }内容可不细看，就是找到 angular 项目中的 app.component.ts，把 title 的值改为 AngularSchematicsTutorial002。 测试并使用当然，再次在 ng-update/index.ts 下创建 index_spec.ts 编写测试用例也是 ok 的，源代码中会给出。若不用这个麻烦，可以直接在之前的 angular-demo 专案的测试，不过因为是相对路径，则不能直接使用 ng update 了，因为它不知道去哪里判断是不是新版本的更新。 在 angular-demo 中运行： schematics ../angular-schematics-tutorial/src/migration.json:migration002 --debug=false执行之后，应该会得到以下结果： david@ubuntu:~/TTT/angular-demo$ schematics ../angular-schematics-tutorial/src/migration.json:migration002 --debug=false UPDATE /src/app/app.component.ts (318 bytes) david@ubuntu:~/TTT/angular-demo$并且，app.component.ts 中title = &#39;angular-demo&#39;;变成了title = &#39;AngularSchematicsTutorial002&#39;; 如果能够运行成功，说明 angular schematics 构建 ng update 原理图也学习完成。 将原理图 package 发布并使用以上在执行时，都是使用相对路径在项目中运行，一点都不专业？那么我们可以把这个 schematics 工具包发布，后续直接使用 ng 指令运行。 使用 npm link 本地调试可以在我们的 angular-schematics-tutorial 项目目录下，运行npm link指令。npm link 指令细节可参看https://docs.npmjs.com/cli/link.html。主要作用就是创建一个全局可访问链接符号。执行之后得到的效果应该如下： david@ubuntu:~/TTT/angular-schematics-tutorial$ npm link npm WARN angular-schematics-tutorial@0.0.2 No repository field. audited 78 packages in 1.031s found 0 vulnerabilities /home/david/.nvm/versions/node/v12.6.0/lib/node_modules/angular-schematics-tutorial -&gt; /home/david/TTT/angular-schematics-tutorial david@ubuntu:~/TTT/angular-schematics-tutorial$然后在模板 angular 项目中，链接刚刚的全局 angular-schematics-tutorial 链接。npm link angular-schematics-tutorial，相当于在当前项目安装了之前 link 的包，然后就可以在 angular 项目中直接使用 ng g 或 ng add 了。 例如在 angular-demo 项目中 link angular-schematics-tutorial ，应该如下： david@ubuntu:~/TTT/angular-demo$ npm link angular-schematics-tutorial /home/david/TTT/angular-demo/node_modules/angular-schematics-tutorial -&gt; /home/david/.nvm/versions/node/v12.6.0/lib/node_modules/angular-schematics-tutorial -&gt; /home/david/TTT/angular-schematics-tutorial david@ubuntu:~/TTT/angular-demo$然后使用 ng generator： david@ubuntu:~/TTT/angular-demo$ ng g angular-schematics-tutorial:component ? 你想创建的component的名字: comp/pie CREATE src/app/comp/pie/pie.component.html (21 bytes) CREATE src/app/comp/pie/pie.component.scss (0 bytes) CREATE src/app/comp/pie/pie.component.spec.ts (741 bytes) CREATE src/app/comp/pie/pie.component.ts (259 bytes) david@ubuntu:~/TTT/angular-demo$注意：现在不用设置 –debug=false 属性，一样会直接真实创建了。 同理，使用 ng add angular-schematics-tutorial： david@ubuntu:~/TTT/angular-demo$ ng add angular-schematics-tutorial Skipping installation: Package already installed UPDATE src/app/app.module.ts (407 bytes) UPDATE src/app/app.component.ts (302 bytes) UPDATE src/app/app.component.html (25506 bytes) UPDATE package.json (1439 bytes) npm WARN axobject-query@2.1.1 requires a peer of eslint@^5 || ^6 but none is installed. You must install peer dependencies yourself. …… 省略了一些npm WARN …… npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.1.2: wanted {&quot;os&quot;:&quot;darwin&quot;,&quot;arch&quot;:&quot;any&quot;} (current: {&quot;os&quot;:&quot;linux&quot;,&quot;arch&quot;:&quot;x64&quot;}) + @fortawesome/free-solid-svg-icons@5.11.2 + @fortawesome/fontawesome-svg-core@1.2.25 + @fortawesome/angular-fontawesome@0.5.0 added 4 packages from 25 contributors, removed 1 package and audited 18882 packages in 11.067s found 0 vulnerabilities david@ubuntu:~/TTT/angular-demo$ 注意：如果之前执行过，最好撤销后再试。看到上面显示这一句Skipping installation: Package already installed，这里 already installed 的 package 指的是 angular-schematics-tutorial，原因在于我们使用 npm link angular-schematics-tutorial 已经做了链接了。 那么，能否直接测试 ng update 呢？目前我是没有成功的。 因为 npm link 无法同时测试两个版本？这点可请大家指出。 注意，测试完了请使用 npm unlink 去清除那些链接，避免混乱等情况。 将原理图 package 发布到仓库并使用写在前面：如果觉得这样的糟粕不想自己发布用于测试，可以直接使用我已发布的进行测试。先安装 0.0.1 版本：npm i angular-schematics-tutorial@0.0.1然后执行ng update，查看是否生效。 一般如果公司有自己内部的包管理系统，那么就可以直接发布到内部去。如何搭建私有 npm 仓库？我之前有文件，使用 verdaccio。 我们这里示例将包发布到公网的 npmjs.com 去。既然是 npmjs，那可能你要去注册个帐号了。 记得前面我们有备份一个 0.0.1 版本的 angular-schematics-tutorial 吗？我们先来发布它。 添加帐号，在终端输入 adduser，按提示填写david@ubuntu:~/TTT/angular-schematics-tutorial$ npm adduser Username: davidsu Password: Email: (this IS public) 183318××××@qq.com Logged in as davidsu on https://registry.npmjs.org/. david@ubuntu:~/TTT/angular-schematics-tutorial$logged in 表示成功 在根目录执行npm publish得到结果如下： david@ubuntu:~/TTT/angular-schematics-tutorial$ npm publish npm notice npm notice 📦 angular-schematics-tutorial@0.0.1 npm notice === Tarball Contents === …… 略一大部分 npm notice 内容 …… npm notice === Tarball Details === npm notice name: angular-schematics-tutorial npm notice version: 0.0.1 npm notice package size: 11.3 kB npm notice unpacked size: 41.2 kB npm notice shasum: 9f80b36542065cafb2eb06a5eceb068d5aa9db44 npm notice integrity: sha512-oZcVhqatHlU9K[...]Qz7Deicn1f3oA== npm notice total files: 34 npm notice + angular-schematics-tutorial@0.0.1 david@ubuntu:~/TTT/angular-schematics-tutorial$那么没有添加 ng update 的 0.0.1 版本就发布了，可以在 npmjs 网站自己的账户下查看自己发布的包。 发布 0.0.2 版本的包重复以上动作(npm publish)，把 angular-schematics-tutorial 的 0.0.2 版本的包也发布了，那么就可以看到自己两个版本的包了。 实际测试使用现在，我们的 angular-schematics-tutorial 就是一个可以被所有人访问的原理图工具包了，那么我们就可以像实际使用包一样去测试它了。 为了避免干扰，可以删除之前的 angular-demo 测试项目，新建一个 angular-test 的新项目 ng new angular-test我们先测试 ug update 的效果。 先安装 0.0.1 版本： npm i angular-schematics-tutorial@0.0.1然后运行ng update指令，应该看到以下内容 david@ubuntu:~/TTT/angular-test$ ng update Using package manager: &#39;npm&#39; Collecting installed dependencies... Found 31 dependencies. We analyzed your package.json, there are some packages to update: Name Version Command to update -------------------------------------------------------------------------------- angular-schematics-tutorial 0.0.1 -&gt; 0.0.2 ng update angular-schematics-tutorial rxjs 6.4.0 -&gt; 6.5.3 ng update rxjs david@ubuntu:~/TTT/angular-test$现在，我们可以直接使用 ng update 去升级我们的工具包了。注意：使用 ng update 升级前，要提交所有变更。运行ng update angular-schematics-tutorial，注意查看 app.component.ts 中 title 变量是否变化： david@ubuntu:~/TTT/angular-test$ ng update angular-schematics-tutorial Using package manager: &#39;npm&#39; Collecting installed dependencies... Found 31 dependencies. Fetching dependency metadata from registry... Updating package.json with dependency angular-schematics-tutorial @ &quot;0.0.2&quot; (was &quot;0.0.1&quot;)... UPDATE package.json (1329 bytes) npm WARN axobject-query@2.1.1 requires a peer of eslint@^5 || ^6 but none is installed. You must install peer …… 省略一些npm WARN …… npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.1.2: wanted {&quot;os&quot;:&quot;darwin&quot;,&quot;arch&quot;:&quot;any&quot;} (current: {&quot;os&quot;:&quot;linux&quot;,&quot;arch&quot;:&quot;x64&quot;}) updated 1 package and audited 18955 packages in 8.615s found 0 vulnerabilities ** Executing migrations for package &#39;angular-schematics-tutorial&#39; ** UPDATE src/app/app.component.ts (233 bytes) david@ubuntu:~/TTT/angular-test$从最后一行，看到，应该是修改了，实际也如此。 其他的 ng generator 的原理图和 ng add 的原理图也是可以的，可以自行测试。例如：ng g angular-schematics-tutorial:crudService或者ng add angular-schematics-tutorial 总结花费了如此大量的篇幅，基本上讲清楚了 angular schematics 的基本使用内容。虽然看起来很鸡肋，但是如果是 angular 技术栈并且长期有重复大量相同工作的开发，不免可以试一下使用它来重构下作业流程。虽然不一定比 ctrl+c ctrl+v 快，但是至少逼格更高了。 总结一下使用 angular schematics 的步骤重点。 制作 ng generator 或 ng add 原理图：1、新建原理图使用模板文件；2、创建该原理图需要的 schema.json 并将该原理图配置到 collection.json；3、依照 schema.json 创建接口 schema.d.ts；4、在 index.ts 中编写实现该原理图目的的逻辑代码；5(非必须)、编写测试用例进行测试；6(测试)、利用测试用例或实际项目进行测试。 添加 ng update1、创建并编写 migration.json 文件；2、在 package.json 中声明 ug-update 配置；3、编写更新执行的规则工厂逻辑代码；4、测试并使用。 以上内容亲测有效，有问题可提出交流，谢谢。 主要参考：https://ithelp.ithome.com.tw/articles/10222826https://medium.com/@tomastrajan/total-guide-to-custom-angular-schematics-5c50cf90cdb4和 angular 官方文档：https://angular.cn/guide/schematics","categories":[{"name":"技术文章","slug":"技术文章","permalink":"http://yoursite.com/categories/技术文章/"},{"name":"angular","slug":"技术文章/angular","permalink":"http://yoursite.com/categories/技术文章/angular/"}],"tags":[{"name":"angular","slug":"angular","permalink":"http://yoursite.com/tags/angular/"},{"name":"schematics","slug":"schematics","permalink":"http://yoursite.com/tags/schematics/"}]},{"title":"只言片语——angular material input输入框可以辅助下拉选择","slug":"TechnicalEssays/snippets-angular-input-with-select","date":"2019-12-12T11:50:49.000Z","updated":"2019-12-19T13:09:27.534Z","comments":true,"path":"2019/12/12/TechnicalEssays/snippets-angular-input-with-select/","link":"","permalink":"http://yoursite.com/2019/12/12/TechnicalEssays/snippets-angular-input-with-select/","excerpt":"在 angular 使用 material 开发时，如果需要一个输入框，既可以自行输入值，还可以点击下拉选择预设的选项输入值，可以使用 autocomplete 标签。","text":"在 angular 使用 material 开发时，如果需要一个输入框，既可以自行输入值，还可以点击下拉选择预设的选项输入值，可以使用 autocomplete 标签。 需要引入 MatAutocompleteModule 模块 import {MatAutocompleteModule} from &#39;@angular/material/autocomplete&#39;;在 xxx.ts 中定义了下拉选项，例如： options = [ { value: &#39;00:30:00&#39;, column: &#39;30分钟&#39; }, { value: &#39;01:00:00&#39;, column: &#39;1小时&#39; }, { value: &#39;01:30:00&#39;, column: &#39;90分钟&#39; }, { value: &#39;02:00:00&#39;, column: &#39;2小时&#39; }, { value: &#39;05:00:00&#39;, column: &#39;5小时&#39; } ];在 xxx.html 中使用示例如下： &lt;span&gt;持续时间：&lt;/span&gt; &lt;mat-form-field style=&quot;width:150px&quot;&gt; &lt;input placeholder=&quot;自行输入或下拉选择&quot; matInput [matAutocomplete]=&quot;auto&quot;&gt; &lt;mat-autocomplete #auto=&quot;matAutocomplete&quot;&gt; &lt;mat-option *ngFor=&quot;let option of options&quot; [value]=&quot;option.value&quot;&gt; {{option.column}} &lt;/mat-option&gt; &lt;/mat-autocomplete&gt; &lt;/mat-form-field&gt;得到的效果如下：","categories":[{"name":"技术文章","slug":"技术文章","permalink":"http://yoursite.com/categories/技术文章/"},{"name":"angular","slug":"技术文章/angular","permalink":"http://yoursite.com/categories/技术文章/angular/"}],"tags":[{"name":"angular","slug":"angular","permalink":"http://yoursite.com/tags/angular/"}]},{"title":"只言片语——angular ngFor遍历显示2个数组值","slug":"TechnicalEssays/snippets-angular-ngfor","date":"2019-12-12T11:48:43.000Z","updated":"2019-12-19T13:09:26.008Z","comments":true,"path":"2019/12/12/TechnicalEssays/snippets-angular-ngfor/","link":"","permalink":"http://yoursite.com/2019/12/12/TechnicalEssays/snippets-angular-ngfor/","excerpt":"angular 的*ngFor 只能遍历 1 个数组，但是能够获取到 index，所以以第一个数组的 index 带出第二个数组的值显示即可。","text":"angular 的*ngFor 只能遍历 1 个数组，但是能够获取到 index，所以以第一个数组的 index 带出第二个数组的值显示即可。 例如，在 xxx.ts 中有声明两个数组： names = [&#39;张三&#39;, &#39;李四&#39;, &#39;王五&#39;, &#39;马六&#39;]; ages = [32, 34, 54, 25];在 xxx.html 中如此使用： &lt;div&gt; &lt;li *ngFor=&quot;let name of names; let i=index &quot;&gt; &lt;label&gt;{{name}} ~ {{ages[i]}}岁&lt;/label&gt; &lt;/li&gt; &lt;/div&gt;得到的效果图如下： 当然，如果两个数组的长度不一致，要么显示空白(ngFor 遍历的数组长度值大)，要么不显示值(ngFor 遍历的数组长度值小。)","categories":[{"name":"技术文章","slug":"技术文章","permalink":"http://yoursite.com/categories/技术文章/"},{"name":"angular","slug":"技术文章/angular","permalink":"http://yoursite.com/categories/技术文章/angular/"}],"tags":[{"name":"angular","slug":"angular","permalink":"http://yoursite.com/tags/angular/"}]},{"title":"Ubuntu18.04下docker基本指令和使用docker安装mysql","slug":"TechnicalEssays/ubuntu-mysql-docker","date":"2019-12-12T11:30:48.000Z","updated":"2019-12-19T13:13:07.159Z","comments":true,"path":"2019/12/12/TechnicalEssays/ubuntu-mysql-docker/","link":"","permalink":"http://yoursite.com/2019/12/12/TechnicalEssays/ubuntu-mysql-docker/","excerpt":"docker 基本指令安装dockersudo sh -c &quot;$(curl -fsSL https://get.docker.com)&quot; sudo usermod -aG docker $USER 第一行用docker官方提供的script快速安装第二行将现有的使用者加入docker群组，否则会没有权限操作docker命令。记得注销账号重登，以获取docker操作权限。","text":"docker 基本指令安装dockersudo sh -c &quot;$(curl -fsSL https://get.docker.com)&quot; sudo usermod -aG docker $USER 第一行用docker官方提供的script快速安装第二行将现有的使用者加入docker群组，否则会没有权限操作docker命令。记得注销账号重登，以获取docker操作权限。 执行sudo docker run hello-world查看是否安装成功。如果出现以下画面则安装成功： 常用docker基本指令1 启动/关闭 docker服务 service docker start 或者 systemctl start docker // 启动 service docker stop 或者 systemctl stop docker // 关闭2 创建一个新的容器并运行一个命令 docker run [OPTIONS] IMAGE [COMMAND] [ARG...]常用OPTIONS说明： -a stdin: 指定标准输入输出内容类型，可选 STDIN/STDOUT/STDERR 三项； -d: 后台运行容器，并返回容器ID； -i: 以交互模式运行容器，通常与 -t 同时使用； -P: 随机端口映射，容器内部端口随机映射到主机的高端口; -p: 指定端口映射，格式为：主机(宿主)端口:容器端口; -t: 为容器重新分配一个伪输入终端，通常与 -i 同时使用； -e &lt;环境变量名&gt;=”&lt;值&gt;”: 设置环境变量； –name=”“: 为容器指定一个名称； 例如:使用docker镜像nginx:latest以后台模式启动一个容器,并将容器命名为mynginx。 docker run --name mynginx -d nginx:latest3 只创建而不运行容器(选项同option) docker create [OPTIONS] IMAGE [COMMAND] [ARG...]4 删除一个或多个容器 docker rm [OPTIONS] CONTAINER [CONTAINER...]OPTIONS说明： -f :通过SIGKILL信号强制删除一个运行中的容器 -l :移除容器间的网络连接，而非容器本身 -v :-v 删除与容器关联的卷 例如：强制删除容器db01、db02 docker rm -f db01 db025 在运行的容器中执行命令 docker exec [OPTIONS] CONTAINER COMMAND [ARG...]OPTIONS说明： -d :分离模式: 在后台运行 -i :即使没有附加也保持STDIN 打开 -t :分配一个伪终端 6 查看已有下载镜像(images) docker images使用docker安装mysql1 下载最新mysql镜像 docker pull mysql:latest2 运行容器 docker run -itd --name mysql-test -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 mysql部分参数说明： mysql-test：容器名 -p 3306:3306 ：映射容器服务的 3306 端口到宿主机的 3306 端口，外部主机可以直接通过 宿主机ip:3306 访问到 MySQL 的服务。 MYSQL_ROOT_PASSWORD=123456：设置 MySQL 服务 root 用户的密码。3 配置mysql 使用者(user) 3.1 进入容器 docker exec -it mysql-test bash 3.2 登录mysql并修改root密码 mysql -u root -p ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;123456&#39;; 3.3 添加远程登录用户 –&gt; ‘用户名‘@’主机’,%表任意都行 CREATE USER &#39;&lt;username&gt;&#39;@&#39;%&#39; IDENTIFIED WITH mysql_native_password BY &#39;&lt;password&gt;&#39;; GRANT ALL PRIVILEGES ON *.* TO &#39;&lt;username&gt;&#39;@&#39;%&#39;;备份docker中mysql的数据 使用docker安装mysql可能遇到一个问题,就是如果不做其他处理,docker容器损坏,那么里面的数据就可能丢了再也找不回. 所以应当养成定时备份的好习惯。 使用以下指令，将docker容器中的mysql数据备份到宿主主机指定位置： docker exec [CONTAINER] //usr/bin/mysqldump -u [USER] --password=[PASSWORD] --routines --triggers test_db &gt; /home/user/test_db_backup.sql说明： test_db是docker中mysql的数据库名 /home/user/test_db_backup.sql 备份到宿主主机的地址和文件名 将上面指令写入宿主主机的cron定时任务中就可定时将docker中mysql数据备份到本机，避免docker损坏数据就丢失了。","categories":[{"name":"技术文章","slug":"技术文章","permalink":"http://yoursite.com/categories/技术文章/"},{"name":"docker","slug":"技术文章/docker","permalink":"http://yoursite.com/categories/技术文章/docker/"}],"tags":[{"name":"ubuntu","slug":"ubuntu","permalink":"http://yoursite.com/tags/ubuntu/"},{"name":"mysql","slug":"mysql","permalink":"http://yoursite.com/tags/mysql/"},{"name":"docker","slug":"docker","permalink":"http://yoursite.com/tags/docker/"}]},{"title":"对象数组按对象指定属性排序","slug":"TechnicalEssays/object-array-sort","date":"2019-12-12T11:23:30.000Z","updated":"2019-12-19T13:12:14.215Z","comments":true,"path":"2019/12/12/TechnicalEssays/object-array-sort/","link":"","permalink":"http://yoursite.com/2019/12/12/TechnicalEssays/object-array-sort/","excerpt":"引入&emsp;&emsp;说明：使用语言为javascript。&emsp;&emsp;对象数组，即数组中存放的元素是一个个对象。例如 let objArr = [ { name: &quot;张三&quot;, sex: &#39;female&#39;, age: 30, birthday: &quot;1994/10/11&quot; }, { name: &quot;李四&quot;, sex: &#39;male&#39;, age: 20, birthday: &quot;2001/08/11&quot; }, { name: &quot;王五&quot;, sex: &#39;female&#39;, age: 40, birthday: &quot;2001/01/15&quot; } ];&emsp;&emsp;但是我们可能需要对该对数组中对象的指定属性进行排序，例如上述对象数组中的age，birthday。如何操作？方法之一，就是数组的sort()方法。&emsp;&emsp;下面，就一步步去分析，实现一份简单通用的对象数组排序方法。","text":"引入&emsp;&emsp;说明：使用语言为javascript。&emsp;&emsp;对象数组，即数组中存放的元素是一个个对象。例如 let objArr = [ { name: &quot;张三&quot;, sex: &#39;female&#39;, age: 30, birthday: &quot;1994/10/11&quot; }, { name: &quot;李四&quot;, sex: &#39;male&#39;, age: 20, birthday: &quot;2001/08/11&quot; }, { name: &quot;王五&quot;, sex: &#39;female&#39;, age: 40, birthday: &quot;2001/01/15&quot; } ];&emsp;&emsp;但是我们可能需要对该对数组中对象的指定属性进行排序，例如上述对象数组中的age，birthday。如何操作？方法之一，就是数组的sort()方法。&emsp;&emsp;下面，就一步步去分析，实现一份简单通用的对象数组排序方法。 实现对象数组排序第一步：简单排序number属性&emsp;&emsp;因为Array.sort()的“默认排序顺序是在将元素转换为字符串，然后比较它们的UTF-16代码单元值序列时构建的”。好在是sort()方法接受一个用来指定按某种顺序进行排列的函数作为可选参数，即arr.sort([compareFunction])，如果 compareFunction(a, b) 小于0，那么a会被排列到b之前；所以可以在此实现自己想要的排序方法。注意，sort方法会改变原数组。（sort() 方法用原地算法对数组的元素进行排序，并返回数组。） &emsp;&emsp;话不多说，直接看。&emsp;&emsp;例如上述objArr，按照age升序排序： // 指定排序的比较函数 function compare(property) { return function (object1, object2) { let value1 = object1[property]; let value2 = object2[property]; // 升序 return value1 - value2; } } let sortObj = objArr.sort(compare(&quot;age&quot;)); console.log(sortObj); &emsp;&emsp;应该会得到如下结果： 第二阶段：可以排序string属性&emsp;&emsp;但是这个写法只能对age这个number类型的属性其作用，如果换成name或者birthday等，就不行，因为string不能直接用’-‘比较得出大小。&emsp;&emsp;例如，运行console.log(&#39;male&#39; - &#39;female&#39;);，应该会看到得出的是NaN。&emsp;&emsp;string，就应该使用localeCompare() 方法，它返回一个数字来指示一个参考字符串是否在排序顺序前面或之后或与给定字符串相同。完整语法：referenceStr.localeCompare(compareString[, locales[, options]])。 &emsp;&emsp;所以需要简单修改一下compare()方法，修改如下： function compare(property) { return function (object1, object2) { let value1 = object1[property]; let value2 = object2[property]; if (typeof (value1) == typeof (value2)) { if (typeof (value1) === &#39;number&#39;) { return value1 - value2; } if (typeof (value1) === &#39;string&#39;) { // 升序 return value1.toString().localeCompare(value2); } } } } let sortObj = objArr.sort(compare(&quot;birthday&quot;)); console.log(sortObj); &emsp;&emsp;结果应当如下： 第三阶段：可以指定升序/降序&emsp;&emsp;既然已经到了这个程度，那可以再加一个是按照升序或者降序排列。&emsp;&emsp;简单修改如下： function compare(property, sortType = &quot;asc&quot;) { return function (object1, object2) { let value1 = object1[property]; let value2 = object2[property]; // 判断 传入的属性值 是number还是 string if (typeof (value1) == typeof (value2)) { if (typeof (value1) === &#39;number&#39;) { // 如果是升序 if (sortType === &quot;asc&quot;) { return value1 - value2; } else if (sortType === &quot;desc&quot;) { // 如果是降序 return value2 - value1; } } if (typeof (value1) === &#39;string&#39;) { // 如果是升序 if (sortType === &quot;asc&quot;) { return value1.toString().localeCompare(value2); } else if (sortType === &quot;desc&quot;) { // 如果是降序 return value2.toString().localeCompare(value1); } } } } } // 生日，降序 let sortObj = objArr.sort(compare(&quot;birthday&quot;, &#39;desc&#39;)); console.log(sortObj); &emsp;&emsp;得到的结果应该如下： 第四阶段：封裝成通用方法&emsp;&emsp;反正都这样了，再简单封装一下，导出成一个方法，后续直接使用。 &emsp;&emsp;新建一个objArraySort.js,放入以下代码： // sort使用的排序方法 // 传入对象数组用于排序的对象的属性,升序/降序 function compare(property, sortType = &quot;asc&quot;) { // 如果不是 asc,desc,不做下一步比较 if (!(sortType === &quot;desc&quot; || sortType === &quot;asc&quot;)) { return; } return function (object1, object2) { // 取得对象属性值 let value1 = object1[property]; let value2 = object2[property]; // 如果该对象不存在这个属性,也不做后续比较 if (!value1 || !value2) { return; } // 如果两个属性取得的值不是一个类型的就不用比较了 if (typeof (value1) == typeof (value2)) { // 判断 传入的属性值 是number还是 string if (typeof (value1) === &#39;number&#39;) { // 如果是升序 if (sortType === &quot;asc&quot;) { return value1 - value2; } else { // 如果是降序 return value2 - value1; } } else if (typeof (value1) === &#39;string&#39;) { // 如果是升序 if (sortType === &quot;asc&quot;) { return value1.toString().localeCompare(value2); } else { // 如果是降序 return value2.toString().localeCompare(value1); } } else { // 其它类型就不排序了 return; } } else { return; } } } // 通用方法，需要传入 需要排序的对象数组、对象属性、排序方式 function objectArraySort(array, property, sortType) { // 如果不是对象数组用这个方法,返回的是undefined if (!(array instanceof Array)) { return; } return array.sort(compare(property, sortType)); } // 导出 module.exports = { objectArraySort: objectArraySort, }&emsp;&emsp;再将刚刚的objArr按照age降序排序： // 引入模块 const oas = require(&quot;./objectArraySort&quot;); // 调用方法，传入需要排序的对象数组、对象属性、排序方式 let sortObj = oas.objectArraySort(objArr, &#39;age&#39;, &#39;desc&#39;); console.log(sortObj); &emsp;&emsp;应该会得到以下结果： &emsp;&emsp;至此，一个简单通用的对象数组按照其对象指定属性排序的模块就完成了。实践有效，如果有问题，可提出交流，谢谢。","categories":[{"name":"技术文章","slug":"技术文章","permalink":"http://yoursite.com/categories/技术文章/"},{"name":"javascript","slug":"技术文章/javascript","permalink":"http://yoursite.com/categories/技术文章/javascript/"}],"tags":[{"name":"javascript","slug":"javascript","permalink":"http://yoursite.com/tags/javascript/"}]},{"title":"Express+multer 文件上传,并在 router 中指定文件存放路径","slug":"TechnicalEssays/express-multer-demo","date":"2019-12-12T11:06:12.000Z","updated":"2019-12-19T13:11:13.105Z","comments":true,"path":"2019/12/12/TechnicalEssays/express-multer-demo/","link":"","permalink":"http://yoursite.com/2019/12/12/TechnicalEssays/express-multer-demo/","excerpt":"Express+multer 文件上传,并在 router 中指定文件存放路径 内容简单说明&emsp;&emsp;文件上传是 web 开发中比较常见的一个功能虽然说起来是文件上传，实际上，可以看做是对 multipart/form-data 数据的处理。在 npm 中,有很多处理类似数据的库，包括周下载量近 2kw 的 form-data，周下载量近 3mw 的 formidable。 &emsp;&emsp;不过，如果 nodejs 后端使用的 express 框架，其官方也有一个自己的文件上传中间件，用它自己的话来说就是：“Multer 是一个 node.js 中间件，用于处理 multipart/form-data 类型的表单数据，它主要用于上传文件。”","text":"Express+multer 文件上传,并在 router 中指定文件存放路径 内容简单说明&emsp;&emsp;文件上传是 web 开发中比较常见的一个功能虽然说起来是文件上传，实际上，可以看做是对 multipart/form-data 数据的处理。在 npm 中,有很多处理类似数据的库，包括周下载量近 2kw 的 form-data，周下载量近 3mw 的 formidable。 &emsp;&emsp;不过，如果 nodejs 后端使用的 express 框架，其官方也有一个自己的文件上传中间件，用它自己的话来说就是：“Multer 是一个 node.js 中间件，用于处理 multipart/form-data 类型的表单数据，它主要用于上传文件。” &emsp;&emsp;使用 multer 比较简单，一般就是&emsp;&emsp;&emsp;&emsp;1、导入 multer，&emsp;&emsp;&emsp;&emsp;2、指定文件上传地址（如果有必要的话，不指定只是写到内存中），&emsp;&emsp;&emsp;&emsp;3、在 router 的路径后，回调函数前，写一个upload.single(photo)（单文件）或者upload.array(&#39;photos&#39;, 12)（多文件），在 router 的回调中，就可以使用req.file 或者 req.files获取文件了。 &emsp;&emsp;在这里，因为指定的上传地址是在 multer(opts)中的 opts 配置，所以 opts 配置号一个地址之后，后续修改就不是那么方便。如果需要对不同文件不同路由路径指定不同的文件上传地址，那应该如何处理？ &emsp;&emsp;multer 的简单使用后文会给个示例，但是最终的目的，是想要在 express 的 router 回调函数中，可以指定文件上传的路径，而不是所有的文件都上传到唯一指定的路径。例如，路由是“testUpload”，我在 router 处理时指定存放到测试使用的上传路径。路由是“formalUpload”，我在处理时可以指定存放到正式的上传路径。 express+multer 基本文件上传示例&emsp;&emsp;因为主要是测试 multer 内容，所以一切从简，就在一个简单的 express 项目中测试就好 1、创建一个 express 项目（前提：已安装 express-generator），并安装 multerexpress --view=ejs express-mutler-demo // 进入项目根目录 npm i multer2、上传页面编写&emsp;&emsp;修改 views/index.ejs 的标签内容如下： &lt;div&gt; &lt;h3&gt;Express + multer 簡陋上傳文件&lt;/h3&gt; &lt;form method=&quot;post&quot; action=&quot;/upload&quot; id=&quot;upload-form&quot; encType=&quot;multipart/form-data&quot;&gt; &lt;input id=&#39;upload&#39; type=&quot;file&quot; name=&quot;file&quot; /&gt; &lt;input type=&quot;submit&quot; value=&quot;上傳&quot;&gt; &lt;/form&gt; &lt;!-- 进度条 --&gt; &lt;progress id=&quot;uploadprogress&quot; min=&quot;0&quot; max=&quot;100&quot; value=&quot;0&quot;&gt;0&lt;/progress&gt; &lt;p id=&#39;msg&#39;&gt;&lt;/p&gt; &lt;/div&gt; &lt;!-- 引入jquery.js --&gt; &lt;script src=&quot;https://code.jquery.com/jquery-3.4.1.min.js&quot; integrity=&quot;sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt; &lt;script&gt; let form = $(&quot;#upload-form&quot;); form.on(&#39;submit&#39;, function (event) { // 清除提交结果显示信息 $(&quot;#msg&quot;).html(&quot;&quot;); // 在原页面处理，不跳转 event.preventDefault(); // 检查是否支持FormData if (window.FormData) { let formData = new FormData(); // 建立一个file表单项，值为上传的文件 formData.append(&#39;file&#39;, $(&#39;#upload&#39;).get(0).files[0]); let xhr = new XMLHttpRequest(); xhr.open(&#39;POST&#39;, $(this).attr(&#39;action&#39;)); // 进度条占比计算 xhr.upload.onprogress = function (event) { if (event.lengthComputable) { let complete = (event.loaded / event.total * 100 | 0); $(&quot;#uploadprogress&quot;).val(complete); $(&quot;#uploadprogress&quot;).innerHTML = complete; } }; // 定义上传完成后的回调函数 xhr.onload = function (e) { if (xhr.status === 200) { $(&quot;#msg&quot;).html(&quot;上传成功!&quot;); // alert(&#39;上传成功！&#39;); } else { // alert(&#39;文件上传出错了！&#39;) $(&quot;#msg&quot;).html(&quot;上传失败!&quot;); } }; // 发送表单数据 xhr.send(formData); } }); &lt;/script&gt; &emsp;&emsp;代码内容很简单，就是一个 form 用来模拟文件上传，为了最简单，直接使用的 XMLHttpRequest 实现上传，还没事整了个进度条。&emsp;&emsp;本来想用原始的方法，还是引入了 jquery。更简略类似下面也 ok。 &lt;script&gt; function PostData() { $.ajax({ type: &quot;POST&quot;, url: &quot;XXX&quot;, data : &quot;&quot;, success: function(msg) { } }); return false; } &lt;/script&gt; &lt;form onsubmit=&quot;return PostData()&quot;&gt; &lt;input type=&quot;text&quot; value=&quot;&quot;&gt; &lt;input type=&quot;submit&quot;&gt; &lt;/form&gt;&emsp;&emsp;依旧以第一个为准，页面大概是这个样子（运行 express 项目，在 localhost:3000 看到）： 3、multer 的简单配置&emsp;&emsp;新建一个 util/Upload.js，编写 multer 配置并导出： const multer = require(&#39;multer&#39;); // 文件上传配置 const fileStorage = multer.diskStorage({ destination: function (req, file, callback) { callback(null, &quot;/defaultUploadDir&quot;); }, filename: function (req, file, callback) { callback(null, file.originalname); } }); // 导出配置 module.exports = { fileUpdate: multer({ &#39;storage&#39;: fileStorage }), }注意：上传地址 “/defaultUploadDir”要先手动创建，否则报错。 4、在对应 router 中使用 multer&emsp;&emsp;在 routes/index.js 中，添加以下 router 代码： router.post(&#39;/upload&#39;, upload.fileUpdate.single(&#39;file&#39;), function (req, res, next) { const file = req.file; console.log(file); //如果得到了文件，就返回上传成功 if (file) { return res.status(200).json({ success: true }); } else { return res.status(500).json({ success: false }); } });&emsp;&emsp;记得在最上面引入 multer 配置： const upload = require(&#39;../util/Upload&#39;);&emsp;&emsp;几个简单注意点：&emsp;&emsp;&emsp;&emsp;1、这个路由路径和路由方法，要和前台页面中的 action 和 method 一致；&emsp;&emsp;&emsp;&emsp;2、多文件就要 upload.array(),单文件就用 upload.single()（后续都是单文件示例中说明）;&emsp;&emsp;&emsp;&emsp;3、第二点()里面的标志字符串要和前台页面中的&lt;input id=&#39;upload&#39; type=&quot;file&quot; name=&quot;file&quot; /&gt;name 属性一致。 &emsp;&emsp;如果步骤都正确，成功上传，应该可以看到前台页面如下： &emsp;&emsp;router 的回调中取得上传文件的信息，如下： &emsp;&emsp;文件上传的位置： 关于使用 multer 文本域数据&emsp;&emsp;multer 的 readme 所说：”Multer 会添加一个 body 对象 以及 file 或 files 对象 到 express 的 request 对象中。 body 对象包含表单的文本域信息，file 或 files 对象包含对象表单上传的文件信息。“&emsp;&emsp;实际测试，在前台页面 index.ejs 创建 formData 后，append 一个文本数据： let formData = new FormData(); // 补入此句 formData.append(&#39;dest&#39;, &#39;file_upload&#39;); &emsp;&emsp;刷新页面之后，重新上传，可以在 multer 配置中，在 diskStorage 的 destination 的 callback 中，可以得到 req.body 包含了 dest 属性。如下图： &emsp;&emsp;这是好事，很好的，这样，在前台上传文件时，就可以把需要上传的地址放到这里，那么不同的文件上传就可以存放的不同的地址了。&emsp;&emsp;那么会有哪些问题呢？&emsp;&emsp;&emsp;&emsp;1、前端需要知道后台的上传路径，不合理。&emsp;&emsp;&emsp;&emsp;2、并不是所有使用 formData.append()添加的属性都能在文件上传 destination 生成前，在 req.body 中获取到。 &emsp;&emsp;&emsp;&emsp;这是一个实际遇到的问题，我在使用 angular 时，使用 HttpClient 实现文件上传操作，类似： upload(file: any) { // 文件使用FormData发送 const formData: FormData = new FormData(); formData.append(&#39;file&#39;, file, file.name); formData.append(&#39;file_name&#39;, file, file.name); return this.http.post(this.URL + &#39;/upload&#39;, formData ); }&emsp;&emsp;后台的 req.body 在获取到上传的文件前并不会有 file_name 属性的值，即在 multer 配置在 diskStorage 的 destination 的 callback 中，可以得到 req.body 是空，在对应 upload 的 router 回调中，才取得 req.body 的 file_name 属性。 在 router 的回调中，指定文件上传的路径。&emsp;&emsp;在”关于使用 multer 文本域数据“这部分有讲到，前台直接传入文件上传的路径不合理，在接受到上传的文件前得到指定的上传路径也不一定成功，而直接使用配置好的 multer，其文件上传目的地 destination 又只有固定一个。该如何实现？ &emsp;&emsp;把 multer 的配置，封装到一个返回 promise 的函数，指定传入一个文件路径参数，并在 router 的回调中使用该函数，传入上传路径。 &emsp;&emsp;修改 utils/Upload.js 文件，补入以下内容： // multer文件上传,可指定上传路径,不在router参数里直接用 let uploadFunction = (req, res, dest) =&gt; { let storage = multer.diskStorage({ destination: function (req, file, cb) { let newDestination = dest; let stat = null; try { // 检查传入的路径是否存在，不存在则创件 stat = fs.statSync(newDestination); } catch (err) { fs.mkdirSync(newDestination); } if (stat &amp;&amp; !stat.isDirectory()) { throw new Error(&#39;文件目录： &quot;&#39; + dest + &#39;已存在！&quot;&#39;); } cb(null, newDestination); }, filename: function (req, file, callback) { callback(null, file.originalname); } }); let upload = multer({ storage: storage }).single(&#39;file&#39;); return new Promise((resolve, reject) =&gt; { upload(req, res, (err) =&gt; { if (err) { return reject(err); } resolve(); }) }) };&emsp;&emsp;记得导出： module.exports = { fileUpdate: multer({ &#39;storage&#39;: fileStorage }), uploadFunction, }&emsp;&emsp;在 router 中使用，修改原 routes/index.js 的 upload 路由如下： router.post(&#39;/upload&#39;, /*upload.fileUpdate.single(&#39;file&#39;), */ async function (req, res, next) { // 指定文件上传路径 let uploadPath = &#39;test_upload&#39;; // 等到文件上传完成 await upload.uploadFunction(req, res, uploadPath); const file = req.file; console.log(req.file); //如果得到了文件，就返回上传成功 if (file) { return res.status(200).json({ success: true }); } else { return res.status(500).json({ success: false }); } });&emsp;&emsp;当然，await 需要在 async 函数中使用，也最好放到 trycatch 中。 &emsp;&emsp;如果步骤正确，结果应该和第一步中的一样，文件上传成功。在后台的项目中会新建一个 test_upload 文件夹，并有上传的文件。 &emsp;&emsp;代码已放到 github，有需求可查阅。 &emsp;&emsp;以上内容，全部亲测有效，如果有问题，请提出交流，谢谢。","categories":[{"name":"技术文章","slug":"技术文章","permalink":"http://yoursite.com/categories/技术文章/"},{"name":"nodejs","slug":"技术文章/nodejs","permalink":"http://yoursite.com/categories/技术文章/nodejs/"}],"tags":[{"name":"nodejs","slug":"nodejs","permalink":"http://yoursite.com/tags/nodejs/"},{"name":"multer","slug":"multer","permalink":"http://yoursite.com/tags/multer/"}]},{"title":"下一站，活着","slug":"OrdinaryArticles/Essay/02StayAlive","date":"2019-12-10T14:15:07.000Z","updated":"2019-12-19T13:58:09.825Z","comments":true,"path":"2019/12/10/OrdinaryArticles/Essay/02StayAlive/","link":"","permalink":"http://yoursite.com/2019/12/10/OrdinaryArticles/Essay/02StayAlive/","excerpt":"","text":"&emsp;&emsp;眼瞧着吧，都小快30岁了，工作不顺，几近失业，居然还在为几次晋级赛失败而愤慨懊恼。 &emsp;&emsp;一直想着吧，这不是我想要的生活，平庸，无趣，不够精彩。苦痛的人生，各有各的痛苦，追求美好的愿望却都积极。 &emsp;&emsp;友善的童话故事吧，都有个美好的结局。什么样的美好结局呢？坏人被打败了，好人幸福快乐的生活在了一起。这个故事，就需要一个坏人，一个路人，一个好人。因为是做坏事的巫婆、恶龙，所以要打败；因为是美丽的公主、女神受到迫害，所以需要拯救；因为是王子、勇士，才符合这个冒险的精神。 &emsp;&emsp;突兀的故事情节，并不让人容易接受，但是如果那是持续的现实，却让人无法反驳。有些欲望一直是萦绕了我的内心，但是却难以触发。平凡的故事没有恶龙，没有公主，所以也不需要勇士。秋风，春花，冬雪，夏日，她们一如既往的在那里。 &emsp;&emsp;每天早晨，都能在预定的闹钟响起之前醒来，等着几分钟后它一响就可以关闭它。每天下午突然觉得腰痛，想站起来活动活动就表示快要下班了。路过小巷饭馆不用说话，老板就会言语一句：和昨天一样？回到宿舍掏出手机，打开视频软件，首页就一眼看到你追的剧又更新了。玩着手机，看看资讯、新闻，突然觉得有些昏沉，就知道应该睡觉了。 &emsp;&emsp;我的生活没那么精彩，每天按照既定的规律生活就很舒服。突然某天水果头上班迟到可能就有些担忧，追的剧今天没更新可能就有些失落，偶尔换个饭馆可能就觉得失望。 &emsp;&emsp;总是希望有人感谢这平淡而安宁的生活，一尘不变的确缺乏惊喜，久处舒适区的确平庸。我的确没有跨过山和大海，也不曾穿梭人山人海，独泡一杯清茶，倚栏眺望远方。 &emsp;&emsp;当我一个人的时候，不曾担心诗和远方。 &emsp;&emsp;因为我不需与别人分享，我可以优雅地将其埋葬。 &emsp;&emsp;我一直在家的远方，因为孤独引导我远航。 &emsp;&emsp;青丝带走我的思念，白头掩盖我的理想。 &emsp;&emsp;意外与改变迫不得已，平凡人生无法一如既往。 &emsp;&emsp;拥有一个相对稳定的生活，就不想再经历那些坎坷。胜利者书写传奇，激励更多的人去追寻胜利。避开了所有的失败者经历，但并不代表就会成功，因为这可能是新的失败者。 &emsp;&emsp;当你还活着时候，才会想着感谢生活；当你活不下去的时候，此时不搏何时搏？ &emsp;&emsp;如果我的失去，只是我的失去，那曾经庆幸的，是我已然活过。 &emsp;&emsp;如果你无法承受失去的代价，甘于平凡不是可耻的选择，至少依然活着。 &emsp;&emsp;如果你努力改变，追求更美好的生活，那下一站，活着。 &emsp;&emsp;活着的经历的风雨才是传奇，死去的无法自我讲述他的遭遇。 &emsp;&emsp;生活无法击垮我，只因为，我还活着。","categories":[{"name":"一般文字","slug":"一般文字","permalink":"http://yoursite.com/categories/一般文字/"},{"name":"杂文随笔","slug":"一般文字/杂文随笔","permalink":"http://yoursite.com/categories/一般文字/杂文随笔/"}],"tags":[{"name":"生活","slug":"生活","permalink":"http://yoursite.com/tags/生活/"}]},{"title":"明明如此渴望爱情，为何依旧无动于衷？","slug":"OrdinaryArticles/Essay/01LongForLove","date":"2019-12-04T14:25:47.000Z","updated":"2019-12-19T13:25:42.988Z","comments":true,"path":"2019/12/04/OrdinaryArticles/Essay/01LongForLove/","link":"","permalink":"http://yoursite.com/2019/12/04/OrdinaryArticles/Essay/01LongForLove/","excerpt":"","text":"&emsp;&emsp;晚风拂面，夜灯昏昏，我裹了裹衣领，耸了耸肩，步子走得更快了些。 那不曾明白的感觉&emsp;&emsp;天变冷了些，加班晚了，也不想着再去外面吃晚饭，只想快快回到宿舍，煮一碗热汤面吃更觉温暖舒服。 &emsp;&emsp;我记得我还在读书的时候，晚上还希望往外面走，也不走在光明处。一个人带着耳机听着歌，专门走在校园昏暗阴沉的小路上。茂密的灌木林围绕着小池子，图书馆后面小树林里小亭子，实验楼正面忧郁的银杏林……那一年我走过所有校园里所以可以去的地方，在那夜深人静的晚上。 &emsp;&emsp;我怀疑我就是想去看看那些夜晚在阴暗地方相会的男女，然后打扰他们的宁静。但那时的我，总认为我只是夜晚散步，感悟人生悲凉。 &emsp;&emsp;当一个人愈发寂寞的时候，越是容易顾影自怜。 &emsp;&emsp;我并没有失去什么，或者错过什么，只是有些遗憾，叹息自己的不成熟。倘若还能再来一次，你知道有些事一定不能做，原因是你已经经历了结果。假如你不知道故事的后续，你就不会知道这个线索的目的。 &emsp;&emsp;别人越表现得释然，自己越感觉后悔。别人越是优秀，自己越是难过。当你的心中一直惦记着一个人的时候，你可能越发想弄明白原因。 &emsp;&emsp;你可能只是敬佩她而已，但是却搞错，以为是倾慕。她的优秀激励着你的人生，就像一个新的目标。 &emsp;&emsp;我这辈子只亲眼看见过一次彩虹，那一次的七彩，却是扰乱人心的阻碍，让我曲解了自己的那份愧疚。 &emsp;&emsp;优秀的人，往往受人爱慕，但没有什么愧疚应该用爱慕去弥补。 那是我不愿相信的单思&emsp;&emsp;等待的时光是比较难熬的，尤其是无能为力的等待。我只想吃上这碗热汤面，但我必须先等这水烧开。 &emsp;&emsp;当年我不是很明白那种心情，就是不自觉得总想看着她，总想跟她说说话。很想找找话跟她说，却酝酿了好久却不敢开口。别的男生跟她说话，内心就很煎熬，很沉重。尤其看见他们有说有笑的，十分不忍心去看他们，却不经意总是暼过去。总想阻止他们，却没有任何办法。我有偷偷地为她写诗，作词，甚至有时灵感源源不绝，下笔如神，行云流水。 &emsp;&emsp;我以为我是喜欢上她了，却又不敢跟她说，不敢和任何人说。只能偷偷地看着她，注视着她。她的一言一语，一颦一笑，都让我着迷。茶饭不思，寝食不安，辗转反侧，竟夕难眠。 &emsp;&emsp;然而，时光荏苒，止数月，竟再无此意。突然间不再有任何思念，不再有任何嫉妒。相视相语，不有一点别意。无疾而终，安然离去。 &emsp;&emsp;没有任何原因，没有任何理由，她来的时候无声无息，她离开后无踪无迹，只留下这段回忆，和那些肤浅的诗歌词句。 &emsp;&emsp;&emsp;&emsp;月微人静虫蛩，两影不分西东。&emsp;&emsp;&emsp;&emsp;自在难得寻觅，画魂断桥长空。 &emsp;&emsp;没了那份情愫，反而觉得轻松。多情总是少年时，杯酒笑谈廊桥梦。 只是在夜深人静时才觉寂寞&emsp;&emsp;我不能吃完这碗热汤面，就把锅碗筷丢在那边，因为没人给我收拾。但我可以打开手机，把音乐声调到最大。我根本不在乎它放的谁的歌，只不过不想那么安静。 &emsp;&emsp;为什么天上的月亮只有一个？因为当你感觉孤单的时候可以看看它。 &emsp;&emsp;当你处于一个忙碌状态的时候，是没有心思去想其他事情的，所以大家都喜欢忙着。或许忙着，才感觉到自己还活着。 &emsp;&emsp;有人说，每个人生下来要走的路都是一样的，有点人走得快些，所以他们离开的早些。这样说来，或许你一直忙碌着，却不过在原地踏步而已。 &emsp;&emsp;我不是那种想一蹴而就的人，但也绝不希望踌躇不前。年轻时，总会觉得空有一腔济世救人的热情却无处施展，但我们总会释放出自己热情，不单单只是济世救人。对某些事物的热爱会占用着他的很多精力。热爱学习，热爱工作，热爱音乐，热爱游戏，……所以在这份热情这份热爱一直存在，那么这个人的当时，是不会寂寞的。一个人若有他和他的热爱，他就不会寂寞。 &emsp;&emsp;所以，什么时候这份热爱才会消失？遭遇背叛？毫无新奇？前功尽弃？当你堕落到谷底时，人生变得灰暗，而你的热爱并不能拯救或激励你走出困境，爬出深渊，你会不会期望有个人能够推你一把，拉你一手？ &emsp;&emsp;当夜深人静乌云密布的时候，月亮都已经不能与你同行，你想大声呼喊，希望有人听到，却发现四周都空洞洞的，孤单寂寞阴郁不免笼罩当空。 &emsp;&emsp;所幸，我还依旧走在这路上，脸上带着光芒。 你是在渴望爱情，还是在实现某种希望？&emsp;&emsp;虽然我不能不洗碗筷不洗锅，但我能够放在那里，明天再洗，没人会说我。但可能却也希望我一回家就可以吃上一碗热饭喝上一口热汤。 &emsp;&emsp;我可以熬夜到很晚，或者通宵不睡，全凭喜好。但可能却也希望有人帮掖被子，以免着凉感冒。 &emsp;&emsp;我每天一个人吃着饭，玩着手机，看看今日的比赛战况。但可能也希望有人坐我对面跟我讲讲今日遇到的趣事。 &emsp;&emsp;可能我只是羡慕别人拥有的，或许是想充实自己还没有的。 &emsp;&emsp;老同学带着孩子出来逛街了，老妈说她也好想升级，再过几年就不利索了。虽然有人说，人这一生要走的路都是一样的，除了走的快慢，那也得看看站与站之间的距离。这一条单行道，有的人一直在车上，只是想快速到达某个站点，有些人或许只想慢慢走，在自己喜欢的地方多停留。 &emsp;&emsp;这一条单行道，车开走了，错过了这个站，它不能再开回来，只有下一个轮回，但我们却不在那个轮回了。 &emsp;&emsp;有些东西，你不想不代表不会发生，你希望并不代表你能实现。 &emsp;&emsp;这条路是我走的路，我没走过，所以我不知道。我不希望你给我讲，我想自己走，在自己喜欢的地方，多停留一下，看看青绿和远方。 我知道，所以才无动于衷&emsp;&emsp;有人说，我并不一定非要把锅碗筷子洗了，我若高兴，我完全可以直接丢掉换新的。 &emsp;&emsp;我知道我不能这么做，因为新买一套锅碗筷子花费时间比我洗了更久，成本更高，我做不到这样的以这样的浪费换取一时的高兴。 &emsp;&emsp;爱情不是一个人的事情，它包含了激情、责任与亲密。或许我渴望的不会是完美的爱情，但是也希望时符合自己价值观的。如果我并做不到给予合适的付出，我也不会期待得到渴望的满足。 &emsp;&emsp;有的人可能是觉得不够亲密，觉得可惜；有的人可能觉得没有责任，没有安全感；有的人觉得缺乏激情，不够浪漫。我能给的，可能不是你想要的；你想要的，我可能给不了。预期相互煎熬，不如一拍两散，一了百了。 &emsp;&emsp;不是每个人都有这个决心，也不是没个人都能接受这个结果。这段路走得太艰辛，则可能走得越漫长。 &emsp;&emsp;我知道我能做什么，但是因为害怕所以要放弃这些尝试？没有努力去实现的事情，为什么就已经说做不到？ &emsp;&emsp;这条路你走过才知道！ &emsp;&emsp;我不知道在那个平衡状态下，那只猫有没有死，但是我知道我把它丢到火坑中后，它一定死。我知道这车没有了油指定开不远，我知道这天黑就看不到太阳。 &emsp;&emsp;我不用非要把盒子丢到火坑看猫被烧，我不用开着没油的车去远航，也不用等到天黑再去看太阳。 &emsp;&emsp;人或许可以骗自己，但大多数时候，没有必要。 或许，只是一种渴望&emsp;&emsp;我青春已逝，但来日方长。&emsp;&emsp;我依旧敬佩，但认清方向。&emsp;&emsp;我热爱衰减，但志在远方。&emsp;&emsp;我问心有愧，但仍有梦想。&emsp;&emsp;我村酒野蔬，但豁然开朗。 &emsp;&emsp;我仍未知道那如春花笑魇心里挂念是谁，我或许可能也希望那就是我。 &emsp;&emsp;阴云散去，盼见曙光。","categories":[{"name":"一般文字","slug":"一般文字","permalink":"http://yoursite.com/categories/一般文字/"},{"name":"杂文随笔","slug":"一般文字/杂文随笔","permalink":"http://yoursite.com/categories/一般文字/杂文随笔/"}],"tags":[{"name":"爱情","slug":"爱情","permalink":"http://yoursite.com/tags/爱情/"}]},{"title":"若无人守护《少年的你》……","slug":"OrdinaryArticles/FilmReview/04BetterDays","date":"2019-12-01T11:34:58.000Z","updated":"2019-12-19T13:06:39.345Z","comments":true,"path":"2019/12/01/OrdinaryArticles/FilmReview/04BetterDays/","link":"","permalink":"http://yoursite.com/2019/12/01/OrdinaryArticles/FilmReview/04BetterDays/","excerpt":"","text":"&emsp;&emsp;校园欺凌，青春与现实。艺术创作源于生活，但是不等于生活。只有活着的人才能书写历史，而死去的人，他们没法自我证明。 &emsp;&emsp;“他把血泼在这儿了，我证明！……我给他们证明我的弟兄们就埋在这煤堆底下，我给他们证明！我证明！” 故事细节不要较真，关注重点在于少年&emsp;&emsp;《少年的你》讲的是在高考前夕，因为由校园欺凌引发的一个事件，改变了两个想走出去成为成年人的少年的命运的故事。 &emsp;&emsp;故事讲得不错，虽然谈不上很优秀，但是绝不应该被一些批评者说得那样过火。我单单从这部电影本身，不要说什么抄袭借鉴，聊一聊他的故事和我们的人生。 校园若有欺凌，原因或许可怕&emsp;&emsp;其实一般情况下，在学校会不会被欺凌，和你有没有朋友还是有关系的，但最重要的，还是在于个人的性格。 &emsp;&emsp;朋友多少，只能影响到表面情况，这很无奈，却是现实。在学校，尤其是已经在有一些自我观念的年纪，团体一定是一个非常重要的组成。他们的利害关系可能真的没有成年人那么复杂，也往往是，一个几个人的小团体，大于一个班级，一个班级大于一个年级，一个年级大于一个学校，一个学校大于其他学校。也许就是这样的共生共同体吧，如果是在一个小团体里，受到欺凌的几率就是要小一点。 &emsp;&emsp;如果你不是林田惠，性格的弱势，就可能就是被欺凌的原因。这我有亲身体会，虽然算不上欺凌。我小的时候，胆子特别小，又特别爱哭。甚至有时候和同村的同龄小孩一起出去玩，他们跑快两步消失在我的视野里，我都会坐在地上哭。所以即便是同村的女孩，都觉得我这个人太怯弱了。这种性格一直伴随我整个小学，所以我记得几个印象非常深刻的事情。 &emsp;&emsp;一件是有一次我同桌借了我的笔，我让他还，他不还，我就一直叫他还，他不耐烦了，就抓起我的文具盒砸到墙上，文具盒砸坏了，我也被吓哭了，直接引起了同学去喊老师。那时我已经4年级，10岁了。 &emsp;&emsp;还有一件是我6年级，12岁的事情了。那天我是班干部代理值日生代表，监督当天做清洁的同学放学后打扫教室，等待年级部清洁委员检查过后才能走。还在打扫清洁的时候，一个别班的人来找我们班本来该留下打扫清洁的同学一起回家，我说他今天要打扫完清洁才能走。只见他一脚提到讲桌上，大声说：“扫个屁！”直接又把我吓哭了。 &emsp;&emsp;不是每个人的内心都足够坚强到敢起身直面欺凌，正如电影中的他们，选择忍气吞声，希望高考之后，能够脱离苦海。 &emsp;&emsp;但如果不反抗，被欺凌只有0次和无数次，即便是你考上大学，走进社会，永远都是。所以一个人默默忍受是不能解决问题的。 不止“小混混”，大部分老师和家长都是爱你们的&emsp;&emsp;或许电影的编剧不是特别理解小混混吧，也可能是我自我感觉的问题。剧情有两个“共生体”的相遇那一段，槽点满满。 &emsp;&emsp;首先是陈念报警这一块，作为一个品学兼优的学生，都能从容的从殴打现场走开，却不知道走到转角处再打电话。就在一会儿，刘北山起身反手打了三人中其中一个，没想到那三人就直接丢下一句狠话就走了。就走了？！虽然我完全理解这里的不合理也是必须这样，不然怎么把男女主以他们的预期的方式凑到一起去。 &emsp;&emsp;其实小混混可能真的就这么单纯。电影中有几个片段展示了刘北山作为了一个小混混的生活状况，无论是恻隐之心，或者骨感现实生活，都是很干脆的。真的很简单，想他这个角色的小混混，其实就是在初中毕业或者辍学之后，年纪太小又叛逆，所以不务正业，成了一个小小的无业游民，一定程度上就成了小混混。随着年龄的增长，越来越脱离主流教育的指引路线。这其中有一部分，就是莫名有一点点固有的执念，让人在某种程度上理解他们的做法。 &emsp;&emsp;就像陈念手机被摔坏了，第二天找到她时就要给她修；麻将馆看见一个小孩子不敢受大人指示去偷钱包就大打出手；说跟在后面送她上下课就一定每天都这样做；说不碰她，就真没有碰她……转念想想，他们其实也是一样年纪大小，只不过有些人就是读书读不下去而已，即便他们知道读书是好的。 &emsp;&emsp;但是大多数情况下，小混混和“好学生”的确不是容易在一个团体的。我记得我在上了初中之后我不知道为什么，幡然明白了一个道理：有人要欺负我，我就打回去就好了，实在不行就跟老师讲，为什么我总是要哭呢？自从我明白了这个道理，我的生活过得好多了，加上我成绩比较好，我一般被人欺负我打不过时，我就直接告诉老师了。一般情况下，是有用的，我从不会忍气吞声，打得过，我就打，打不过我就说。其实在初中那个年纪，老师和家长对于学生和小孩的引导意义非常大，很快就能够纠正问题。 &emsp;&emsp;我记得，还是有些人看我不爽，说是要等初中毕业了找人打我一顿。但是这个消息也是某个同学主动透露给我的，说让我注意安全。我依然记得我当时还有点小期待，我到要看看他们能弄出什么样的花招。虽然直到最后，那一幕并没有发生。 &emsp;&emsp;我觉得故事中把家长和老师和警察描述得有点偏激了，可能因为他们并不是主角吧，但是，如果你不能一个人解决问题，而身边却也没有朋友，他们绝对是你第一个值得信任的对象。 如此精密的“献身”，真的是少年的你们？&emsp;&emsp;如果说前半段看得我有点揪心，只有一个遗憾的话，那么看完整部电影，我却开始怀疑，到底人心，具有多大的能量？ &emsp;&emsp;一个品学兼优前途光明的学生，一个无所事事，地处底层的小混混，难道真的是为了爱才甘愿牺牲小我，完成对少年的尊严的捍卫？ ——“这他妈是八岁？！” ——“没人信，我都不信。三岁跟他妈一样高，五岁就跟我一样高，八岁就这样了。” &emsp;&emsp;你这不都鬼话连篇，放屁不是吗。有很多人都觉得，为了顺大统，为了电影能上映，做了妥协，修改故事成这样样子，强行在片头片尾加上“政治态度正确”，影响了故事本身的优雅。 &emsp;&emsp;我倒是同意某一点，这毕竟是一部电影，是艺术创作，黑暗与光明共生共存，理想与现实的共生共死。走出去，那怕是一个，都是胜利。 &emsp;&emsp;如果这是一个人性思考的问题，完全可以就那样结束，甚至还可以加上几年之后，一个光鲜靓丽的女子遵守承诺，迎接一个人的新生；或者一个走出铁门却只有秋风吹落黄叶斑斑，过去的人和过去的事都将他的人生也抛在了过去。 &emsp;&emsp;我完全不敢去想这样的少年。也许比起相信少年去欺骗世界欺骗自我，我宁愿相信少年自己能拯救这个世界。 &emsp;&emsp;一厢情愿罢了，谁不想遇到的都是美好的事物。 归根到底，到底是谁的问题？遗憾的是，我们仍未知道那个加害者的内心世界&emsp;&emsp;我们抛开这到底是不是“少年的你的尊严”，再来看看电影没有剖析的一个重点。 &emsp;&emsp;校园欺凌是个重大的社会教育问题，但是他也是一个两方面的话题。我们除了保护被欺凌的受害者，也应该去了解加害者的内心世界。去纠正加害者也是必须的，这也就是“预防、处置和远期防治”的问题。 &emsp;&emsp;关于电影中欺凌事件的主要加害者魏莱，虽然片中有几个片段说明她的生存环境，从警察审讯说找母亲时的情绪变化，到警察去家里调查时从容的表情态度，到求陈念不要报警可以做任何事情而不愿再复读的狼狈，如果加上她死后父母去认遗体时的态度，基本上就是所有可以窥探她家庭生活的内容了。 &emsp;&emsp;但是这些内容就显得比较草率了，因为这些内容完全拼接不起她有如此霸凌举动的内心，尤其在警察郑易去她家询问后送陈念在车上形容那个“野生动物的眼睛”，但后来却因为去求陈念不要报警道出害怕的原因：不想再复读，不想她爸不和她说话。 &emsp;&emsp;这就很扯知道吧，如果只是想简单把她成为欺凌者的原因归加到家庭原因之上就简直不要太牵强。影片中她不是一个笨蛋，是一个被老师表扬还要考北大的成绩优秀的学生。一直以来都在从容不迫对待所有的事情，甚至都拿刀去陈念家门口堵截，结果却死得那么鲁莽和草率。还有她的临终遗言，我的天，这就是心机深重突然秒变白莲花吗？一秒钟就想和一直欺凌的对象变成BFF了？还顺便解释为什么当时堵截时小伙伴听到了垃圾箱里的电话响却没有告诉魏莱，但也太刻意了。 &emsp;&emsp;看起来，这双“野生动物的眼睛”，本不是形容魏莱的…… &emsp;&emsp;或者说，除了他俩，少年的他们都是单纯的人，只不过，有些是单纯的玩过火了？ &emsp;&emsp;父母，是孩子最好的老师。但是如果活都活不下去了，那就可能教育生存远比是非了。我一直认为那句话“龙生龙，凤生凤，老鼠儿子会打洞。”来形容家教问题完全不合理。 ——“活下去，比什么都重要！” ——“活着，从来都不是一个人的事。” 如果我能飞翔，何须眺望远方&emsp;&emsp;如果可以，谁不想一直陪在孩子身旁？ &emsp;&emsp;我想想我父母，在家务农无法生活，在我很小就外出打工，一年顶多春节回来几天，一出去，就是十几年。留着家里的老人，只会一句“你要好好读书哦”，其他的，也无法再给。但是我们那个时候问题要简单很多，因为知根知底，大家就是穷，好好读书，考上好学校，找到好工作，不要像祖辈一样穷下去。 &emsp;&emsp;而现在不一样了，很多家庭家长不能在孩子读书辨识是非的时候陪在身边，是因为可能有一番事业需要维护，简单点，就是多赚钱。或者这个时候，学生读书的目的性就没有那么强了，变得杂乱起来，那这样的“家庭教育”缺失，显得更加重要了。 &emsp;&emsp;此外，现在的社交媒体那么发达，网络无处不在，青少年很轻松就能受到一些网络腐朽思想的腐蚀，没人去告诉他们那些是正确的，那些是错误的，自然就会跟着社会大流比较多点。可惜的是，现在的网络上歪风邪气还正盛行，明辨是非显得多么困难。 &emsp;&emsp;社会在进步，所以，老师们理念也应该进步了。以前激励我们的话，或者不在适合这个时代了。“高考才是你们唯一的出路”已然不现实，学校除了教授知识，更要教做人之道，自救之道。当年我考研心理学时，也有在想，学生的心理辅导工作真的不是简单的口头说说而已。积少成多，集腋成裘，有些东西，不提早疏导，终究会溃塌。 或许也就那样了&emsp;&emsp;《少年的你》可能观看的人各有看法，但是他起到了一个很好的引导作用，把这个校园欺凌的问题，搬上了大银幕，又引起了一次比较大的讨论热度。 &emsp;&emsp;家庭问题，学校问题，社会问题，没办法给个终极方案去解决。其实，最好的方法之一，就是受害者站起来，正视这个问题，抗争这个问题。但是并不是所有人都有这个勇气。 &emsp;&emsp;做一个内心强大的人，并守护你关心的人，不要让每个少年都独自奋斗，去接受来自社会的毒打。 &emsp;&emsp;社会的毒打可以解决大部分问题，但不是每个人都能承受住这份毒打。","categories":[{"name":"一般文字","slug":"一般文字","permalink":"http://yoursite.com/categories/一般文字/"},{"name":"文读影评","slug":"一般文字/文读影评","permalink":"http://yoursite.com/categories/一般文字/文读影评/"},{"name":"影评","slug":"一般文字/文读影评/影评","permalink":"http://yoursite.com/categories/一般文字/文读影评/影评/"}],"tags":[{"name":"影评","slug":"影评","permalink":"http://yoursite.com/tags/影评/"}]},{"title":"词四首——原创古体诗词自选集(九)","slug":"OrdinaryArticles/Poetry/09CiSiShou","date":"2019-11-29T14:28:37.000Z","updated":"2019-12-19T14:56:44.739Z","comments":true,"path":"2019/11/29/OrdinaryArticles/Poetry/09CiSiShou/","link":"","permalink":"http://yoursite.com/2019/11/29/OrdinaryArticles/Poetry/09CiSiShou/","excerpt":"","text":"&emsp;&emsp;除了《一剪梅》都应该是2012年高三时期所写的，犹记得这篇《少年游》是我最喜欢的词作之一。没想到当年的我已经预想到这样的结局，活着如此，理应反思。 少年游当年行日擒苍龙，紫电乱如虹。作笔西东，作笔西东，较天马行空。 尚才往日醉成梦，千山暮雪封。红尘初衷，红尘初衷，旦晚付悲风。 柳梢青夜风轻扫，黑云微散，寒月无声。长篙东指，流水吻舷，恹恹孤灯。 大江万里共色，繁华烟气消三更。反裘负刍，凤冠霞帔，一般眼神。 一剪梅飞寒薄暮扶帘轻，累了双燕，残了秋丝。十里长亭玉容在，红了落叶，青了枯枝。 都道飞雪春不远，竭了老眼，肥了鲤鲫。人生几何害相思，从了义山，随了若士。 江城子鬼风吹零我发稀，杯酒老，月相欺。流影东沉，颜色霜雾漆。天地本来只黑白，徒无事，画多姿。 自诩陶令无耕计，乞食前，为酒泣。尔当共鉴，饥妇死足米。借我一双沟壑手，共永醉，笑伏羲。","categories":[{"name":"一般文字","slug":"一般文字","permalink":"http://yoursite.com/categories/一般文字/"},{"name":"古体诗词","slug":"一般文字/古体诗词","permalink":"http://yoursite.com/categories/一般文字/古体诗词/"},{"name":"词","slug":"一般文字/古体诗词/词","permalink":"http://yoursite.com/categories/一般文字/古体诗词/词/"}],"tags":[{"name":"词","slug":"词","permalink":"http://yoursite.com/tags/词/"}]},{"title":"词五首——原创古体诗词自选集(八)","slug":"OrdinaryArticles/Poetry/08CiWuShou","date":"2019-11-29T14:08:09.000Z","updated":"2019-12-19T14:55:13.739Z","comments":true,"path":"2019/11/29/OrdinaryArticles/Poetry/08CiWuShou/","link":"","permalink":"http://yoursite.com/2019/11/29/OrdinaryArticles/Poetry/08CiWuShou/","excerpt":"","text":"&emsp;&emsp;词大多是2012年所作，可能那时觉得填词是件十分有趣的故事。然而却并未学的豪放派词人，到多是伤情。 点绛唇重飘叠坠，积风卷得妆晶莹。素银丝展，惊鸟失落霙。 小灶酒暖，尚有暗梅诗，斑驳影。当年咏处，犹有君孤零。 关河令自信人间断珠联，青山双流泪。古渡遗舟，逗绿水疲惫。 连绵若途万里，碎十二年悲恨梦。身醉荒河，人道流萤飞。 菩萨蛮微风吹落槿花残，绕舞曼姿歌频断。相思无计日，与君叙一晚。 千斤铁蹄鞋，空嘶泪回散。山黄斜影远，归望向来天。 菩萨蛮烈风不解柔情在，苛我冰炭划分经。三秋叶不恋，明年枝犹青。 窃君作太阳，日日悬空明。葵藿何能尔，死君心方倾。 菩萨蛮桂花隐有香心透，霜华满地破清秋。千里江山梦，今夜共一酬。 此时寻芳草，不知何处有。遥望残栀影，老家植西楼。","categories":[{"name":"一般文字","slug":"一般文字","permalink":"http://yoursite.com/categories/一般文字/"},{"name":"古体诗词","slug":"一般文字/古体诗词","permalink":"http://yoursite.com/categories/一般文字/古体诗词/"},{"name":"词","slug":"一般文字/古体诗词/词","permalink":"http://yoursite.com/categories/一般文字/古体诗词/词/"}],"tags":[{"name":"词","slug":"词","permalink":"http://yoursite.com/tags/词/"}]},{"title":"《第一滴血5》：听“爸爸”的话吧！","slug":"OrdinaryArticles/FilmReview/03Rambo5","date":"2019-11-28T14:19:39.000Z","updated":"2019-12-19T13:06:41.608Z","comments":true,"path":"2019/11/28/OrdinaryArticles/FilmReview/03Rambo5/","link":"","permalink":"http://yoursite.com/2019/11/28/OrdinaryArticles/FilmReview/03Rambo5/","excerpt":"","text":"&emsp;&emsp;与你如此亲近这么多年的人，他怎么会说害你就害你呢？一般情况下，没有那么多亲属会一起来害你的。太过执着，交友不慎，可能真的会酿成大祸，遭到爆伤 。 这个剧情就没有必要复杂，但就可能意外&emsp;&emsp;但凡听到史泰龙的名字，就一定要先确定你可能只是想看一部爽快酣畅的动作片，那么就不要太过于深究细节问题。 &emsp;&emsp;我们单独讲《第一滴血5：最后的血》。开局的几分钟，大山，暴风雨，泥石洪水流，外加上激情的音乐，一开始我还以为兰博又要干票大生意，没想到是志愿者营救，结果还没有救下所有人，留下遗憾，勾起回忆。 &emsp;&emsp;回到家，和亲近的人聊聊家常，和邻居的小女孩（女主）谈谈理想，骑着马，迎着晚霞，吹着风，悠闲自得，真是一个年迈老军人晚年的幸福生活。可惜他没有家人，这个小女孩虽然叫他叔叔，亲似父亲，可惜并不是。虽然自己的父亲抛家弃女消失多年，但是因为一个往年旧闺密的一通电话，知道了生父的位置，小女孩还是想去问问他为什么要丢下自己，即便身边最后的亲人都在劝阻，也告诉她她的生父不配为人，不配他优秀的女儿去见他，也不值得她再去找他。照顾她多年的老保保和视如己出的老叔叔，极力反对，然而年仅17岁刚刚高中毕业的她虽口头答应，最后还是毅然决然独自一人去到墨西哥见生父。 &emsp;&emsp;故事到这里，才开始20分钟，我猜的大概后续是女儿不听话执意去找父亲，结果误入黑帮手，生父得知，却不管不顾。兰博听说，风驰电掣，冲到墨西哥，杀到黑帮团伙地盘，大开杀戒，救回“养女”，身受重伤，奄奄一息。养女感激涕零，和生父断绝关系，回到家园，去到大学，开启新的生活。兰博躺在大房子前的摇椅，沐浴最后的晚霞。这样不简单改改就应该是《第一滴血5：飓风营救》了吗？ &emsp;&emsp;果然，故事却没让我失望。小女孩去到墨西哥，找到老伙伴，见到亲生父亲，但是这么多年了生父看见她依然是视如敝屣，用他的话就是和她和她母亲的一起生活就是浪费生命，两人对他来说就是一文不值，毫无意义（both didn’t mean anything to him），而且小女孩并不是他想要的，可能就是本来只想享受过程，但是出现了意外。深受打击的小女孩在她老伙伴带到酒吧舞厅喝酒排解忧愁，结果被一个黑帮人员看上下药抓走了，计划培养成优秀的妓女接客或贩卖。 &emsp;&emsp;另一方面，老保保接到电话说小女孩去找生父还一直没回家，立马来告诉约翰（兰博）。老叔叔一听，这还得了，赶紧开着老皮卡跑到墨西哥，一看小女孩老伙伴就知道小女孩被她出卖，架着她就去酒吧舞厅找人。在舞厅见到黑帮一人，监视他时正好被另一个也在监视他的老嫂子独立记者看到。黑帮小伙出了舞厅，正想和随身一起的女子“战斗”一番，被老叔叔一通收拾，被迫把他带到了小女孩被囚禁做生意的地方。 &emsp;&emsp;老叔叔独自一人上去，带着匕首和手枪，结果在别人的地盘，还没动手，分分钟几十条枪围住，一顿暴打，脸上还被刀留下深刻的记号。黑帮头子是两兄弟，其中一人（老大可能）决定放过他，虽然另一个不开心了。老大想法，让他活着，就是知道了他是去找那小女孩，要折磨他和她，让他活是让他每天备受折磨煎熬，记住自己的无能，没救下“女儿”还让她成为了其他人的“榜样”（example）。小女孩也真成了榜样，脸上深深刀划的记号，每天被注射毒品，去窑子接客做生意。 &emsp;&emsp;老叔叔奄奄一息，好在被之前也在舞厅监视黑帮小伙的老嫂子救了，带到住宿救治。醒来之后一聊，原来老嫂子的妹妹也被那帮黑帮抓走，然后再找到时已经是吸毒过量的尸体了。这一听，还不担心到死？兰博费了点小力气才从老嫂子口中得出他们卖淫场所的位置，然后带着锤子和匕首就过去了。杀进那窑子，击毙几个护卫和嫖客，失足女却无一人该逃走，即便是兰博叫她们走。最后发现了已经吸毒过量奄奄一息的小女孩，立马准备把她带回家。然而在回家的路上，小女孩就死掉了。 &emsp;&emsp;回到家，老保保无比伤心，随后搬走，离开了这个伤心之地。而老叔叔，心中想的只有一个：报仇。在自己的主场地下隧道，布置各样的陷阱，准备“狩猎”。夜晚，老叔叔再去到墨西哥找到独立记者老嫂子，与老嫂子一通激情演讲，一个人潜入黑帮头子的住所，潜杀了不少守卫，还卸下了其中一个黑帮兄弟（老二）的人头，丢在他来的马路上。 &emsp;&emsp;另一个黑帮头子兄弟回去看见头都没有了的兄弟的尸体，怒不可遏，带着精英装备和手下，就驱车前往兰博的住所，誓要报仇。然而兰博将他们的引入自己的地下迷宫隧道，凭借着自己对隧道的熟悉和早已布下的陷阱，全灭匪徒，最后还活活挖出了黑帮头子的心脏。 &emsp;&emsp;故事的最后，兰博躺着房子前的摇椅上，看着还冒着浓烟的四周农场，沐浴在晚霞中。随着一段深情地独白和轻缓的音乐，故事落下帷幕。 &emsp;&emsp;虽然我还是用了很多语言来描述这个故事，除了对故事进行准确地复述之外，还想表达，这个真不是《第一滴血5：飓风营救》，而是《第一滴血5：杀死比尔》。&emsp;&emsp;简单描述就是：&emsp;&emsp;&emsp;&emsp;不听劝，养女千里寻生父。&emsp;&emsp;&emsp;&emsp;遭嫌弃，闺密出卖入地狱。&emsp;&emsp;&emsp;&emsp;太心急，叔叔单挑被修理。&emsp;&emsp;&emsp;&emsp;苍天恨，辣手摧花死异地。&emsp;&emsp;&emsp;&emsp;要报仇，主场作战布陷阱。&emsp;&emsp;&emsp;&emsp;快人心，黑帮坏人全归西。 简单又不失优雅的警示与布置&emsp;&emsp;这不是一部小孩子该看的电影，说起来基本都没有正能量。这是一部硬R级电影，主要是暴力血腥元素过多，支离破碎的身体和血浆四溅的场景还是很多的。但是这样的电影就是看得很爽快，对坏人就不能太手软，现实生活中做不大，电影里面过把瘾还是好啊。 &emsp;&emsp;看完最意外的就是，女主死了，果然很暴躁。这说明什么？不听话，还要混歌厅舞厅的未成年人，是会受到惩罚的，这个可不是“大不了铁胆失身”这么简单的了。所以说，多听听家长的话，不要随意去迪厅舞厅这种龙蛇混杂的场所，在外要多注意人身安全。 &emsp;&emsp;故事最后是坏人全灭这样的结果最重要的一点知道是什么吗？主场优势，和如何把局势扳回到主场优势。片尾十几分钟的地道战简直看得过瘾啊。虽然一开始我就在想这群笨比为什么要下隧道啊，炸了等他出来了。但是最后兰博自己还把隧道炸了，才看到这真是地道战，九曲十八弯，不是自己人，根本炸不完，而且还不知道人家虽然看起来进地道了，实际有没有真在下面。老话说，强龙压不过地头蛇，但是和“现实中唯唯诺诺，网络上重拳出击”这样的比喻一结合，突然别有一番风味。 &emsp;&emsp;其实，即便去专业的电影网站，你也可能看不到更多关于剧情和角色方面的深究，但是有些地方还是可以聊聊的。 &emsp;&emsp;比如，女主的旧闺密吉赛尔（Gizelle），生活艰辛，见到女主，一来就夸她漂亮。我当然知道她漂亮了，这还用你说。结果第二句就问“你还是处女吗？（still a virgin？）”。妆画得那么浓那么艳，一看就让观众知道她不会是好角色，在之前老保保和兰博与女主的对话中也有类似的明示，带她见父亲之前还特写了她暼女主的金镯子。的确，在电影中吉赛尔完美的完成了她的任务，带女主入狼窝。虽然说人不可貌相，但交友须谨慎。不要自诩你了解你的朋友，你看看天宝和君宝。 &emsp;&emsp;再如女主的父亲，在其他人的谈话中，就得知他抛家弃女不是好人，在女主和他见面后，依然直言不讳，就是不想和她们生活，就是看不起你，再来多少次都是要抛家弃女，不会改变。这个态度在剧情方面是必须的，因为女主父亲没有这么坚决，女主也就不会那么伤心，旧闺蜜就不会有机会带他去夜店酒吧了，故事就没法发展了。但是放在生活中，有一句怎么说来着：“生而未养，（）。生而养之，（）。未生而养，（）。”我之所以不补全这句话，并不是想说他们的恩情没有区别，只是想说，没有什么恩情是轻易报答得了的，但是你要知道很多东西是有取舍的。 &emsp;&emsp;老嫂子（独立记者卡门-戴尔加多Carmen Delgado）这个角色看起来很鸡肋，因为似乎她的角色不是必需且没有那么重要。片中她救治了受伤的兰博，和告诉兰博黑帮经营的窑子场所？但是你去百度或者豆瓣搜这部电影，演员表上她的名字更靠前。其实我觉得老嫂子最主要的重要，还是代替观众让兰博有“演讲”的对象。为什么呢？老嫂子妹妹被带走最后死了，做独立记者一直监视着这个黑帮团伙，但是她做了什么呢？什么都没做，甚至在最后兰博要给她灌输“正能量”的时候，她还是说的，事情发生了就已经过去了，生活还是要继续。内心满腔愤怒无法发泄，洪荒之力无法爆发，多少人遵循着“忍一时风平浪静，退一步海阔天空”的哲理，浑浑噩噩地过着这一如既往的糟糕生活，fucking life？若是自己一个人无法挣脱枷锁，有人来帮你时，希望你不要把锁背对着他。 &emsp;&emsp;黑帮头子两兄弟是最扯的。首先是在一次生意会谈上，老二（或许）因为把妓女们带去了，和老大起了争执；在兰博第一次孤身去敌营时，老大要放了他而老二要他死又起了争执；后来兰博杀回窑子救回养女后老二又责怪老大没听他的话，气得老大无语大喊fuck。但是后来了，老二睡着觉，头没了。老大又气得为他报仇送了团灭。这两兄弟的操作完全看不懂。老二最后一句话是：“Next time we do it my way。”结果这是遗言了。似乎看起来老大和老二一直不合，但是连这样的坏人在更大的敌人面前都能一直对外，为什么我们还要窝里斗？他们还要戴口罩，当别人的狗？ &emsp;&emsp;虽然全片暴力时很暴力，但是还算没有很突兀，和养女的骑马谈心，救回养女临死前后的真情吐露，再找老嫂子时的震撼教育，都不错。事实上，我看着有点出戏的就是，片中女主17岁，但是和兰博面相一比较，当兰博的孙女都略显小，片中却是讲的“父女情”。没办法，73岁的高龄了。但是了，现实生活中，“岳父”的小女儿是96年的，才不过23岁，三个千金都颜值出众。不然怎么是“全民岳父”呢。 最后的几句&emsp;&emsp;玩笑归玩笑，史泰龙73岁的高龄，再怎么异于常人，动作片的动作质量也会随着年纪的增大而变低，但是兢兢业业完成自己想做的事情，还是没人会说坏话的。事实上，连《金蝉脱壳2》、《金蝉脱壳3》我都看了，还有什么可以刺激到我的呢。 &emsp;&emsp;注意，文中我说了很多例如，酒吧、夜店、迪厅、舞厅等等场所形容词，并不是说我们胡写乱写，只是单纯的想暗示一些我不太想明说的话而已。 &emsp;&emsp;“听妈妈的话吧”。正如这部电影，可能你的任性，不只是你自己在受惩罚，永远不要认为，受伤的，只有你自己。你抬头看不到的地方，还有人在为你祷告。","categories":[{"name":"一般文字","slug":"一般文字","permalink":"http://yoursite.com/categories/一般文字/"},{"name":"文读影评","slug":"一般文字/文读影评","permalink":"http://yoursite.com/categories/一般文字/文读影评/"},{"name":"影评","slug":"一般文字/文读影评/影评","permalink":"http://yoursite.com/categories/一般文字/文读影评/影评/"}],"tags":[{"name":"影评","slug":"影评","permalink":"http://yoursite.com/tags/影评/"}]},{"title":"七言古诗——原创古体诗词自选集(七)","slug":"OrdinaryArticles/Poetry/07QiYanGuShi","date":"2019-11-28T13:55:45.000Z","updated":"2019-12-19T14:52:16.855Z","comments":true,"path":"2019/11/28/OrdinaryArticles/Poetry/07QiYanGuShi/","link":"","permalink":"http://yoursite.com/2019/11/28/OrdinaryArticles/Poetry/07QiYanGuShi/","excerpt":"","text":"&emsp;&emsp;此篇为七言古诗，大约是在2012年所做，时值高三和大一。 &emsp;&emsp;《夏雨辞》是我即便到现在最喜欢的作品之一，我仍然记得那时一个周末的下午，雷很响，雨很大，心很沉。如今我恐怕再也描绘不出这样的场景了。 &emsp;&emsp;《中秋杂句》是我刚入大学时候写的，我记得还是很刻意，因为想的中秋是个值得写诗作词的日子。我写过很多关于中秋的诗词，这篇，是最随性的。 夏雨辞不借兵符不求仙，黑乌连天敝空间。冲发一怒雷电裂，滚滚西水平岳巅。逐鹿甲器折销碎，艨艟千里赤壁焰。太屋山顶响铜鼓，北溟深蛟出水宽。不带春柔几分甜，无端嚎啕六月天。落下珍珠一线系，溅起瓦楞散彩延。檐前燕子闲久立，房上浓烟聚又翩。一派清荷茫茫现，满地红泥点点斑。层层波掀舞衣露，叠叠绿翡压腰弯。待到塘鱼跃江河，声消雨歇风吹栏。本为几时少闲累，始作一刻桑田干。千山万壑新绿再，饱受此番苦折难。万池碧叶亭亭立，随风扶姿托殷胭。崦嵫斜处微光见，晚有蜻蜓度凉闲。 中秋杂句且从游，天南地北空悠悠。大秋酿了丰收酒，伴君无饮一口。且回头，各种人物尽乡走。留我等品相思愁，追萤流月轻舟。且情仇，待我折戟沉西流。一纸写得言语久，海天相望君守。且心忧，四海为家业难求。世间本来长短有，福禄与月同受。","categories":[{"name":"一般文字","slug":"一般文字","permalink":"http://yoursite.com/categories/一般文字/"},{"name":"古体诗词","slug":"一般文字/古体诗词","permalink":"http://yoursite.com/categories/一般文字/古体诗词/"},{"name":"古诗","slug":"一般文字/古体诗词/古诗","permalink":"http://yoursite.com/categories/一般文字/古体诗词/古诗/"}],"tags":[{"name":"诗","slug":"诗","permalink":"http://yoursite.com/tags/诗/"},{"name":"七言古诗","slug":"七言古诗","permalink":"http://yoursite.com/tags/七言古诗/"}]},{"title":"壬辰七律——原创古体诗词自选集(六)","slug":"OrdinaryArticles/Poetry/06RenChenQiLv","date":"2019-11-28T13:43:44.000Z","updated":"2019-12-19T14:49:51.187Z","comments":true,"path":"2019/11/28/OrdinaryArticles/Poetry/06RenChenQiLv/","link":"","permalink":"http://yoursite.com/2019/11/28/OrdinaryArticles/Poetry/06RenChenQiLv/","excerpt":"","text":"&emsp;&emsp;此篇为七言律诗，大约是在2012年所做，时值高三。 &emsp;&emsp;《长诉》是我当年最喜欢的作品，一如当时我的心境，无欲无求。然而人生岂万事如人意，所以悲感交集。尤其在别离之后。没想到高中一毕业，流去的不仅仅是过往的傲气，还有那份坚持和幸运。 &emsp;&emsp;毕业未再见，诸君可好？ 长诉琥珀半轮泪半霜，一任艅艎向小沧。折浪延绵斜北冥，落日横圆逆南荒。山水远近悠悠岸，心神浮沉款款篁。苍径知我懒作扫，幽幽疏曲凄青黄。 开卷乱作抽刀舞罢河水断，仰天饮尽杜康酒。凭虚公子柔情弱，乌有先生傲骨遒。黑发平原向晚泣，白须田园对月酬。人生自古谁得意，舴艋载愁遏江流。 一月十七日夜无情乱作碧泉无暇深山静，幽笛有韵峭崖清。明明皓月破绿波，戚戚琴音碎枯情。萧萧落木逐飞尘，妍妍红日向来阴。知君此景消不得，轻划一叶见长亭。 毕业有感乱作两首其一阴云轻散露华光，银雨丝折隔青茫。残蝶弋行枯枝傍，野草横卧乱山岗。流年追去千番苦，来生思忆一岁长。可怜九月勃勃日，断送悲秋梦里荒。 其二木丹凋尽酒壶空，一别君后何相期？白发还有几年岁？黄河犹流任东西。枯琴衰声萦不去，悲歌哀调绕难离。此曲天上不应弹，散尽人间处处凄。","categories":[{"name":"一般文字","slug":"一般文字","permalink":"http://yoursite.com/categories/一般文字/"},{"name":"古体诗词","slug":"一般文字/古体诗词","permalink":"http://yoursite.com/categories/一般文字/古体诗词/"},{"name":"律诗","slug":"一般文字/古体诗词/律诗","permalink":"http://yoursite.com/categories/一般文字/古体诗词/律诗/"}],"tags":[{"name":"诗","slug":"诗","permalink":"http://yoursite.com/tags/诗/"},{"name":"律诗","slug":"律诗","permalink":"http://yoursite.com/tags/律诗/"}]},{"title":"辛卯五律——原创古体诗词自选集(五)","slug":"OrdinaryArticles/Poetry/05XinMaoWuLv","date":"2019-11-27T14:18:00.000Z","updated":"2019-12-19T14:43:57.937Z","comments":true,"path":"2019/11/27/OrdinaryArticles/Poetry/05XinMaoWuLv/","link":"","permalink":"http://yoursite.com/2019/11/27/OrdinaryArticles/Poetry/05XinMaoWuLv/","excerpt":"","text":"&emsp;&emsp;此篇为五言律诗，大约是在2011年所做，时值高二。 &emsp;&emsp;单两篇五律我都印象不浅。尤其这一句“天下一石才，平添八斗愁。”让我回想起当年的自负，虽然可笑，然青春已逝，徒有十分可惜。 &emsp;&emsp;如今再看凉辞，仍觉悲凉。 夏思横日西岩挂，乱鸟北天行。残花荒处歇，孤蝶野中隐。千里风影马，几寸游丝心。向来路犹辨，去时景不清。 读史有感琅嬛何书有？借我凡尘游。天下一石才，平添八斗愁。拭刀却狻猊，弹剑沉貔貅。醽醁凭须尽，一醉解春秋。 凉辞六首其一有凉旋空舞，随去至何处。落木追飞鸟，流云遮天路。满川游江河，一线悬枯树。知是疯人来，牛头作悲赋。 其二又凉春风暮，白马行无路。悲嘶恻天庭，哀嚎恸地府。狂歌无杯盏，乱醉犹歌舞。滚马惊嗟起，杏花村何处？ 其三再凉夜寒宿，一河挂星树。嫦娥舒广袖，织女续机杼。蝉噪蛙声澈，灯红酒味足。白马卧空棚，悲叹禁不住。 其四早凉寒雾凝，一脉圆荷露。黄草燃白烟，青鸟上翠树。野味自山来，浊酒由泛渡。忍口待我归，随耕春山暮。 其五晚凉遮蔽露，大风封山缺。一乱走江水，三年奔泉穴。遗留断章句，放逐连城决。悲绪无端由，至死或方绝。 其六春凉丝雨细，风轻落木寒。枯棋起复落，老觚虚又添。哭追十年病，欣度三日闲。明朝忍别君，有酒路归远。","categories":[{"name":"一般文字","slug":"一般文字","permalink":"http://yoursite.com/categories/一般文字/"},{"name":"古体诗词","slug":"一般文字/古体诗词","permalink":"http://yoursite.com/categories/一般文字/古体诗词/"},{"name":"律诗","slug":"一般文字/古体诗词/律诗","permalink":"http://yoursite.com/categories/一般文字/古体诗词/律诗/"}],"tags":[{"name":"诗","slug":"诗","permalink":"http://yoursite.com/tags/诗/"},{"name":"律诗","slug":"律诗","permalink":"http://yoursite.com/tags/律诗/"}]},{"title":"壬辰七绝——原创古体诗词自选集(四)","slug":"OrdinaryArticles/Poetry/04RenChenQiJue","date":"2019-11-27T13:29:54.000Z","updated":"2019-12-19T14:40:04.199Z","comments":true,"path":"2019/11/27/OrdinaryArticles/Poetry/04RenChenQiJue/","link":"","permalink":"http://yoursite.com/2019/11/27/OrdinaryArticles/Poetry/04RenChenQiJue/","excerpt":"","text":"&emsp;&emsp;接续上一篇文章，此篇仍为七言绝句，大约是在2012年所做，时值高三。 相思有感五首其一燕子江边燕子楼，燕子楼上人倚楼。落辉过后短清漏，何处明月空照楼？ 其二游园一梦相思寄，奈何相思人不识。相思无心千秋在，那人灯后无相思。 其三今年槐花我不见，人念槐花往日艳。槐花一树白如雪，散尽江岸遍锦缎。 其四苦哉九月掘藕人，却叹藕心空且枯。劲折老藕茎径断，千丝万缕倒不出。 其五蚕死留丝可成绸，蜡炬垂泪为君忧。飞蛾无心带芯灭，道是夜雨晴难求。","categories":[{"name":"一般文字","slug":"一般文字","permalink":"http://yoursite.com/categories/一般文字/"},{"name":"古体诗词","slug":"一般文字/古体诗词","permalink":"http://yoursite.com/categories/一般文字/古体诗词/"},{"name":"绝句","slug":"一般文字/古体诗词/绝句","permalink":"http://yoursite.com/categories/一般文字/古体诗词/绝句/"}],"tags":[{"name":"诗","slug":"诗","permalink":"http://yoursite.com/tags/诗/"},{"name":"绝句","slug":"绝句","permalink":"http://yoursite.com/tags/绝句/"}]},{"title":"辛卯七绝(二)——原创古体诗词自选集(三)","slug":"OrdinaryArticles/Poetry/03XinMaoQiJueTwo","date":"2019-11-27T12:59:22.000Z","updated":"2019-12-19T14:37:21.596Z","comments":true,"path":"2019/11/27/OrdinaryArticles/Poetry/03XinMaoQiJueTwo/","link":"","permalink":"http://yoursite.com/2019/11/27/OrdinaryArticles/Poetry/03XinMaoQiJueTwo/","excerpt":"","text":"&emsp;&emsp;接续上一篇文章，此篇仍为七言绝句，同样大约是在2011年所做，时值高二，自选几篇。当时无题者，首字为题。 巷里桃花春来桃花几多红，摇摇作步小巷中。料得把花簪头戴，人面不知桃花红。 老翁老翁滑琴又张弓，斗米千杯笑梁公。朝荷锄犁东向去，西归换酒三两盅。 秋词四首其一秋节因秋心秋在，秋心沟壑秋水溉。秋水从秋天上去，天人怜君降秋来。 其二我借秋刀画秋容，秋风笑我秋长空。连枝秋叶归秋落，秋雁带血秋书红。 其三秋心或因秋人变，一秋金叶一秋丘。秋家藏秋乱秋绪，秋风带泪解成秋。 其四秋风秋雨乱秋声，秋啼秋鸣作秋悲。秋人独立秋桥上，便引秋情化秋归。 &emsp;&emsp;《悲秋四首》是本人当年写秋自我感觉最好的一个。秋天总是让人感慨，让人惆怅，或许秋，就是愁，愁，就是秋。若此，似与季节无关了。","categories":[{"name":"一般文字","slug":"一般文字","permalink":"http://yoursite.com/categories/一般文字/"},{"name":"古体诗词","slug":"一般文字/古体诗词","permalink":"http://yoursite.com/categories/一般文字/古体诗词/"},{"name":"绝句","slug":"一般文字/古体诗词/绝句","permalink":"http://yoursite.com/categories/一般文字/古体诗词/绝句/"}],"tags":[{"name":"诗","slug":"诗","permalink":"http://yoursite.com/tags/诗/"},{"name":"绝句","slug":"绝句","permalink":"http://yoursite.com/tags/绝句/"}]},{"title":"辛卯七绝(一)——原创古体诗词自选集(二)","slug":"OrdinaryArticles/Poetry/02XinMaoQiJueOne","date":"2019-11-26T13:30:24.000Z","updated":"2019-12-19T14:36:43.383Z","comments":true,"path":"2019/11/26/OrdinaryArticles/Poetry/02XinMaoQiJueOne/","link":"","permalink":"http://yoursite.com/2019/11/26/OrdinaryArticles/Poetry/02XinMaoQiJueOne/","excerpt":"","text":"&emsp;&emsp;接续上一篇文章，此篇为七言绝句，也大约是在2011年所做，时值高二，自选几篇。当时无题者，首字为题。 蔓草蔓草深巷无酒杯，春花落玉有旧醅。千古风流空寂寞，凭虚公子惹惆悲。 无题君问我心何所似，料峭东风六月冰。枯枝摇坠随流水，羞与落花共长清。 悯农莫言丰年实仓廪，走马千里酒家无。可怜从阳俯黄面，十分耕耘十分苦。 无题心神不定人堪哀，小雨北风过楼台。遥闻灯噪佳人笑，红绡帐中散银来。 过破楼有感轻烟蔓草绕枯城，小扣紫窗飘飞尘。遥想当年人声沸，可知青鸟老树根。","categories":[{"name":"一般文字","slug":"一般文字","permalink":"http://yoursite.com/categories/一般文字/"},{"name":"古体诗词","slug":"一般文字/古体诗词","permalink":"http://yoursite.com/categories/一般文字/古体诗词/"},{"name":"绝句","slug":"一般文字/古体诗词/绝句","permalink":"http://yoursite.com/categories/一般文字/古体诗词/绝句/"}],"tags":[{"name":"诗","slug":"诗","permalink":"http://yoursite.com/tags/诗/"},{"name":"绝句","slug":"绝句","permalink":"http://yoursite.com/tags/绝句/"}]},{"title":"辛卯五绝——原创古体诗词自选集(一)","slug":"OrdinaryArticles/Poetry/01XinMaoWuJue","date":"2019-11-26T12:22:14.000Z","updated":"2019-12-19T14:29:31.544Z","comments":true,"path":"2019/11/26/OrdinaryArticles/Poetry/01XinMaoWuJue/","link":"","permalink":"http://yoursite.com/2019/11/26/OrdinaryArticles/Poetry/01XinMaoWuJue/","excerpt":"","text":"&emsp;&emsp;年少读书时，私爱文章。也有寒窗时光，略有心境，多有写作。尤爱古体诗词，自以为也有快乐时。 &emsp;&emsp;然时光荏苒，步入社会却再难拾起这份闲情逸致。再看旧作，颇有感触。私觉可惜，故筛选几篇，放置网络，希望有人共赏。 &emsp;&emsp;本文所集大约是在2011年所做，时值高二，自选几篇。当时无题者，首字为题。 牧牛 黄牛小牧童，吹笛春风中。时吟复低头，清水碧草峰。 春思山水丹青色，天地余飞白。春深花渐落，残香由谁摘？ 硕人硕人其修兮，月与灯俱昼。摇步翠屏影，也把青红嗅。 行人君向何处行，灼日汗飘零。若渴与瓜解，犬吠道虫鸣。 无题汉唐有遗风，塞德华清宫。茉莉百年韵，舒眉一笑中。 老犬老犬卧道旁，行人各复往。唤归食肉骨，夜深独彷徨。 秋节秋节落南空，春雷响江洪。尺书雁归寄，不敢问来鸿。 夜话君仍惆怅客，我本憔悴人。孤独守夜者，泪落闲时分。 咏梅当年咏梅处，如今知谁在。行人各纷纷，还有残梅开。","categories":[{"name":"一般文字","slug":"一般文字","permalink":"http://yoursite.com/categories/一般文字/"},{"name":"古体诗词","slug":"一般文字/古体诗词","permalink":"http://yoursite.com/categories/一般文字/古体诗词/"},{"name":"绝句","slug":"一般文字/古体诗词/绝句","permalink":"http://yoursite.com/categories/一般文字/古体诗词/绝句/"}],"tags":[{"name":"诗","slug":"诗","permalink":"http://yoursite.com/tags/诗/"},{"name":"绝句","slug":"绝句","permalink":"http://yoursite.com/tags/绝句/"}]},{"title":"不应看《小丑》，不该当joker","slug":"OrdinaryArticles/FilmReview/02joker","date":"2019-11-25T14:30:37.000Z","updated":"2019-12-19T13:06:44.092Z","comments":true,"path":"2019/11/25/OrdinaryArticles/FilmReview/02joker/","link":"","permalink":"http://yoursite.com/2019/11/25/OrdinaryArticles/FilmReview/02joker/","excerpt":"","text":"&emsp;&emsp;一开始就不该看《小丑》这部电影，你让我知道他是个十恶不赦的坏人就好了。 故事本身——这本来是个简单又不简单的故事&emsp;&emsp;不得不说，作为一部电影，2019年的《小丑》是非常优秀的，无论是故事，演员，布景，音乐，都非常不错，如果单单的一部电影，真是再好不过了。 &emsp;&emsp;虽然是一部好电影，但是我并不推荐一部分人去观看，因为对于我来讲，观看的整个过程是非常压抑的，甚至在最后，不得不排除掉其他感受，保持住那份压抑，以避免其他情绪占据心头。 &emsp;&emsp;《小丑》讲的是一个DC旗下一个超级反派的起源故事，根据部分人描述，是一部反乌托邦、病态而且荒诞的电影。简单来讲，就是一个可能因为大脑神经损坏导致无法控制自己随时大笑的底层小市民，在被欺压、嘲笑、放弃、欺骗、崩溃、激怒的过程中杀害他人，加速社会阶层冲突，加剧社会动荡的故事。 &emsp;&emsp;第一次看的时候，印象比较深的有那么几个点。 &emsp;&emsp;第一点是影片中亚瑟第一次去被强制要求去的心理治疗后回家的公车上，在放声大笑后惹恼一位带小孩的黑人母亲，这位黑人母亲看完那张卡片之后，回头看了亚瑟一眼，然后说了一句：“I am sorry。”最后舒了一口气。这个片段，那位母亲从不满到愤怒到同情再到无奈却又平静的心理过程一气呵成。尤其是她回头打量亚瑟之后的那句I am sorry，我是觉得也显示了一个平凡人恻隐之心。如果在真实生活中，遇到这样一个人，可能也会有很多人不会说那句对不起，而且那打量的眼光也不会是同情，可能为了自身安全，拉走孩子站起来，离他远远的。 &emsp;&emsp;第二点是亚瑟跑去和托马斯·韦恩对峙之后，回到家里，把冰箱里面的东西抽出来，然后把自己关进去的场景。有两点我比较在意的是，首先他把冰箱里面都东西拿出来是比较轻的，看起来他只是单纯想冷静下。还有就是这个简单的场景，整个画面就是很晃，就像一个拿着手机在拍而且手还拿不稳。实际上，整部电影的前部分画面都感觉不稳，可能是这个场景很简单，而且并不需要切换，使得这个不平静从主人公传递到了观众身上。&emsp;&emsp;第三个就是亚瑟第二次杀人的时候那个场景，从一个窗户的镜头开始，到最后也是亚瑟在窗边抬头沐浴从窗户洒进来的阳光的镜头。那一段画面都很明亮，我看到的第一反应就是，完了，他已经完全变了，而这个亮度，似乎在告诉人们，他是时候变了，也应该变了。&emsp;&emsp;最后再说一个就是电影高潮部分，在莫瑞的直播间中，亚瑟说了一句“他没有政治立场，他只想带来欢笑。”但是全片最为高潮的一句话的前半段，他却是这样说的：“当你惹毛一个被社会遗弃，被当成垃圾，精神有毛病的边缘人会怎样？”（What do you get when you cross a mentally-ill loner with a society that abandons him and treats him like trash？）这句话我看到有分明的政治立场态度。&emsp;&emsp;这些，还有很多其他地方，大家都有各自的分析，例如唯一一个亚瑟手下留情的人盖瑞是个侏儒，为什么换装后的“小丑”会在那个长楼梯跳舞…… 直观感受——事实上，哪有一个是Joker&emsp;&emsp;有一句话说得好，任何的脱离时代背景去分析问题都是不对的。很多人都会说，如果他是亚瑟，他可能也会做出同样的选择。时代社会如此黑暗，勇于反抗难道不对吗？我对他的人生表示同情，对他的做法表示理解，但是不能赞同他的决定。 &emsp;&emsp;但是正如我看到的一个评价：“……但评论中一些观点也是没谁了？说小丑这部电影在传播不正的三观，还说和他没有共鸣？我想问你和他产生共鸣要做什么？不管哪版的小丑他都是个反派好吧，你难道看个小丑还要看出个英雄情节来？……还有他杀人就杀人了因为他是罪犯，你和一个心理扭曲、精神不正常的罪犯谈逻辑到底谁精神不正常？如果每个心理不健全的罪犯都可以心平气和的和你坐下来谈三观，你觉得这个世界还会有那么多暴力和犯罪么？……” &emsp;&emsp;对我而言，每个人看电影发表自己的看法都好，就像我喜欢甜粽子，就一定需要所有人都喜欢甜粽子，其它不喜欢甜粽子的人我就是要反击他。正如我一开始所说的，这是一部好电影，我看完之后是非常压抑的，好一段时间我都没有走出这个心境。正如那个人所说的，我不是那个罪犯，我不能理解他的想法。但是我又很害怕，因为并不是每个人都会知道，那是个罪犯。 &emsp;&emsp;现实生活中，大部分人对流浪汉什么态度？避而远之，绕道而行？为什么有这样的做法，大概是因为大部分流浪汉可能衣衫褴褛，蓬头垢面，身有异味，一遇到就会知道，怕传染或者影响到自己。精神病患者呢？我倒是经常听到这样的社会新闻，哪个精神病妈妈又把孩子捂死了，哪个精神病又跑出来抢别人的东西。身边真实经历，我一个远房亲戚的婆婆，早上在院子边倒垃圾，被一个不知哪里跑出来的精神异常人士抢了铁铲直接活活打死了，飞来横祸。&emsp;&emsp;没错，这就是大部分人现实生活的场景，远不如拿键盘说的那么实在，大部分人遇到自己无法处理无法招惹的事物，第一个想到的都是避开，遵循惹不起躲得起的原则。但是莫瑞到最后可能都没想到，在自己给别人带去欢乐的脱口秀的直播中，一个原本想终结自己一生来演绎一个喜剧的小丑，最后却改变主意把子弹射入他的脑袋中。 &emsp;&emsp;这是一个joker，还是说：“I just hope my death makes more cents than my life？”更像一个笑话？&emsp;&emsp;万万没想到，你可能不知道自己是怎么来的，也可能会想不明白是怎么没的。死亡是不能拿来开玩笑的，这一点都不好笑。当然，或许取笑别人miserable life（痛苦的生活）就可以。 进步分析——他是罪犯，他鼓动的是一群罪犯《小丑》是一部将一个罪大恶极的罪犯的起源故事，请记住他是一个罪犯，你可以同情他的遭遇，但是不应该理解他的做法，更不能赞同他的做法。 &emsp;&emsp;看看电影中，小丑的举动引发的是什么样的社会问题。一个个画着小丑脸的“罪犯”走在街头，发动暴动，随意破坏社会公共设施，扰乱社会秩序，威胁人民生命财产安全，甚至随意剥夺他人的生命。 &emsp;&emsp;是不是觉得这个场景很熟悉？这还没有脱离到其它时代，this moment， somewhere，Some people wear masks，打砸抢烧，动荡社会治安，破坏社会稳定，侵犯社会安宁。怨声载道，人心惶惶。这样的“示威”，归根到底是要流血的，而无辜死难伤残者流的血，是应当把这账单记在施暴者身上，而这施暴者，与罪犯何异？ &emsp;&emsp;说起来还是似乎早就有人明白，下棋，总要有棋子，每一步的棋，总要有他的作用，不然就白费了。 &emsp;&emsp;或许，正如亚瑟所说，他没有什么政治立场，只不过是这些暴民，恰好需要一个被推到最前面的人，那么他们的暴乱才会理直气壮。 &emsp;&emsp;又或许，他只是想在会堂门口看看热闹，一不小心就被调动了情绪，变得高涨，变得狂野。 &emsp;&emsp;“魔鬼队没那么厉害，肯定是打了针或者吃了药。” &emsp;&emsp;亚瑟可能一开始只是一个社会底层的边缘人，生活艰辛贫苦，但是最后，坐在警车上看着外面的暴动，那笑容满面的“Isn’t it beautiful？”&emsp;&emsp;正如莫瑞不想听亚瑟最后一个joker，因为他已经知道那不可能只是个joker。在这个故事中，你听到了任何一个joker吗？哪有什么joker，that’s life。 &emsp;&emsp;不过，这只是一部电影而已，正如那个人的评论一样：“……社会对谁又有真正的公平？谁又生活在无歧视的理想环境？并不是所有人都会去杀人报复社会，坏蛋终究是坏蛋，但仅仅从价值观这方面来说并没觉得这电影在传播不正的三观，很正常的反派电影，一眼望去他也是个坏蛋，正常人还是能拎的清的。” &emsp;&emsp;你看清他是一个坏蛋了吗？ 我才不会反思&emsp;&emsp;没有一个时代，是完美的时代，没有一个人，是完美的人。比起苛责自己，谴责社会似乎是件更容易的事情。 &emsp;&emsp;“拿银子，是贪；拿枪，是反，他们没那个胆。” &emsp;&emsp;“人为财死，鸟为食亡。” &emsp;&emsp;“我不想就这样平平淡淡地过一生，如果我已经不能做一个好的好人，那为什么不做一个最坏的坏人？” &emsp;&emsp;“地狱和人间一样黑暗，只要有实力，恶人也会有好报。我去过，所以我知道，我想你也应该去看看。” &emsp;&emsp;I have nothing to lose。 &emsp;&emsp; “勇者愤怒，抽刃向更强者；怯者愤怒，却抽刃向更弱者。” &emsp;&emsp;……&emsp;&emsp;那几天我内心颇不宁静，但是现在我不会去想那么多，洗个澡，好好睡一觉，明天又会是美好的一天，原因很简单，因为我不会抱怨社会，“Ehrfurcht vor dem Leben”。","categories":[{"name":"一般文字","slug":"一般文字","permalink":"http://yoursite.com/categories/一般文字/"},{"name":"文读影评","slug":"一般文字/文读影评","permalink":"http://yoursite.com/categories/一般文字/文读影评/"},{"name":"影评","slug":"一般文字/文读影评/影评","permalink":"http://yoursite.com/categories/一般文字/文读影评/影评/"}],"tags":[{"name":"影评","slug":"影评","permalink":"http://yoursite.com/tags/影评/"}]},{"title":"高中创作古体诗词合集","slug":"OrdinaryArticles/Poetry/00poetry","date":"2019-10-19T08:13:19.000Z","updated":"2019-10-19T08:18:02.645Z","comments":true,"path":"2019/10/19/OrdinaryArticles/Poetry/00poetry/","link":"","permalink":"http://yoursite.com/2019/10/19/OrdinaryArticles/Poetry/00poetry/","excerpt":"","text":"千里萧瑟，归去，也无风景也无愁Swm Lee 苏魏明诗 辛卯杂诗（廿一首） 其一昨夜海棠风，吹散百花中。不知春寒至，寂寞桃园公。其二晚风浮月光，断波托夜香。几缕相思絮，寒秋寄我窗。其三汉唐有遗风，塞德华清宫。茉莉百年韵，舒眉一笑中。其四山水丹青色，天地余飞白。春深花渐落，残香由谁摘？其五黄牛小牧童，吹笛春风中。时吟复低头，清水碧草峰。其六张弓取翎羽，怡心或为趣。斐然不知数，为君歌一曲。其七月明故人怀，情浓倩女猜。回眸不经意，尝饴如梦来。其八千峰景只厚，何止登泰山。万里茫如雾，迷情问其间。其九常念思不动，优娴自风流。东风不相识，不知其何然。其十秋节落南空，春雷响江洪。尺书雁归寄，不敢问来鸿。十一乱红为我舞，心碎不解情。人生底事忙，何处觅安宁。十二金瓶一枝梅，鲜妍能几时？不知东风后，何处弃遗枝。十三当年咏梅处，如今知谁在。行人各纷纷，还有残梅开。十四君向何处行，灼日汗飘零。若渴与瓜解，犬吠道虫鸣。十五老犬卧道旁，行人各复往。唤归食肉骨，夜深独彷徨。十六残香未殆尽，春寒发几枝？一夏满子荷，空高留心痴。十七有心画江山，迷漫满城烟。一雨清飞尘，还闻车马喧。十八伏虎狮子山，猎鹰雁门关。东海采莲舟，西湖猎蛟船。十九大黑千山暗，川穿霓虹散。遥闻车鸣急，夜枭独飞宽。二十君仍惆怅客，我本憔悴人。孤独守夜者，泪落闲时分。廿一硕人其修兮，月与灯俱昼。摇步翠屏影，也把青红嗅。 壬辰七绝杂诗（廿九首） 其一镜中这人真卑鄙，漫言枉语他人寄。贫贱农人少失闲，纨绔子弟多得意。其二柳腰风摆柳色失，杏花酒美杏花醉。迷踪菜花黄蝶追，冲破苍天白鹤回。其三千古悲怆凭谁问，百世孤独人生梦。假使破舟抵万字，做梦飞蝶又何人？其四蔓草深巷无酒杯，春花落玉有旧醅。千古风流空寂寞，凭虚公子惹惆悲。其五池鱼有心暴泉岩，叛燕依情计日归。花心无奈才初落，水兴波澜一扶红。其六玉人不与我玩笑，我吵吵叨叨太闹。不知何处得饴糖，卧树一枕黄粱少。其七明月散辉千树映，几家寂寞几家忧。都道何处无喜事，空空落落停复走。其八君问我心何所似，料峭东风六月冰。枯枝摇坠随流水，羞与落花共长清。其九王堪叹瘦牡丹香，何事无情出画廊？文章总为笑人作，静女红颜非独往。其十天杀风景我杀心，滚滚秋风献殷勤。康庄大道左相邀，偏向西边追落阴。十一一曲舞尽皆开颜，徒把欢笑作戏言。多少云雨人喧谑，千古风流鲜为传。十二我自独面三千狼，何管他人笑骂伤。天生志气难泯灭，不到东岳不正装。十三人生莫谈愁上愁，只是年少便爱酒。风雨几开几度秋，大抵是空叹心揪。十四清瘦未必真相思，陌途不独假无情。星天有梦终让醒，却将美酒巨觥倾。十五莫言丰年实仓廪，走马千里酒家无。可怜从阳俯黄面，十分耕耘十分苦。十六心神不定人堪哀，小雨北风过楼台。遥闻灯噪佳人笑，红绡帐中散银来。十七一着席白半露雪，春姗轻步泪晶莹。多言红尘深无路，劝君莫夸自清灵。十八区区人生数十载，一山不登二山来。借得云梯上山去，半悬空中何其哀。十九九曲连环策马刀，从随萧萧鸣东枭。一骑平川八千里，汉家百万枯骨郊。二十千里悲天肥如油，白云飘过一声愁。不知何时成海绵，一路吸附一路流。廿一一夜黄雨梅子香，半风瑟瑟半风凉。有酒借来且暖胃，不知春寒梦几长。廿二几日春来雾霭霭，昨又立夏天未开。守得一干枯索塘，只盼雨乱且疾来。廿三春蚕老死桑未落，夏荷新出雨不休。祝融燃情或气弱，一脉亲承暗神州。廿四逐名追利或为何，一宿一餐皆自可。春去愁上心头坐，秋来还将寂情搁。廿五轻烟蔓草绕枯城，小扣紫窗飘飞尘。遥想当年人声沸，可知青鸟老树根。廿六绝代风华叹几载，一川烟草随火烧。各人食来皆相似，不求富贵先求饱。廿七灯红酒绿车马喧，平壁绚彩暗见天。疑心明月晴不再，独自垂泪不成眠。廿八轻狂少年轻挥鞭，老牛闻声且徐沿。姑娘扭头荷中散，不知重面是可怜。廿九独坐空楼人心烦，忽闻窗外鸟声残。若只惊飞雨打翼，不如枯笔成笑谈。 自诩缱绻绸缪缠绵绿，经纬纺织缥缈红。怅怅懆懆惵惙惙，惶惶悢悢愫悾悾。 巷里桃花春来桃花几多红，摇摇作步小巷中。料得把花簪头戴，人面不知桃花红。 老翁老翁滑琴又张弓，斗米千杯笑梁公。朝荷锄犁东向去，西归换酒三两盅。 悲秋五首 其一绝地未死春依旧，挑破重秋复见天。何时浊云毕尽去，立拔环刀割月弦。其二多少风雨多少悲，秋风吹罢又飞回。才从天上下黄泉，又强月寒捉炙辉。其三落黄无奈悲秋风，迁路不悔封尘中。一飞九天生枯叶，不笑残凉已过冬。其四天南地北双飞燕，东风西雨各伤心。我恐悲秋伤过客，归程万里望月亭。其五落叶吓鱼入石避，悲嗟惊鸟离巢飞。愤恨不堪担月影，我借秋刀夜杀人。 秋词四首其一秋节因秋心秋在，秋心沟壑秋水溉。秋水从秋天上去，天人怜君降秋来。其二我借秋刀画秋容，秋风笑我秋长空。连枝秋叶归秋落，秋雁带血秋书红。其三秋心或因秋人变，一秋金叶一秋丘。秋家藏秋乱秋绪，秋风带泪解成秋。其四秋风秋雨乱秋声，秋啼秋鸣作秋悲。秋人独立秋桥上，便引秋情化秋归。 有感五首 其一燕子江边燕子楼，燕子楼上人倚楼。落辉过后短清漏，何处明月空照楼？其二游园一梦相思寄，奈何相思人不时。相思无心千秋在，那人灯后无相思。其三苦哉九月掘藕人，却叹藕心空且枯。胡折老藕茎径断，千丝万缕倒不出。其四今年槐花我不见，人念槐花往日艳。槐花一树白如雪，散尽江岸遍锦缎。其五蚕死留丝可成绸，蜡炬垂泪为君忧。飞蛾无心带芯灭，道是夜雨晴难求。 壬辰五律杂诗（九首） 其一月破中天残，雾愁云地宽。畎水漳河流，村树南山攒。鹏飞了路遥，叶落知夜短。清清落魄人，不足苦倚栏。其二青山请为荫，沃土殷作棺。问我何处葬，得君此地勘。无能芊芊手，不才滔滔畔。天高莫难伤，匆匆小径延。其三平江远更延，舟泊酒家边。细烟随风舞，残叶沿影翩。无声蛙乱叫，有情人未眠。寂寞广寒宫，舒袖为谁颜？其四秋风无几日，秋事倍伤身。枯石久折木，断塔常忆峥。落陌无人问，生道有仙升。不知若我辈，何处长伤神。其五横日西岩挂，乱鸟北天行。残花荒处歇，孤蝶野中隐。千里风影马，几寸游丝心。向来路犹辨，去时景不清。其六晴阴低水望，隔山送青影。空留春壳在，徒画夏情阴。漫漫遥遥阔，寂寂枉枉轻。伤心欲滴泪，此地无相亲。其七大路喧亦平，小曲静且幽。善奔追飞鹤，安缓钓轻舟。公子患风瘦，亲身忧鸠啾。天下大事忙，徒坐青发秋。其八乱雨红残忾，飞影奔白溪。青鸟鸣恰恰，绿竹曳猗猗。秋发随刀下，春情与怨齐。辽辽野径远，杜宇催别离。其九车马来往疾，行人叫嚣高。坐卧气不匀，伏步情且噪。忽忆南山阴，遥想东皋嚎。何日囚樊笼，忘我明月妖。 读史有感琅嬛何书有？借我凡尘游。天下一石才，平添八斗愁。拭刀却狻猊，弹剑沉貔貅。醽醁凭须尽，一醉解春秋。 南方有嘉木南方有嘉木，人传为霜斓。鸡鸣花欲落，蝉唱露先干。翠微倾远径，花圃荒邻园。先生善承蜩，奈何倚栅栏？ 凄词越女多情意，南柯本寡欢。十年两行泪，三秋对眼穿。一心失五色，四海落八番。六月梅子黄，九州还独酣。 答友伊人语不凡，陈酒香我友。清新细雨荷，含蓄微风柳。烽火高啸马，殷勤低语鸠。未至情深处，借醉凭生愁。 凉辞六首其一有凉旋空舞，随去至何处。落木追飞鸟，流云遮天路。满川游江河，一线悬枯树。知是疯人来，牛头作悲赋。其二又凉春风暮，白马行无路。悲嘶恻天庭，哀嚎恸地府。狂歌无杯盏，乱醉犹歌舞。滚马惊嗟起，杏花村何处？其三再凉夜寒宿，一河挂星树。嫦娥舒广袖，织女续机杼。蝉噪蛙声澈，灯红酒味足。白马卧空棚，悲叹禁不住。其四早凉寒雾凝，一脉圆荷露。黄草燃白烟，青鸟上翠树。野味自山来，浊酒由泛渡。忍口待我归，随耕春山暮。其五晚凉遮蔽露，大风封山缺。一乱走江水，三年奔泉穴。遗留断章句，放逐连城决。悲绪无端由，至死或方绝。其六春凉丝雨细，风轻落木寒。枯棋起复落，老觚虚又添。哭追十年病，欣度三日闲。明朝忍别君，有酒路归远。 清静辞绣鸟空啼花落忙，巧柳枉生河断淌。青丝带愁鸢借去，红尘掩质离路罔。丧家傲犬知自嘲，离群残燕失己伤。梅鹤痴得清静在，南山幽曲无草长。 长诉琥珀半轮泪半霜，一任艅艎向小沧。折浪延绵斜北冥，落日横圆逆南荒。山水远近悠悠岸，心神浮沉款款篁。苍径知我懒作扫，幽幽疏曲凄青黄。 乡人愁小月弯弯寄愁怅，几家无情人断肠。破庭深深无花红，层峦郁郁有鸟唱。守得黄犬吠陌客，留着瘦禽待落郎。不堪荒草荫浅苗，一厢殷勤付流江。 旧访窗外有花花不发，室内无人人堪下。九折山路刚下车，三番水流又骑马。牧童才解黄牛索，村舍方开青春匣。浊酒不弃一饮尽，淡茶徒受旧人夸。 开卷乱作抽刀舞罢河水断，仰天饮尽杜康酒。凭虚公子柔情弱，乌有先生傲骨遒。黑发平原向晚泣，白须田园对月酬。人生自古谁得意，舴艋载愁遏江流。 闲日自说低声下气本吾愿，忆得陶公三径荒。只因无能难断念，岂非有情易感伤。古人失意可借酒，今我残生怎返光。一随风景任老去，心如天地倩谁藏。 毕业有感乱作两首其一阴云轻散露华光，银雨丝折隔青茫。残蝶弋行枯枝傍，野草横卧乱山岗。流年追去千番苦，来生思忆一岁长。可怜九月勃勃日，断送悲秋梦里荒。其二木丹凋尽酒壶空，一别君后何相期？白发还有几年岁？黄河犹流任东西。枯琴衰声萦不去，悲歌哀调绕难离。此曲天上不应弹，散尽人间处处凄。 一月十七日夜无情乱作碧泉无暇深山静，幽笛有韵峭崖清。明明皓月破绿波，戚戚琴音碎枯情。萧萧落木逐飞尘，妍妍红日向来阴。知君此景消不得，轻划一叶见长亭。 念归客念归客，夜渐深。风雨显，伞犹驻。千鸟尽，黄犬回。蜂入巢，蚁易穴。纵有晴，须更说。空又厮，难相解。应半语，子不言。谓我愁，何须解。山有峰，海厌深。量有度，仁不义。百难与，智神清。重山重，断其断。兴其兴，归吾归。 砭时歌腹中空空，佳食难衷。为何难咽，心已重重。古之贤者，淡求名利。今之学者，以古谋幸。朝朝日出，冥冥月坠。一夫为柱，众蠹蚀木。木石前缘，已有侧重。咄咄逼人，原嗜酒命。饮者有醉，饮者浇愁。明明清泉，不可决觉。所谓食粮，众所拼抢。人人济济，归归本心。举目饮天，三尺神明。君有性兮，落云泽雨。换而新之，如姣如皓。亲亲子与，悠断南绝。大路歌兮，执手相迎。 夜书昨夜秋风凉，残星取暖去。今宵夜更冷，隐星竟出来。缘有上令召，为作指路引。旁人识路走，我独向天看。茫茫沉沉阔，隐隐虚虚合。翻身风折叠，挥手光盘旋。千军提叛贼，天将擒佞人。一扶初光时，万物开明明。唯我仰视之，下召宣我往。天殿虽好舍，不如归家里。人间有浊臭，待我清扫去。大路有洁日，上去亦不迟。 书怀残光浓雾中，路湿雨亦稀。亲朋期日缺，陌途鲜惊依。鬼话疯人语，破草敝蓑衣。一人不知往，天下几女子。静中有何致，闲里无可唏。徒走醒又睡，风过又窗倚。照镜疑三目，伸手似五指。可怜今夕月，西风兼雨期。衣中藏个口，禾火心还栗。天可右勾变，大江横舍一。清河几多水，心竖草千里。欲约寄月情，飘飘戈下际。苟凭生死去，且盼酒米祭。 破夜书怀昨夜言千字，今朝尝肃心。比翼单飞燕，和光入世归。天晴灯阑光，无人夜单行。寂寞听风影，惆怅观光音。少年不胜酒，邀月代我饮。东坡从中来，天高月不晴。去凉何其致，热火中烧寒。洗戟忆前朝，空话亦有道。东风本应无，只是孔明催。菊在南山下，松居三径荒。一人知其往，何须笑折腰。拔山虽盖世，天亡不可轻。若是宴中灭，何会垓下围。汩江水不清，洁垢愈沾尘。去他王堪瘦，十歌多叹留。岁月空蹉跎，今人难吟收。花落春中尽，叶弃秋日回。我自逍遥去，扁舟凌云天。 中秋杂句且从游，天南地北空悠悠。大秋酿了丰收酒，伴君无饮一口。且回头，各种人物尽乡走。留我等品相思愁，追萤流月轻舟。且情仇，待我折戟沉西流。一纸写得言语久，海天相望君守。且心忧，四海为家业难求。世间本来长短有，福禄与月同受。 少年事不厌秋雨潇潇下，虽如青丝不是春。昔日风烟绝胜柳，今地风雷尽苍魂。射鹰驱狼毕侵意，跃马扬鞭定乾坤。肝胆如裂未成气，印面啮血心不寒。待到功名鹊喜泣，借尔盘古开混沌。 前道那个门前何所似，莫非昨才离别人。大笑径取拍肩去，转面笑颜浑不识。不堪欲解缘何误，由来一体才出门。天道苍茫路途远，宜结伙伴防豺狼。千番风雨有何怕，一举四手折天横。 树高悲狐树高木折身既死，扎根三丈不偏移。大鹏展翅拔山起，飞阔千里一鸣回。黄沙射日牵我心，清流小桥浣衣引。自古炎黄向天地，惊死残命念本情。一思一眷难判明，黑发犹从霜鬓生。怀此祷先同悯者，具备乘鹤始毫挥。 春思一点春思三秋起，日日复念雪欲期。似是重唱越女词，心悦君兮君不知。由来本是托寄物，何管相思变成诗。可怜假情害真意，多由总是有人痴。至寒不过愁肠酒，几炙又堪暖我心。满树芳芳正骄傲，无奈却道春未至。天下何处是放翁，独破冰中无所几。 战 树其苍兮木其黄，凤其鸾兮龙其刚。人其哀兮气其昂，灭孤重兮兴不亡。去其国兮雾漫茫，归其家兮甲兵强。提携剑兮为君死，鬼雄魄兮生人别。主其令兮将其将，客之宴兮泣涕下。三尺神兮天明鉴，戈矛对兮情亦忾。哀其生兮域应加，汝妻子兮我嫂侄。君入归兮君乃葬，生不付兮生者爱。松之傲兮神以灵，竹之韧兮魂以固。再与战兮折我戟，垂而治兮我宁奴。而慨记兮三杯酒，清明正兮代我饮。 夏雨辞不借兵符不求仙，黑乌连天敝空间。冲发一怒雷电裂，滚滚西水平岳巅。逐鹿甲器折销碎，艨艟千里赤壁焰。太屋山顶响铜鼓，北溟深蛟出水宽。不带春柔几分甜，无端嚎啕六月天。落下珍珠一线系，溅起瓦楞散彩延。檐前燕子闲久立，房上浓烟聚又翩。一派清荷茫茫现，满地红泥点点斑。层层波掀舞衣露，叠叠绿翡压腰弯。待到塘鱼跃江河，声消雨歇风吹栏。本为几时少闲累，始作一刻桑田干。千山万壑新绿再，饱受此番苦折难。万池碧叶亭亭立，随风扶姿托殷胭。崦嵫斜处微光见，晚有蜻蜓度凉闲。 梦野花残酒绿圆梦缘，酒洒黄土花不晓。借得春茗三更尝，偷来骄阳难过饶。青竹有叶一枝扇，冬松无木半革干。我不借酒驱无意，酒不得我赞无言。一迁白马走千里，却见江海平九天。若为梧桐倚墙绿，可非芭蕉夜难眠。夜卧东坡醉复醒，涛声不显人声贱。喧喧连岸三千丈，岸水江天四处延。一任狂月得君愁，君不明言酒自消。不才千杯为君饮，可知我君为谁汍。独坐合丈酒轻贵，人来少失味不甜。我家有树曰合欢，植在村头麦田绵。但见月落人长在，只因觉醒无外显。村头树下知何人，知君只爱花下艳。花未吐露人未醉，人借花语解花娇。花岂人语知何意，人恼花语解难晓。大风春落全零落，知是花魂鸟魂谙。杯中见月为君笑，知君天奈空难了。花欲乘风化风去，蝶怨花落不解缱。风不招蝶蝶自怒，半为恼风半为羨。只恐夜深君独醉，故借翩翩声声断。茫茫浩浩飘飘碎，跹跹叠叠长长厌。别君去兮永不还，本只江岸夜饮拳。千里驱车走长城，日日夜夜似年年。万山青林岩半露，百里人烟作酒钱。相见时难别亦难，春去秋来不得闲。去时小姬灭纣暴，归时马嵬影姗姗。牛毛轻落路未湿，同行乡人尽梦连。我本人间楚狂客，宁为此伊憔悴颜。落落苍天无人问，独破清漏夜长眠。风吹百花蝶翩舞，蝶恋花绵如风渐。今夕月明思君泪，明朝山隐绝君雁。 词 唐多令灯红酒绿足，窗前盼月下。寂寥烧烛夜探花。思愁本来日日呈，约嫦娥，无非她。 如梦令空山流泉泠石，老树幼雏初鸣。东盘西绕折，忽现竹稀舍处。甚好，甚好，邀我共尽余杯。 昭君怨小诗未带真情，却有流火飞萤。俏得惹人爱，催香茗。江山何必亲承，谁家无事空忧。念往事伤心，泪竭流。 昭君怨秋叶自有芳尘，倩谁无情空扫。随风往事追，已作灰。昔忆不留念去，偶有微尘罔罪。好汉当年勇，世人悲。 昭君怨银杏暗香无语，權丛背后有声。长凳分两头，有何人？灯火明过月影，密云隔行月升。车流来往急，未启程。 点绛唇重飘叠坠，积风卷得妆晶莹。素银丝展，惊鸟失落霙。小灶酒暖，尚有暗梅诗，斑驳影。当年咏处，犹有君孤零。 关河令自信人间断珠联，青山双流泪。古渡遗舟，逗绿水疲惫。连绵若途万里，碎十二年悲恨梦。身醉荒河，人道流萤飞。 采桑子百花残时百花归，落蕊烟挥，不堪堕摧。飞黄浩浩寒魄辉。乱红流水怕污闺，葬花人卑。料谁轻扫，窃作农家燃火灰。 阮郎归龙虎榜头第一名，万众齐仰之。宝铛金玉隐还露，拆而随散之。一袋烟，一壶酒，老头垄上守。若是百闲无一事，可否回乡走？ 阮郎归一线传音话语少，问我归是否？每每欲谈千万言，却泪止回流。此无月，彼处有，得日再回首。别问我心可会怨，天下共西楼。 菩萨蛮微风吹落槿花残，绕舞曼姿歌频断。相思无计日，与君叙一晚。千斤铁蹄鞋，空嘶泪回散。山黄斜影远，归望向来天。 菩萨蛮烈风不解柔情在，苛我冰炭划分经。三秋叶不恋，明年枝犹青。窃君作太阳，日日悬空明。葵藿何能尔，死君心方倾。 菩萨蛮桂花隐有香心透，霜华满地破清秋。千里江山梦，今夜共一酬。此时寻芳草，不知何处有。遥望残栀影，老家植西楼。 画堂春小宴酒散影蹒跚，乡人几多言语。他处独坐观秋绪，风流词句。去年中秋时雨，惊得夜啼无趣。岂知今年异乡里，还添忧郁。 诉衷情翠竹挟雨掩清泪，暗有伤荷意。孤亭檐落无语，执着一线系。断风尘，谙世音，填江月。蛙声乱坠，老犬轻吠，抑郁人醉。 诉衷情三更风雨三更秋，寒烛寒心忧。千里遮蔽不透，还拂枯琴留。虫鸣残，杯酒干，灯芯断。一双老眼，一片赤心，一声长叹。 诉衷情绣锦玉案盈满肴，也得众亲笑。月光不见人在，对影燃火烧。遥记得，中秋夜，残栀招。往年共聊，今日分散，何时共嚣？ 浪淘沙一载半春秋，残力回首，明明历历意在暖，枉汝不识开眼传，谁吾思秋。雪葬荷花寒，尔绝私情。日日得见是汝影，却难月色空掩晴，问汝可名？ 浪淘沙乱红已荣里。倾地寻觅，南山不顾耐凄离。又欲平心攒星集，霾云遮蔽。应得已难记，楫舟已启。逆风击浪未远已。两畔故事事事忆，吾谁与寄？ 浪淘沙早日疑别离，日见察理。行如风景静似绮。窥眼已然思亲密，漫言心底。忽见为人记，始觉忿罹。日日伴君不在意，今愧旧日狂妄语，汝安能记？ 浪淘沙夜深叶悄息，念残蕊亦。十年一剑不弃疾。亮剑谁有不平事，拭者谁知？可怜无所谊，寒风习习。向看灯火不灭处，心中倩谁可堪思。沉睡千里。 少年游当年行日擒苍龙，紫电乱如虹。作笔西东，作笔西东，较天马行空。尚才往日醉成梦，千山暮雪封。红尘初衷，红尘初衷，旦晚付悲风。 柳梢青夜风轻扫，黑云微散，寒月无声。长篙东指，流水吻舷，恹恹孤灯。大江万里共色，繁华烟气消三更。反裘负刍，凤冠霞帔，一般眼神。 虞美人蛩鸣犬吠渔人灯，今夜有秋风。月应来诺与之约，中秋栀子残香为谁留？千山重阻催思绪，我本居故里。多少话语应传说，岂能一线了解心中事？ 虞美人天下风景多谙情，无奈飞思有。衣缝密密身既暖，倚墙东望稀星怎解忧？可恨两行慈目泪，天涯游不走。人生能有几多愁，忍看八月飞雪六月秋。 鹧鸪天秋风吹罢叶应少，格骨百筋炼火烧。白发老者须尽银，青炉红锤清酒浇。尘沦乱，性形变，我为少年空嗟叹。期颐过后岁犹长，我心一只白头雁。 鹊桥仙深深庭院，乔木早枯，鹊鸦不见闺帘。羞月遮霞琥珀片，清秋不敢锁朱颜。绝壁半劈，黑城绕山，无酒洒血正酣。日落崦嵫拭宝剑，自诺红染一河天。 蝶恋花燕子微风杏花楼，纤草陌纤，曲径无通幽。料得生得躯壳善，难得腹内几春秋。空怜葬花人多情，痴痴凝视，心乱意不在。私借月老和红线，不知多少方缠绵。 醉落魄祝融气盛，钰宝不足炼其魂。晴云落魄惊鸟乱。十分嚣张，八面铜鼓坤。岁岁年年袅气散，生裂暴戾应沉淀。日高城空万物尽。快过烟渚，乐甘霖淳淳。 醉落魄大夜落余，明灯阔室人头攒。自古人生风雨中，百三十年，携刀不磨剑。泼墨山间寒气深，黑云翻卷恶龙回。十年刃刀今废倦，金光霞辉，虬髯青发灰。 醉落魄月本长有，可惜今日约不候。此时不共残烛。三三两两，归去也思友。天涯何处无左右，半晌悲伤且望柳。青丝借风微摆走。本待今日，共饮菊花酒。 一剪梅寒心一叶悬半壁，春头日上，落魄江郎。斜照透过愁云来，风色萧萧，哀声枯塘。犹记当年自在处，隐影白鹤，野水辽旷。可怜白马追不回，秋风卷草，来日方长。 一剪梅落破江山谁为王？南面称孤，大河西望。烈雁带血硝烟漫，黑灰失色，枯肠径断。笙歌靡靡使人怨，行者纷纷，归心似箭。奈何馁虎势威远，千里愁路，豺狼跛现。 一剪梅飞寒薄暮扶帘轻，累了双燕，残了秋丝。十里长亭玉容在，红了落叶，青了枯枝。都道飞雪春不远，竭了老眼，肥了鲤鲫。人生几何害相思，从了义山，随了若士。 苏幕遮叶未换，景未变，物格人方，一墙藤枯乱。满院落叶归根散，斜雨微风，渲染相思慢。花开时，香一段，风流尽颤，堪受人行懒。我欲借看画柳诗，芳菲无情，谁恨我多情？ 钗头凤离恨天，万丈渊，何处相思未成眠？三千里，二十年，衰草枯扬，荒阳斜远，念，念，念。赤壁下，大江边，笑曹操刘备孙权。机关尽，聪明断，儿女情长，戎马江山，贱，贱，贱。 江城子日暮收织急炊烟，濯素手，作羹汤。八仙锦华，斜月破竹篁。强耐红烛湿画扇，倦新眉，失晚妆。昨宵云书入梦来，疑今日，似昨朝。点点清泪，深深倚栏干。凉暗春风无去处，美人案，为谁看？ 江城子鬼风吹零我发稀，杯酒老，月相欺。流影东沉，颜色霜雾漆。天地本来只黑白，徒无事，画多姿。自诩陶令无耕计，乞食前，为酒泣。尔当共鉴，饥妇死足米。借我一双沟壑手，共永醉，笑伏羲。 孤雁儿晴空无云蔽热情，孤鹜与谁共飞？了然应是一羽重，遍却亢无寻回。残蝶未央，哀蝉失鸣，空空也如风。本是比干失心后，可怜卖菜老妪。若将从书说否字，忠义或难成颂。无心者死，由使之至，痛人不自已。 解语花野菊遍地，风微物密，正独往凉坝。东边芭蕉，西边橘园兼杏枣枇杷。凝息应听，雨打竹叶珍珠裂。还更说溟潆隐处，有蓑衣人家。黄犬不住吠鸣，邻家自由猫，几只老鸹。炊烟徐上，应是唤我归去把桌抹。几多烦事，经得起风吹雨打。自在人风景如画，画中可汗浃。 夜合花大道苍茫，人境迷皇，凭生千万孤独。怎得忘记，风伤雾失哀处。何时逢，黄山月，几点竹影倚门户。太白鸟道，借酒浇愁，漫叹不足。雄鹰折翅始飞 铁杵久磨成针，耐若何苦。无情自咎，才过多少夜烛。收拾罢，莫强伫，只不过重展宏图。卧薪尝胆，破釜沉舟，胯下之辱。 暗香六月飞雪，禁不住哀嚎，好生寂寥。刷白蒿莱，那得逍遥进紫霄。这一声声悲音，知为何，流诉到老。说无了，甚无了，束搁枯牢。肠寸寸断，心亦片片碎，吾谁与笑？狉狉白驹，追一缕清风无恼。安得昌荣盛地，闲落脚，半食干草。莫叹感，却叹感，此地迢迢。 桂枝香清风路中，白桥横上，映一河流涟。榆桑柳槿榧檀，苍叶飞乱。伏尸波上千青残，悬钓渔，不知哪番。断桥河岸，雷峰塔下，金山寺畔。念了余，为何胡弹。画满城山雨，其人渲染。管毫木端谁看，笔下灿烂。知君无言可推辞，故借风景代君观。银河一桥，执手泪眼，百代遗传。 念奴娇·宿雨初晴初醒长凉，一晚雨，几番北风私语。雾清不透，拂衣袖，茫茫不堪却步。浮影隐廊，流香跃素。几人携伴与，声声思断，千万风景曾歇。云中哪个放肆，惊雷兼霹雳。龙头蛇身，持令扬器，愧怍怍，不知小口何事？何折得意，扫我暗暗异，飞奔千里。人间无事，仅是悲天人泣。 眉妩轻描小墨眉，淡染红唇，簪花衬云落，霞辉身上着。摇作步，回镜羞笑还默。我为君妆，君不知，乱心之作。两行泪，散彩污玉容，流郎何处乐？腰系花围裙，炉灶转不停，火烤烟熏。老脸满纵横，犹带笑，应是爱子省亲。盛席华宴，老无力，仅识厨技。夜半肴早凉，向门坐，渐天明。 眉妩流一束清梦，待峰万仞，作飞阶镂空。追天地飞白，微微冷，好景待似旧弄。荒草黄沙，向往日，兔穴蛇踪。莫叹惋，留香愁灰恨，开眉一笑中。后日可有尽，道色应收忆。潇潇狂雨。雕琴红袖少，浊酒浇。海棠清馥正浓，一珍重。到某日，听来且用。无奈春欲走，莫匆匆，莫匆匆。 赠言 千载一古，百世二栖。绝天地之无情，识盈虚之有治。白马疲而止三年，青鸟倦而步三阶。诧傺无绪，愁痛惨怛。然吾以吾志定天下，犹不得求吾心之异已，悲夫。得见时或不多日，相言语或不多时，其心不解，其志不详，其理不察，其言不谙，纵无独绝之冠言，未深白之无力。然求以深也欤，追而思杰，生而衣，死而窆，空空一世，留几多烟华浮云，长歌当哭，轻生死哉。狭口逼仄，丛草参差。前路无途，顾影自怜。望君奋而起，虽坂上一蛙，亦胜井中自诩。浑人比比，昌言胜义。镜花水月，别无二致。言思卓绝，彪炳千秋，亦不远矣。言有尽，思无邪，望君自勉，若期有见，未望远也。 大学初识 遥闻大学之道，肩摩毂击。昏昏然庸昧，漠漠然无知。大学者，学之大也。未谙此道，私以为朝乾夕惕，焚膏继晷，明发不寐，以解千载之困也。若然，则十二载思学，亦未绝非凡之难也。成电之名，置邮而传，遥听发然，此鸾翔凤集，虎卧龙藏之所，吾等惟伐毛洗髓，发扬蹈厉，及日，及锋而试。或激浊扬清，或飞扬颐指。然黄口小儿，惟思鸡口牛后之琐然，每每思来，爽然若失。及至入学，亦有蒙蔽之心，且无丹楹刻桷之楼，亦无华彩富丽之舍。区区八百亩之地，半刻且尽，井然无多。再有学时，不知一言，大如羝羊触藩之感。又忆田园庐舍，朝观烟波浩渺，名赏西日横荫，惬意自怡。偶班荆道故，惘有悲戚，唯恐不知所读。然七尺之汉岂涉难且退，我大成电之名空穴之风？学者，学也，非受者。山弥高，登之弥劲；海弥深，潜之弥勤。囊萤映雪，闻鸡起舞，“以中有足乐者，不知口体之奉不若人也。”尚巍巍电子信息，擒来且用。每有克绍箕裘之欲，精采秀发。无欲无私，无愧无溃。且思察学困，尚有硕望。虽难耳提面命，但精神之言，匡我不逮，使不佞发聩，亦光荣之路也。学也不知凡几，崇论宏议，自出我口；闳中肆外，然出我手。恰同学少年，亦心系采兰赠药之思，且有耳鬓厮磨之忆。天隔一方，各求己任，无边风月，时日无长。善交者，不言而群集，善文者，不作而群闻。金风扬面，且徐且行。大学之道，虽塞仍广。莫言苦折，再有复日，亦何莫不然。大者，学为重，友为同，争为次。功名之誉，可遇可求。拔攀之势，且寻且记。搜索枯肠，诚无言辞，各番私论，聊复尔耳。 整理于2013年10月6日0:46 此中绝大多数为苏魏明在高中时期所作部分（有几个是大学伊始），如今整理而来，也算对高中的那段风光岁月有个交代。聊以自慰，希望大家别拿他用，算是仅供欣赏吧。","categories":[],"tags":[]},{"title":"别人才是年轻有为的高材生","slug":"DesperateSeries/06bierencaishi","date":"2019-10-19T07:28:56.000Z","updated":"2019-12-19T13:00:53.300Z","comments":true,"path":"2019/10/19/DesperateSeries/06bierencaishi/","link":"","permalink":"http://yoursite.com/2019/10/19/DesperateSeries/06bierencaishi/","excerpt":"","text":"一样的开始 他们站在那里，我离他们也就十个步子，他们谈笑着，气氛十分轻松，似乎还带着些欢乐。 其实也没有过多的话，只不过是一个副总带着一个新来的行政人员介绍一位已来三年多的管理人员，言语中描述着，这是公司的新秀，”年轻有为的高材生。” 事实上来讲，也的确如此。三年多，步步高升，备受器重，前途无限。只不过，突然想到了自己，同样三年多，却只不过是一个丢了成电脸的废物。顿时充满了羞愧感，自卑感，和满心悲凉。 应该有这么多的疑问吗？ “叹人生，不如意事，十常八九。”不知不觉，人生的十之八九，却变得没了那些分量。再不如意的事情，总能在间隙中找到一个舒适点，不激进一步，根据现状慢慢妥协。或许正是因为这常态，反倒让人觉得，不如意的事，才是人生应该充斥的环境，倒也不必再去挣扎，去改变。 时间一直是个美妙的东西，随着她的流逝，总能带走很多不愉快。如果再加上一点庸庸碌碌，看起来席不瑕暖，整天很充实。从早忙到晚，总会让人觉得，我这一天天如此辛劳，人生必不可能无趣。 习惯也是一件美妙的事物，无论是习惯了每天的作息，每天的工作内容，每天交际的人物，就算有少许意外，总能靠着充足的经验圆润回来，就很舒服。毕竟常言道，“安安乐乐才是福，平平淡淡才是真。” 所以我一直处于一个习惯了的舒适区，这样，或许偶尔出现的不安才无法引起内心的骚动。毕竟现在所处的就是我每天都在重复的，它不会出现重大的纰漏，所有的问题都能够有机会解决。就像温水煮青蛙，在死之前，一点点的改变，并不会促使我做出改变。然而，如果这个水温上升的速度足够的慢，或许这只青蛙并不是被煮死的，只是老死了而已。 因为，或许很多人不想在已经习惯的生活中做出一些改变，只是害怕这改变会失去一些东西。这些东西或许就是一直安于现状的包袱。古人已经说的很明白了，“置之死地而后生”，“背水一战”。很多的故事也这样阐述，我一无所有，还有什么好失去的。往往在这种时候，才让人去拼搏出新的希望。所以说，安于现状，固步自封，停滞不前，或许没有什么问题，甚至这才应该是正常的选择。 假如还有意志力的话 突然想起一件陈年往事。应该是在高二快结束了，每年高三学生要毕业了，学校都会允许一些淘旧行为，规划一块地，让即将离开学校的高三学生，把自己不想带走的旧物品先平价卖给后生。我一个同学买了不少旧书，放在他宿舍的书桌上。某天我看到他们的这一堆心灵鸡汤书籍，便问了一句：这些你都有看吗？他说：没有，看了也只有三分钟激情，第二天就回归原状了。 2019/06/17那天，我也突然被什么事情刺激到了，那前几天都未得好眠。依稀记得，虽然已经固步于居住在习惯的舒适区，但是大逆不道地觉得这不是我想要的生活。突然之间，想继续我之前未完成的“事业”，继续心理学考研。我甚至还认真分析了这件事情的很多因素，例如时间，2020考研时间是不够的，目标要定在2021；一定要在保留这份工作的前提下，利用下班等空闲时间，进行心理学专业知识学习；不要去报所谓的考研班，按照上次失败的经历，仅仅是因为知识点背了又忘，所以只需要认真熟读熟背教材知识点，并做题训练；现在开始培养英语语感和听说写环境，听歌都只能英文乡村，新闻多听BBC、CNN；政治到明年准备，避免遗忘…… 多么详细缜密的计划，绝对不是突然头脑一热，拍桌而定。但是随着几天加班，我就不知为什么，就放弃掉了这件事情。或许正如前面所说，即便对现在的生活不满意，但是并无法成为追求新目标的代价，因为新的目标并不一定实现，但是现在平淡、庸碌、习惯的生活，确是真是存在。 或许真的要想影视作品中那样：我一无所有，还有什么可失去的。才能够勇敢迈出改变的第一步。 如果我真的有这份坚定的意志力，无论是放弃现在的生活去追求新的目标，还是维持现有的生活，待追求到新的目标之后再放弃，都不会停步在半途。“岂能尽如人意，但求无愧我心”。然而这份半途而废的quitter、loser羞愧感，随着时间的流逝，随着习惯的打磨，依然无济于事，消失无影。 活着，从来都不是一个人的事情 人们都说：这人啊，一旦闲下来，就爱胡思乱想。在四个月的庸庸生活之后，因为偶然间听到的一段对话，却在不闲的时候，也开始胡思乱想起来。 人，大多都有一个痛点，深藏起来，不愿提起。但是如果被有意无意戳中了这个痛点，总会勾起一些异于平常的心态或动作。我不知道是狂性大发，是抱头痛哭，是羞愧难当，或者只是面不改色。 或许有那样的麻木不仁的人，即便是一直被戳痛点，都能够一如既往，一尘不变，那可能这已经变成了曾经的痛处而已了。 电影《霍元甲》有一句经典台词：“活着，从来都不是一个人的事情”。与别人的步步高升，前程似锦的对比，才让我有了愧疚感和自卑感。因为是成电毕业的学生，与其它一般毕业生相比生活质量差距过大，才更加剧了这份悲凉情绪。因为父母养育，才担心放弃现在即便不满意但是自调节到习惯的生活，会让他们失望和担心…… 还拥有生命特征，就算是活着了吗？最近看到一句毒鸡汤，类似：别人过的才是生活，而我只是来凑数的。有些东西即便不主动去对比，只要还有别人在，那标准就在那里。过着普通的生活，从小比到大，从生比到死，总是有一些通用的衡量标准。就如喜闻乐见的：你每个月工资多少啊？房子买在哪儿的啊？孩子几岁了？越是简单的标准，越是能让人认清现实。我也企图用一些分流的思想来回避这些问题，例如我和别人不一样，我更看重其它的东西。 但最后，我才发现，这就是安于现状不思进取的契机，和悲伤难过的诱因。如果抵抗住了狂风暴雨，何还惧这微风细雨。如果能够正面交锋，何必再去投机取巧。 或许本来有些自私的人，就不会有这样的问题。倒不是自私不愿分享，若眼中没有别人，心中也无别人，这个世界，就仿佛与我无关。 然而，即便是阿Q，也是直接大胆说出：我要和你困觉。 如果你不出去走走,你就会以为这就是世界 应该没有人这一辈都处于高潮，人生看起来都是浮浮沉沉。人生就像爬山，如果你在山脚下，你就完全不用担心会摔下去；一旦往上爬了一小段，总是会有担心摔下山崖，又得从头开始；往上爬得越高，可能越会担心摔得越痛。所以当爬到一段路程之后，发现这一段路，有很多和自己一样的人，大家言笑晏晏，也并不需要继续往上爬，带着这里也挺好。 《倩女幽魂3：道道道》里面有那么一段老和尚和树妖斗法时的对话： ——树妖：“因果报应？你真的相信善有善报，恶有恶报吗？” ——白云：“正是，此乃天理循环。” ——树妖：“天理？你知道恶人死了之后可以风光大葬，还有人为他著书歌颂呢！” ——白云：“不过他们会被打下地狱，受尽痛苦，得到恶报。” ——树妖：“地狱比人间更黑暗，恶人下去后一样，只要有实力，恶人也有好报。我去过那里，所以我知道。” …… 有些地方，你没有去过，你或许不会知道它的真相。这是一个取舍的问题，常言道，有得必有失。走出去，见识下不同的风景，虽然这并不一定是好事，就看你怎么看了。 “地狱比人间更黑暗。”说不定正是因为这样，才会找到一个歇脚处，不再前行。 正如薛定谔的猫，你不打开盒子，你就不知道猫是否还活着。有些事，你不做，就永远不会知道做了会怎样。我不出去走走，我也不会知道出去走走之后，风景是哪边更好。 如果我没有比较的基准，我根本就不会有愧疚感或者自卑感。单点不成线，双点不成面。只要我与世隔绝，就没有人会对我产生影响。 别骗自己了。现在，体会到了这份愧疚与自卑，甚至是羞辱，So what you gonna do？ 2019/10/19 15:20","categories":[{"name":"绝望系列","slug":"绝望系列","permalink":"http://yoursite.com/categories/绝望系列/"},{"name":"悲惨现实","slug":"绝望系列/悲惨现实","permalink":"http://yoursite.com/categories/绝望系列/悲惨现实/"}],"tags":[{"name":"绝望","slug":"绝望","permalink":"http://yoursite.com/tags/绝望/"},{"name":"失意","slug":"失意","permalink":"http://yoursite.com/tags/失意/"}]},{"title":"没什么，只是一个快30岁的老处男罢了","slug":"DesperateSeries/05meishenme","date":"2019-08-06T13:48:48.000Z","updated":"2019-12-19T13:00:59.164Z","comments":true,"path":"2019/08/06/DesperateSeries/05meishenme/","link":"","permalink":"http://yoursite.com/2019/08/06/DesperateSeries/05meishenme/","excerpt":"","text":"小絮两句 斜晖轻流，层翠斑驳，漏下几束阳光，抚过她皎白的脸庞。一双明眸透出青色，半颜笑靥散出春光。 我不敢直视她，唯有待她看向别处时瞥见几眼。偷偷跟着走几步，看她走远，心中依然激荡，忐忑而满足。 可能没什么原因 如果我再年轻10岁，或许转头便也羞愧难当，却也是应当魂牵梦萦，茶饭不香。只不过，当这种朦胧情绪忽然恍惚了10几年，终究还是会变了模样。 曾几何时，还在惋惜未曾初恋已不能早恋。暮然回首，已叹息不得深情也一贫如洗。 曾几何时，叛逆生息也流行萝莉配大叔。 终熬到头，怡然期盼却轮回白脸小奶狗。 到也不是说，我们这一代看起来是没有女生看的上的一代。只是总会需要找点借口，来平复快三十年来孤独心境。 无能的人总是需要找点借口来袒护自己，但或许有时候却只是为了活得更好。阿Q活着的时候就没有什么难过的事情，死的时候依然也没有弄懂为什么就死了。快三十年了，我也没有弄懂为什么我还是一个人。 当你在可以嬉笑打闹你侬我侬的时候，选择这抱手怒目，蹙眉摇头，自然是错失了一个机会。 当别人都在计划成家立业、光宗耀祖的时候，依然还在四处奔走、天被地床，自然也错失了另一个时机。 当终于应该打开大门，广迎四方宾客，却还是闭门不出，固执自我舒服，那轻易就失去了又一个希望。 或许是突然也觉得，女人吧，也就那样。可能是发现了，女人哪，也是这样。最后还是明白了，女人啊，终是那样。 可能没什么机会了 说起来，别说是女朋友了，连女生的手都没有牵过吧。别说是牵了，都没有握过吧。到底是活该单身一辈子吗？ 曾经也应该有过喜欢的女生吧？羞于表达，故作矜持，终于在错过之后，变成了怀念过去。 那么也应该再有积极去争取吧？宴客馈礼，甜言蜜语，终于在顿悟之后，发现了好人文化。 终于也是等待媒人牵线搭桥吧？车房具备，情专意真，终于在疲惫之后，得出了现实颓废。 真的看起来是没什么机会了，现实是很残酷的，社会是很骨感的。说起来如果我还年轻些岁数，变化些颜色，可能在学校还能获得点经验。毕竟都有KTV开在了学校里，友好陪读三保一。 突然好想出去走一走了，看看外面的世界，外面的人，新的机遇，新的美好或许就在一瞬间。却发现去哪儿都是晕车，倒头就睡，全程都晕头转向，目光散漫，并体会不到外出的乐趣，那自然不能够遇到新的人，开启新的篇章。 或许足不出户也可以，曾经的QQ爱，如今依然可以网上来，努力展示给你的都是好看的一面，生活或许还都是阳关灿烂，各自美好。只可惜隔着一张网，终究不会知道根底，相见难，怀念更难。 等着有人帮我烦恼吧，看起来隔代人终是会先操心起这样的事情来，或许这就是新的开始，且简单真实。只不过，或许没有底气说一句“你要的全带走”，人嘛，大概只能同享福，并不能同吃苦。 别担心，除了孤独，还有无能啊 没有那么多问题，贝多芬，牛顿，伊丽莎白一世，圣母玛利亚都是没有结婚也过完一生，虽然无法达到他们的成就，但是却可以以他们为借口安抚自己。没人会因为你不如牛顿而看不起你的。 有人说情义值千金，却还有价，所以若是个有钱人，自然不会是孤独一个人。到了这个岁数还是一个老处男，只能说明从过去到现在，依然还是一个穷人罢了。 也有人说智慧胜过黄金，也是会有人仰慕那些聪明的大脑，千金难买是人才。到了这个岁数还是一个老处男，只能说明已经没有什么潜能，成为一个智慧超群的人了。 “粗缯大布裹生涯，腹有诗书气自华”。有的人可能没有财气，没有智气，但有一股傲气。到了这个岁数还是一个老处男，只能说明经受坎坷的社会洗礼，已经不是一个骄傲的人了。 不要担心，没有什么与众不同的，孤独一人或者并不是件坏事，这样就没有人来嘲笑我的无能了，自然也变得理所当然，没必要那么害怕了。 烈日依旧灼热，汗水浸透了抹布。抬头看看远处，似乎没有什么值得追逐的方向，也没有害怕辜负的期望。头顶一片焦阳，肩上只有一担挑。 2019/08/06 21:47","categories":[{"name":"绝望系列","slug":"绝望系列","permalink":"http://yoursite.com/categories/绝望系列/"},{"name":"悲惨现实","slug":"绝望系列/悲惨现实","permalink":"http://yoursite.com/categories/绝望系列/悲惨现实/"}],"tags":[{"name":"绝望","slug":"绝望","permalink":"http://yoursite.com/tags/绝望/"},{"name":"孤独","slug":"孤独","permalink":"http://yoursite.com/tags/孤独/"}]},{"title":"你终于失掉了意志力了吗？","slug":"DesperateSeries/04nizhongyu","date":"2019-07-21T13:58:31.000Z","updated":"2019-12-19T13:01:19.090Z","comments":true,"path":"2019/07/21/DesperateSeries/04nizhongyu/","link":"","permalink":"http://yoursite.com/2019/07/21/DesperateSeries/04nizhongyu/","excerpt":"","text":"当我还年轻的时候 如果我重返15岁，从村里面读完9年义务教育后，终于到区级中学读书的时间。那时候我也没有多大的理想，只能想着将来能够成为一名优秀的教师，教书育人，桃李天下，这倒是事实。后来才发现，教书只能传授书本上既定的传统，无论如何，进入社会之后，都会被慢慢地磨砺成圆润的样子，这也是事实。所以我想成为一名作家，一来可以继续传道，却也不用担心是从未被社会洗礼却还要跟学生讲社会道理的角色，二来总有一些话，不适合授业者，倒适于反叛者，这还是事实。 如果我重返18岁，那是我终于到了离家更远的地方看起来是学习的时间。家长到不会再继续劝诫以学业为重，老师也不会常在身边叮咛，身边感觉是突然被清空，没有了太多束缚，堆积了太多的自由，这倒是事实。看起来从年龄上已经成年，可以有了更多自主决定的空间，可以去尝试很多以前被限制被劝阻的事物，”心之所向，素履所往”，这也是事实。稍过两年，突然就会发现，虽然有尝试过很多事物，但是毕竟人的精力也有限，总会有一个大的目标，考虑自己的前途，继续深造学习，还是毕业就业找个好的工作，也毕竟是个事实。 如果我重返22岁，那是我刚毕业出来工作的时间。常说“新秀看三年”，刚刚毕业工作的三年，承载了太多的希望和发展现实，是无论如何都应该重视和努力的三年，这倒是事实。如果我磨砺了这三年，或许我能够找到自己的目标，看清楚自己的市场，明确自己的方向，说不定事业就能起飞，随即身心得到充实，但是我并没能这样，这是不争的事实。如今随着时间的流逝，我竟然不知道我到底在追求着什么目标，没有特别的理想或者志向，甚至没有需要努力一下才能得到的需求，这也是不想承认的事实。 差不多是条咸鱼了 看过太多这样的话：“从哪里跌倒，就在哪里睡着。”“上天为你关上一扇门，肯定会再关上一扇窗。”“你不努力一下，你都不知道什么叫做绝望。” 事实上，我倒是挺羡慕的。你要跌倒，至少也是走在了一条想要走的路上；关上了门，至少也知道这个门是通向何方；就算面对的是绝望，至少还有努力的动作和努力的方向。这也就说明了一个观点，即便这如果算是失败，那么也是失败在了正确的道路上。所谓正确的道路，就是还未实现的理想。 我已经不知道这个“理想”是个什么样的东西。如果我想睡觉，也不想着找个床，倒在地上就可以了。如果我想吃个饭，也不想着找个饭店，向天张开嘴巴，能接到什么就算什么了。如果我被人踢了一脚，也不想着去看看是谁踢的，反正踢倒了没踢倒，说不定都还会有第二脚。如果我走到了悬崖边上，也不想着回头找其他路或者找个工具飞过悬崖，继续走就好了，就算跌到崖底还不一定会死掉。 “仓廪实而知礼节，衣食足而知荣辱”，或许并不一定是“实”和“足”的问题，也不是“知”的问题，他的问题就是，这里根本就没有问题。 有一句著名的电影台词是这样的：“做人如果没梦想，跟咸鱼有什么分别。”现实就是我与咸鱼就只是有没有腌那一层盐和风干的区别。 生活没有激情，混吃等死，偶尔无能狂怒，转眼自暴自弃。期待着撑过今天，明天说不定就世界末日了，或者自己就突然暴毙了，灰飞烟灭，一切成空。 如果我也曾经有梦 如果说人不该这么消极，应该积极生活，以良好的态度对待每一天，期待着美好的事物即将来临。Well，如此消极真是对不起了。 曾经我也想做个好人，服务社会，服务人民，希望自己能为这个美好的生存环境贡献一份绵薄之力。有人需要我的帮助，我能够完成某项工作，共同促进人类生活走入美好幸福的下一篇章。 对不起，我错了，有些人注定是人类进步的阶梯，而有些人只是为了平衡这个社会，证明前一种人是不可或缺的。所以我也曾简单想过，并不需要许多人，社会性质服务工作即便是不能胜任，但是伦理道德上的人类群体说不定还能count on me。有人信任，有人依靠，我想做被信任、被依靠的角色。 不过，当你发现你并不能承担那样的角色之后，或许就会改变那样天真的想法。毕竟，还有其他的俗话可以借鉴：“人不为己，天诛地灭。”也不说非要成为什么出类拔萃的社会栋梁，做好这个社会的个体其实也还好。只要自己活得还好，那也是算为社会做了贡献了。事实上，并没有。我挣了大钱，在亲戚朋友的财力需求时能有所援助吗？没有。我生活愉快，不需要亲戚朋友来担心我的精神状态和情绪状况了吗？没有。我家庭和睦，不需要亲戚朋友叹息劝导我的情感经历和身体状况了吗？单身寡人，当然也没有。 就算是作为个体，我依然即便财政自由，但是却不敢自由消费；即便手有工作，但是失意至极，仍不敢另谋他职；即便羡慕爱情，感慨人生，但是瞻前顾后，不为所动；即便身体还在，机能运作正常，却不知该走向何方，归向何处。一具行尸走肉，无为无求，肉体与精神都被掏空。 《老子》里面有一句话，“夫唯不争，故天下莫能与之争。”一开始我觉得这句话说得没艺术。都已经强调“不争”了，但还是看重结果是“莫能与之争”。到最后还是在说最厉害的“争”就是“不争”。幸好是这样，不然若真的是不争，所有人都一样，没有比较，没有差距，无欲无求，那将是死气沉沉的一片，空气中都充满着腐坏的味道。 当做白日梦都变得奢侈起来 曾经我在玩游戏的时候，尤其在体育竞技类游戏时，我就在想，如果在现实生活中，我就是这样像游戏里一样优秀的人会是怎样？创造历史，获得在现实中从来没人取得过的数据、成绩，受到万千粉丝追捧。不仅影响行业类的人员，甚至在政治、宗教、文化等各个方面，都被树立成典范。成为前无古人、后无来者、流芳百世、名垂青史的唯一人，the only one。但是事实上，像这样的自我满足仅仅只能停在拥有那一身名誉，浮华过后，还剩下什么呢？即便人们尊重了这样的伟大，却永远无法达到这样的成就，没有进步，那就是没有发展。无法达到的地步，那就是走到头的位置。人们会怀念过去，但是不应该也不会停留在过去。 曾经我在看超英影剧时，尤其在表现超能力的时候，我就在想，如果在现实生活中，我也拥有这样的超能力会是怎样？如果我能超高速飞行，就不用担心埋怨拥挤的交通影响出现。如果我能隐身，肯定会想着偷偷溜进超市，带走几罐薯片。如果我能够喷火、释放闪电，在和别人发生冲突之后，不用动手，只需要展示下能力就能够把人吓跑……的确就是如此卑微，如此低廉。我也想过如果能用来对抗邪恶，匡扶正义那就更好了，但是事实上，完全不知道怎么做，只能想想这影视剧中存在的邪恶，并与之对抗，仅仅是加大对手数量或者提到对手能力而已。然则在现实中，即便拥有这样的超能力，也并没有这样的邪恶。 曾经我在看到一些消极的社会新闻时，也会义愤填膺，慷慨激烈，想用无比激烈的言辞去谴责那样败坏的风气事物。我会在脑海中整理出一大片正义之言，模拟出万人集会的场景和演讲台，然后在台上演讲。“锣鼓喧天，鞭炮齐鸣，红旗招展，人山人海”。然后呢？“前事不忘，后事之师。”对于已然发生的事情，毕竟是无能为力了。谴责过后的群愤，终究会散去。也不是每个人都有自己的生活，也不是每个人都没有自己的生活，泛泛而谈之后，付诸行动的实际依然是不可控制的。昨天说着“扶清灭洋”，今天就是“哈利路亚”。 所以，即便是做白日梦，幻想着永远不可能发生的事情，都已经失去了动力，失去了乐趣，失去了意义，他已然变成了一件奢侈的事物。 我就是这样失掉了意志力了 当我不知道活着的目的的时候，或许就是失掉了意志力的时候，那就是现在依然的状态。 “一个人自觉地确定目的，并根据目的来支配、调节自己的行动，克服各种困难，从而实现目的的品质，这就是意志力。” 可能有人会说，如果不知道活着的目的，那不如死了好了。别骗自己了，如果你还能死，那你至少还有一个目的是你活着的目的，即便实现可能并不会太费力，那依然还是没有失掉意志力。活着，从来都不是一个人的事情，死亡，亦然如此。 “当我再看到他的时候，他就那样躬着背坐在那里，盘腿而坐，双臂支撑着脑袋，眼睛看着远处。 他的眼神是那么空洞，神态是那么僵硬，甚至连呼吸都变得微弱起来。我不知道他保持这样的状态有多久了，我也不知道他还会保持这样的状态是多久，看着他缓慢眨眼睛动作，已然知道他已经不在这里了。 我看着从他眼睛看着的方向，努力想去找到他眼光搜索的目标，想知道他现在到底在注视着什么，心里在想着什么。终于，我再次回过头来看着他，看着他的眼睛，在那双空洞的眼睛里，我竟然看不到任何东西，甚至看不到反射的自己。 我生怕碰着了他，想着若是我这一碰，他就可能碎了一地，慢慢化为灰烬，随风而去，再也拼不到了一起。” 2019/07/21 21:18","categories":[{"name":"绝望系列","slug":"绝望系列","permalink":"http://yoursite.com/categories/绝望系列/"},{"name":"悲惨现实","slug":"绝望系列/悲惨现实","permalink":"http://yoursite.com/categories/绝望系列/悲惨现实/"}],"tags":[{"name":"绝望","slug":"绝望","permalink":"http://yoursite.com/tags/绝望/"},{"name":"意志力","slug":"意志力","permalink":"http://yoursite.com/tags/意志力/"}]},{"title":"如果人生注定是个悲剧，那就”挑”一个无能为力的活法","slug":"OrdinaryArticles/FilmReview/01TheDemiGodsAndSemiDevils","date":"2019-07-17T14:19:54.000Z","updated":"2019-12-19T13:06:46.324Z","comments":true,"path":"2019/07/17/OrdinaryArticles/FilmReview/01TheDemiGodsAndSemiDevils/","link":"","permalink":"http://yoursite.com/2019/07/17/OrdinaryArticles/FilmReview/01TheDemiGodsAndSemiDevils/","excerpt":"","text":"开局不扯皮，那就毫无意义 当年张纪中制片版《天龙八部》在卫视播出时，我小学还没毕业，即便那时候人还小，但是金庸古龙的武侠小说盗版件还是买了很多来看，所以武侠题材算得上我一直以来比较喜欢的艺术作品题材。 不过由于年纪的关系，那一版看完之后，印象最深的人物其实只要这么几点：潇洒霸气的乔帮主，清纯漂亮的王姑娘，和憨实搞笑的岳老三。但是印象深刻的场景道更多一点：杏子林声讨乔峰、虚竹误解珍珑棋局、聚贤庄力敌众英豪、少室山认爹大会、曼陀罗山庄痴痴殉情、雁门关退辽诀别等等。即便是人物和场景都有些熟悉，甚至这么多年了片尾曲都还能跟着唱，但是并没有烙下多少深刻的印象。 总得说来，悲剧就是这样产生了 直到不久前，机缘巧合，我又重新看了看这部经典的金庸剧，才突然发现，原来《天龙八部》讲的是悲剧，那么多的侠骨柔情、奇人异事、风花雪月，基本上都没有逃脱这个结局。我甚至一度认为，留下印象的人物，基本上都是以悲剧收场了。 不过再度回味之后，即便是大流，也算不上全都是悲剧。然而悲者，极大悲也。 在记得上的主角人物，乔峰看起来是为了天下太平壮烈牺牲，阿紫刁蛮一身毅然殉情，游坦之英雄气短单思殒命加上替父受死的阿朱，争风吃醋面面而死的逍遥派二老等等，最悲伤的点，或许就在于人已经死了，活着的人的一切，都已然无法造成牵挂分毫。 虚竹大悲在于父母子相认当日，也是绝别之时，段誉大悲之日也仅仅在养父生母殉情那时，在电视剧里三大男主中，段誉算得上是很幸运的，这也是我觉得这不全是悲剧。其他与段誉相连的女子，都在母亲死的那一刻走到了最低点，最后依然有情人终成眷属。 四大恶人角色有三者我都很喜欢，我也讨厌好色之人。叶二娘虽然刚找到儿子，但却是自愿殉情。云老四好不容易回过神来依然不忘本业结果死相最惨，段老大虽然最后一刻幡然发现自己也和别人一样，是人，却只能独自远去。岳老三是我最喜欢的角色之一，但是却是我觉得最悲情的那个。 主角，其实应该是他 最悲惨的应当是慕容复，这个角色早期看时很讨厌，再看已是同情，如今看来，最后我也会活成自己最讨厌的样子。 他的一生，从来都不是按照自己想过的一生，他所有重大的决定和选择从来没有往好的一面发展。从一开始五十万两白银买军资却被吞了，解珍珑棋局反被迷幻差点自杀，再到后面想到飘渺峰收买人心却遇到一个“盗号”的虚竹，后续少室山一战想笼络武林豪杰而力斗乔峰却被“开挂”的段誉羞辱又险些自刎，随后刚看到一心复国的父亲却顿悟一切皆空万事又靠自己，西夏想当驸马拿兵复国甚至不惜把一往情深的表妹逼到投井却依然没有如愿以偿，曼陀罗山庄不惜杀了家臣、再认义父、手刃舅妈为假借段家兵马复国却功亏一篑，最后众叛亲离，家破人亡，精神失常，徒劳自己皇帝梦。 还有一直有在说的“北乔峰，南慕容”。口碑上，别人都是侠义心肠，豪情万丈，他却是“以彼之道还施彼身”。在武技上，慕容复大部分的对战，都没有取得胜利，甚至和别人一比较起来，简直不堪一击。主角三人，大哥算的上“肝帝”——师父领进门，修行在个人，实战经验实打实的充足，二哥算“盗号玩家”——逍遥派三大前辈的功力轻松获取，三弟算“开挂玩家”——凌波微步无人能近身，北冥神功想取就吸，六脉神剑无人能敌。而慕容复，谙熟天下武学，却只能泛泛而谈，也没一个算得上出类拔萃，相比别人的神功简直不堪一击，甚至还需要“最佳辅助”王姑娘出口相助，简直唏嘘。 说实话慕容复这失败的一身，却也是成就了他人的一身。其实我都已经不能分辨到底是他一生的皇帝梦，还是祖训他人的复兴使命。 少室山慕容博出现的时候，指定他儿子的，却是说的慕容复无后，自刎之后，慕容氏赫赫有名的前辈英雄断了血脉。多少人活着的时候，是为了他人活着，就连死，都没有为了自己的资格。他的一声只为了四个字，光复大燕。其实他难道不明白，联姻西夏也好，联合辽国吐蕃等过瓜分大宋趁机复兴也好，甚至假借段式家族也好，他即便成功，也只是把这个旗号立了起来，国小民少，其实也是任人鱼肉的位置，他真的只是为了当这样一个皇帝吗？ 我们现代人一般说来，算得上有两个方面是希望取得成功的：美女与金钱，也就是爱情与事业。有的人为了事业放弃爱情，也有人为了事业耽误爱情。但是对于慕容复这一生来讲，他没有这方面的考虑。他完全看不见身边有对他一往情深的王姑娘和阿碧，甚至在他疯了之后阿碧依然还在他身边。有些事，一旦错过了，那就是永远错过了。阿碧陪着他和那群小孩子演皇帝过家家的一幕，倒是真的触动了我。一个人，即便你是积极拼搏，心无旁骛，努力奋斗的一生，最后可能依然一无所有。 “别辜负了你那一身蔑视天下的功夫”如果你佛法高深 除了慕容复，还有几个再看时让我印象深刻的角色。 少林扫地僧，这是这部电视剧的一个BUG的存在，佛法无边，武艺高深。在少林寺呆了40多年，到“出面”之时居然无人知晓。看起来像是无争，修身。但是呢，一个人的修行，最后还是只能自己一个人。佛法普度众生，玄奘都要取西经，而他却只是呆在藏经阁扫地，30年来，眼睁睁看着两个人走火入魔误入歧途，却不及时出手相助，却让人怀疑这份无争的修行到底有没有到位。 事实上，已经40多年的佛法修行，如果已经超凡入圣，乔峰父子和慕容复父子打到藏经阁也是完全不必出手，任起发展。但听到一句为天下人的话就出面干预，倒也不是无争了，因为就是不干预，为了天下苍生的想法乔峰也在，联手灭宋的做法也不会实现。 所以，扫地僧的出现，不是为了炫耀自己这一身无敌的“杀人技俩”与“佛法调养”的武功，将是毫无意义。无争却还是出手尘世事，广度却销匿藏经阁，只能是修行40多年，还是没有悟到。所以说，哪有什么超凡入圣，到头来还不过是一个人而已。 仁至义尽又如何 南海鳄神岳老三，算得上电视剧里搞笑担当了，电视剧中有他出现的场景一般我都是看得很高兴。他言出必行，一诺千金，有情有义，伶牙俐齿。他一直想当四大恶人的老二，因为他知道自己不是当大哥的料子，他也认可大哥的实力，说错话之后看看大哥怂成一团。不过很多时候四大恶人都在，却只见他一人滔滔不绝时，其他人却话不多说。他想当别人师父却当了别人徒弟，即便千万个不舒服，但是没有做任何一件违背道义的事情。他甚至还为自己师父高超的功夫而沾沾自喜，被师父没有叫出一声爷爷而高兴，还为师父的寻短见的“师娘”开导劝诫，最后为了救这个师父违背从未违背过的大哥的话而断送了性命。 事实上，他的这个师父，却基本没有为他做过任何事情，多数情况下都是利用岳老三对这个师父的道义观念为他做事情。岳老三从来只是口头说着要怎样怎样，但是这些违反道义的事情，从来只是说，没有做，即便他的名号是四大恶人，即便做了对别人基本上都算得上毫无影响，但是他还是没有做。 “肯做我师娘的人多着呢，还怕少了。你看，这是我小师娘，大师娘，全都是我师娘。”说出这么骄傲的话，却从不是说的自己，直到死了，还是没有等到师父那句“下次我真的教你几手功夫”成真。 没有如果能掌握自己的命运 如果直接说金二和花妹，可能印象不深，但是如果是说起第11集太湖边小磨坊，王姑娘受到段誉惊吓衣服掉地上，双手护身娇滴滴的画面，倒是饶有兴致。但是对于金二和花妹两人，郎情妾意，大雨滂沱，山间林中，湖边磨坊，四下无人，私借云雨，不料不属之客打断了美事。做个好人，留客避雨换衣，结果惨死西夏武士手下，死前还不清不楚，不明不白。然而死前金二还在自证清白，花妹奋力反抗。即便一向是老好人的段誉看见那场景，都只是赶紧跑上楼对王姑娘说句没办法，而不是对正在行凶的人喝一声住手。 其实按照“打断则忘记”的套路，如果段誉有喊一声“住手”，或许西夏武士看到了他，就知道了自己要干的正事，然后扭头就过来与段誉纠缠，而花妹就会去抱着金二的尸体痛哭。从旁观者的角度来看，是啊，无端招来杀身之祸，绝世高手没有挺身而出，实在是可怜。 如果当段誉和王姑娘私闯民宅，金二和花妹看到了，把他们赶走，也就没有后面的事情了。如果慕容复胸襟广阔，也不会把西夏武士带到小磨坊了。如果王姑娘没有出口相助吴长老打败云中鹤，说不定西夏武士就不会放悲酥清风吓得段誉带王姑娘逃走了。如果乔峰没有被丐帮群众逼走，凭他的本身，根本不会有西夏人开口说话的机会，因为音响都是他自带的。…… 这就是平凡的小人物，说不定平平淡淡与世无争的过着小日子，突然就飞来横祸了。好不容易遇到的高手，却全都不是来接好运的。或许人生的悲剧可能可以被别人一句话就中止，但是他们总会有更多自己的事情要做。 安安乐乐才是福，平平淡淡才是真？你以为你能？做自己的主人，把命运掌握在自己的手中？你准备继续骗谁？卑微，弱小，无能为力。不配拥有名字的小人物，也不配活下去。 理所当然，总结点现代社会毒鸡汤 其实还有很多人可以说的，包括那我一直想说的阿碧，但是却也不用再说了。“戏说不是胡说,改编不是乱编。”电视剧毕竟没有照搬原著拍摄，其中可能有些省略，甚至与我写的内容都会有点差异，我猜大体意思没错，都还好说。 此外如果不再提起，或许你也不曾注意片尾曲《宽恕》由林夕作词，赵季平作曲，王菲演唱。最近这首歌一直在我脑中萦绕，挥之不去，张口就来，闭眼就唱，完全情难自禁。“你给我保护，我还你祝福；你英雄好汉，需要抱负。可你欠我幸福，拿什么来弥补，难道爱比恨更难宽恕。” 但是，我还是忍不住说几句“心灵鸡汤”陶冶一下情操。 舔狗没有好下场（如果你还记得他的名字叫游坦之的话）。 高富帅的一生从来就是风调雨顺，多姿多彩（可曾还记得段公子受了多大委屈）。 我已经那么努力了，为什么不能成全我（志存高远、励精图治、殚心竭虑到头来几乎一无所有的慕容复啊）。 世间没有两全法、既负如来又负卿。 没有用的，你无论如何还是打不过盗号的和开挂的。 爱的确比恨更难宽恕。…… 2019/7/17 21:29","categories":[{"name":"一般文字","slug":"一般文字","permalink":"http://yoursite.com/categories/一般文字/"},{"name":"文读影评","slug":"一般文字/文读影评","permalink":"http://yoursite.com/categories/一般文字/文读影评/"},{"name":"影评","slug":"一般文字/文读影评/影评","permalink":"http://yoursite.com/categories/一般文字/文读影评/影评/"}],"tags":[{"name":"影评","slug":"影评","permalink":"http://yoursite.com/tags/影评/"}]},{"title":"每一年的这一天，亦如每一年的每一天","slug":"DesperateSeries/03meiyinian","date":"2019-07-15T13:36:08.000Z","updated":"2019-12-19T13:02:42.217Z","comments":true,"path":"2019/07/15/DesperateSeries/03meiyinian/","link":"","permalink":"http://yoursite.com/2019/07/15/DesperateSeries/03meiyinian/","excerpt":"","text":"今年的这一天，和往常一样，睁开眼想着的第一件事情就是，今天又有哪些工作等待我去完成？倒不是自以为觉得每天都要是充实的，一日之计在于晨，勃勃朝气，昂昂生机。却是每天一起来就被工作压迫着，就像一起床就欠别人几百块钱，心里总是不轻松。 为了贪睡那几分钟，压缩了洗漱的几分钟，也节约了吃早饭的那几分钟。匆匆路上，刷了卡，到了办公室，就开始处理起看起来毫无意义的事情。早年有一句标语：“高高兴兴上班去，平平安安回家来。”却也是没有硬气地说工作的期间，应该是高兴还是开心。 和一般没有梦想的咸鱼一样，上班只是机械作业，却也和现实一样，事情没做完，却也没有办法下班。所以，就如至理名言告诫一样，今日事今日毕，正常时间不够，加班完成就好了。所以，再一抬头，却差不多已到晚上10点。又是一天工作时间轻轻松松过去了，然而却懒得迈步子出去吃个晚饭。刷个下班卡，再掏出手机，看看沙雕段子，径直走回宿舍，竟变得难过起来。如果笑一笑，那必然也是会浪费一些能量，为了减缓能量的流逝，看沙雕段子已然不敢笑了，倒也不是提不起兴致。 回到宿舍，换下鞋子，冲个脚，也想着倒在床上休息一下。缓缓闭上眼，几乎就要睡着了。啊，难得到了一天的下班休息时间，若真真是用来睡觉了，怕也是颇有几分浪费。于是坚强地睁开双眼，打开自己的笔记本电脑准备玩几把游戏放松下。 我电脑开机后久久没有输入密码绝不是因为我睡着了，我那一下猛子也绝不是因为手机掉地上吓到了我，我只是单纯的放慢我的动作。只要我动作足够的慢，你就不会看到我，时间也不会流逝那么快。难得下班时间，不玩两把游戏怎么说的过去。 启动一个MOBA游戏的客户端，看着黑压压一寸长的好友列表，也没有一个头像亮着，不免觉得一个人玩得也是无趣，不如看会儿视频放松一下，有时候玩游戏也挺累的。最近有什么火的剧吗？哪些明星正当红呢？电视剧《亮剑》什么的应该还有很多人在追吧？谢霆锋、吴彦祖还依然是帅哥的代表吧？话说张艺谋的《英雄》应该还是中国影史票房第一吧？ 突然QQ列表有闪烁，消息盒子有个1。我点进去看看，居然是老爸，他问我，今天有没有喝酒。我顿生奇怪，我为什么要喝酒，我都戒了好久了，绝对不是没有人一起喝没有意思，只是单纯的因为酒太贵了。 老爸却反问我：“今天你过生啊，你忘记了？”过生日吗？不是吧，也没有亲戚朋友跟我说啊，堂姐生日在我前一天，她也没有提起过啊，甚至老妈也没有说啊，既然我也不知道，那唯一的结论就是，老爸记错了，今天不是我生日。 如果今天是我生日，我的朋友们一定会有人记得，那他们一定是会祝福我一下。如果今天是我生日，我的亲戚一定会有人记得，血浓于水，那他们一定会祝福我一下。如果今天是我生日，我妈和我应该也会记得，受难日和出生日，怎么可能不犒劳一下，我一定也得出去吃顿好的，至少吃顿肉吧。 但是忍不住查了一下万年历，似乎日历上的时间却也是今天。细想一下，也对，每一年的这天都和每一年的其它天没什么区别，该做什么事还是做什么事情。我哪来的什么朋友，我哪有常联系的亲戚，我一家人的关系哪里有那么和睦。 如果要记住自己生日的原因，不是为了要好好吃一顿肉，那将毫无意义。吃肉不喝点小酒也缺少一些风味。一个人喝酒到也是没有什么意思，反倒像是一人独醉，借酒浇愁的忧郁画面。既然是生日，不应该是一个高兴的日子吗？若是能够请上三五好友一起去吃顿肉也是不错的。 掏出手机，打开通话记录，翻看百来条，终于才会明白，常联系的朋友，原来还就是外卖快递、诈骗推销、中国电信、中国联通和一些没有备注响铃未接的号码而已。转念一想，倒也开心起来，今天却也节约了一顿吃肉的饭钱。 如果没人提醒我，那今天就这么过去了，作为生日当天似乎太凄清了一下。已经11点了，还有一个小时才算过了生日。于是我做了一个大胆的决定：我煮了碗泡面，还加了根火腿肠。一般我是绝对不会在11点了再吃晚饭，就算是要饿死，也绝对不会的。 吃完泡面，洗了个澡，走到门外走廊，吹吹晚风，晒晒月光，差不多就12点了，看起来，今天下班后的休息时间，也算到了尽头。迎接我的，已然是第二天睁眼的另一天。 虽然因为昨天是我生日，我才吃了碗加火腿肠的泡面。但是我知道，等我有钱了，吃泡面加肠应该会是稀松平常的事情，那么这也就和任何的一天没有什么区别了，也用不着去纠结什么。要是真有什么遗憾的，怕是我登录了游戏，却还没有玩上一把，就退出了。抑或是，为了煮完面，浪费了我下班之后应有的30分钟休息时间，30分钟想睡又不能睡、醒着也不知道干什么的休息时间。 或许，哪有什么特别的一天，每一天都是同样的每一天。 2019/7/15 21:32","categories":[{"name":"绝望系列","slug":"绝望系列","permalink":"http://yoursite.com/categories/绝望系列/"},{"name":"悲惨现实","slug":"绝望系列/悲惨现实","permalink":"http://yoursite.com/categories/绝望系列/悲惨现实/"}],"tags":[{"name":"绝望","slug":"绝望","permalink":"http://yoursite.com/tags/绝望/"},{"name":"孤独","slug":"孤独","permalink":"http://yoursite.com/tags/孤独/"}]},{"title":"嫉妒随笔(九)：缓解嫉妒第一招——注意力转移/分散","slug":"EmotionTalk/envy/09distractibility-and-attention-shifting","date":"2019-07-14T13:39:26.000Z","updated":"2019-12-19T13:04:42.344Z","comments":true,"path":"2019/07/14/EmotionTalk/envy/09distractibility-and-attention-shifting/","link":"","permalink":"http://yoursite.com/2019/07/14/EmotionTalk/envy/09distractibility-and-attention-shifting/","excerpt":"","text":"九：注意力转移 这个方法不仅仅是面对嫉妒，面对很多问题都能够起到缓解的作用。 嫉妒这种情绪，一旦当时在脑海产生，严重的人就会越想越气，越想越来劲，越想心里有越烦躁，就恨不得打塌一座山，一直萦绕在脑海，挥之不去，伴随着很长一段时间，说不定直到睡着前都还想着这事儿，更惨的是可能还睡不着。所以，在这样的时候，最简单的，就是转移注意力。因为嫉妒的针对性，一但看到嫉妒的对象，产生了嫉妒，开始胡思乱想，就没有办法停下来了。所以一定要找个时机，停下来，注意力转移之后，再回过头来，或许就会暂时忘记了刚刚在烦恼什么。 对我来讲，是最常用的。比如我嫉妒的那个能力不行却平步青云的那个同事，就坐在我前面不远，我每天上班一抬头就会看到他，一看到他我就会去想为什么、凭什么之类的问题，所以我就不敢抬头。但是这低头不见抬头见，下班之后还在脑海想这事，实在太过分了。所以一下班，我就会去打篮球。打篮球是我比较喜欢的运动，每天下班那个点，一起打球的许多人就也比较熟悉，打着球，一起说说笑笑。做自己喜欢的事物，让那份喜悦挤兑走占据脑海中的那时嫉妒。 注意力转移是最简单的方法，就是一定要在嫉妒情绪一直盘踞在脑海中的间隙，使用自己对自己最喜欢的事物的投入，将其暂时挤开，释放那一部分被占据的大脑，缓解当时受嫉妒心理烦恼之苦。 正如我一开始所说，这是对消极情绪都比较通用的一招，每个人都或多或少会有自己比较喜欢的事物，例如玩游戏，做运动，胡吃海喝，压马路逛超市，和朋友倾述。有的人是可以通过别人的同情、劝导等慢慢排掉当时的嫉妒情绪，有的就像我前面说的，是用别的情绪将已被占用的挤兑出去。 事实上，朋友多的人，处理这类的情绪问题，都比较快。所以我在这里才更多的是说明使用挤兑，用自己喜欢的美好的东西将它挤兑走，让我脑海暂时更多的留的是我对喜欢事物的喜爱。 其它大多数的时候，即便我身边有几个朋友，我也不会跟他们说我嫉妒谁。因为嫉妒这本来就不是什么好的事情，我也不想变成事儿婆，让别人看不起。所以我才会使用自己喜欢的时候。打球，打游戏，什么都好，只要能让我暂时快乐，而且当前只关注在这个快乐上。 不过，对于长期只有一个人的人，可能就没有用。不喜欢打篮球这类人多的运动，也不想麻烦几个人来打游戏，甚至一个人打游戏都会因为嫉妒情绪盘旋而无法尽兴。对于这种情况，我就是说用第二种，注意力分散。 十：注意力分散 这种话在读书时代，肯定经常被老师说。事实也证明，当我们上课神游四海，老师在讲什么，的确是没有听进去，这也是很多人玩笑说，“因为第一节数学课讲的太简单了，我没注意听，所以后来数学从来都是不及格。” 注意力无法集中，就没有办法轻易做好很多事情。 那么哪样的事情会让人注意力不集中呢？读书那会儿，上数学课、英语课对我来说就觉得无聊，无聊就不是很想去听讲。考试的时候，窗外有人在跳广场舞，高音炮动次打次听着很吵闹，就感觉完全无法思考，啥题都做不出来。还有就是，放假回家，一直贪玩，快要开学上课了，发现每一课的作业都没做完，翻翻语文，写两句，又翻开数学做几道，然后又看英文…… 对应到具体的问题，当我在受到嫉妒心理情绪侵害的时候，我当时大脑已经被占据了，只要开始想着这个嫉妒的事情，就会没完没了。那就不让它想，开启吵闹的音乐，强制自己听，就算是到“卧槽，这是什么XX玩意？”盘踞在脑海也不要听。一直走动，不要停。不管是不是要做事情，就不要停，就像要到楼下小卖部买瓶水，走到楼下了又走回去，放下钱包，又走下去再回来，拿钱包，买了水，放到门口地上，再走回寝室，把钱包放了，又再回小卖部去拿回来。Keep busy，不管是不是真的有事，就是不要闲下来，要保持手脚运动。其实这两项，可以简单的变成听着吵闹的音乐去跑步，心里想的是这唱的什么乱七八糟，想换首歌却停不下来去换，自然到下一首还是自己不喜欢的那种。（其实这挺好，在纠结抱怨歌曲的时候，还锻炼了身体。） 当然，这不一定有用，有的人并不喜欢运动，也不喜欢听歌，甚至还不想走到人多的地方去，就像默默一个人呆在书舍，安安静静的。一般情况都还ok，但是处于嫉妒或者其他消极情绪的时候，一定是不能保持在一个安静的状态环境，如果有手机电脑的，就打开电视节目，看那种很吵人很多，嘻嘻哈哈的那种。我常常干这样的事情，我比较喜欢情景喜剧，就开到最大声，听那种哈哈哈，听得人很烦，或者看别人推荐的综艺节目（最讨厌看综艺），没什么营养，就是听别人嘻嘻哈哈，闹腾。 注意力转移是用自己对喜欢事物的喜好的积极情绪挤兑走嫉妒情绪缓解当时的嫉妒之苦，而注意力分散就是使用吵闹、用次要消极情绪（轻度无对象指向的烦躁、愤怒等），转移用在嫉妒上的注意力，没法集中注意力去想，那就很难继续去想。“好吵啊，我没法我工作了。”“那我偏偏就不停下。” 关于注意力转移/分散这个办法，在处理任何消极情绪或其他问题的时候，基本上都算逃避性办法，只能缓解一时之苦，没法消除、克服，总会再次被勾起的。 总结说明嫉妒缓解方法一：注意力转移、分散自定义性质：消极逃避型作用效果：暂时性缓解，长远效果需要交给时间流逝去验证作用情景：正在因为嫉妒情绪在东想西想，不能自已，十分烦躁的时间段。","categories":[{"name":"心理说法","slug":"心理说法","permalink":"http://yoursite.com/categories/心理说法/"},{"name":"情绪调节","slug":"心理说法/情绪调节","permalink":"http://yoursite.com/categories/心理说法/情绪调节/"},{"name":"嫉妒","slug":"心理说法/情绪调节/嫉妒","permalink":"http://yoursite.com/categories/心理说法/情绪调节/嫉妒/"}],"tags":[{"name":"嫉妒","slug":"嫉妒","permalink":"http://yoursite.com/tags/嫉妒/"},{"name":"缓解嫉妒","slug":"缓解嫉妒","permalink":"http://yoursite.com/tags/缓解嫉妒/"}]},{"title":"嫉妒随笔(八)：我在嫉妒什么？","slug":"EmotionTalk/envy/08the-things-I-envy-for","date":"2019-07-14T13:31:14.000Z","updated":"2019-12-19T13:04:45.561Z","comments":true,"path":"2019/07/14/EmotionTalk/envy/08the-things-I-envy-for/","link":"","permalink":"http://yoursite.com/2019/07/14/EmotionTalk/envy/08the-things-I-envy-for/","excerpt":"","text":"八：我在嫉妒什么？ 在说明我用于缓解或者克服嫉妒的方法前，有必要说明一下，目前困扰我的嫉妒的情境是如何，才能够借以判断其它情况是否也同样适用。 简单说来的话，目前有3个（种）对象我是嫉妒的。 一个是和我年资和年纪都差不多的同事，同样大学毕业后进入目前的就职公司，三年过去了，他升了3级，受公司领导重用，差点就成为我的顶头上司，在这个公司前途一片光明和道路一片通畅。但是于我来看，他的能力完全没有达到这样的层度，他的工作态度和能力也和我差不了多少。随着他的步步高升，他周边的人也围得越来越多，有的人对我俩的态度几乎就成了180度的两个极端。——你看看别人，三年过去了什么样子，我过了三年只有原地踏步。简单说来就是，我不认同他的能力，但别人就是飞黄腾达了。 一个是和我同时进入公司同部门，因为机缘巧合他们又一起调到其他部门，又因为机缘巧合，他又调回了原部门。但是就这么两次调度，他回去后工资在我们的基础上又涨了，事情也变得轻松了，而且公司对该部门的重视程度也正好是提高的时机。就是那种一年可能会亏几百万，但还是要什么就给什么的态度。我在没日没夜加班的时候，他可能上班都没事干就看小说睡觉度日，老板和CXO时不时会请吃饭，不时联系外部工程师合作。简单说来就是，同样的人，他的运气就是那么好，事少钱多地位高，但我却没那么幸运。 最后一个就是，同样的，我们一起到了这个公司，但是他在几个月之后，觉得呆在这里没有前途，毅然辞职之后，回到籍贯城市进行创业。仅仅三年过去，已经小有成就，事业爱情都收获颇丰。但是我却因为一直的妥协和犹豫一直没有走，时间呆的越久，越来越发现自己现状的悲惨性——大学毕业后三年最该磨练提高升华的时间，没有努力。能力没有提高，再想走技能已经比不上竞争者，想走又怕再也找不到工作，不走又觉得自己过得没前途，身边的人又变得越发优秀，心情烦躁。简单说来就是，自己优柔寡断，照前顾后，缺乏斗志，前途迷茫，却看到别人毅然决然，当机立断，雷厉风行，颇有成就。","categories":[{"name":"心理说法","slug":"心理说法","permalink":"http://yoursite.com/categories/心理说法/"},{"name":"情绪调节","slug":"心理说法/情绪调节","permalink":"http://yoursite.com/categories/心理说法/情绪调节/"},{"name":"嫉妒","slug":"心理说法/情绪调节/嫉妒","permalink":"http://yoursite.com/categories/心理说法/情绪调节/嫉妒/"}],"tags":[{"name":"嫉妒","slug":"嫉妒","permalink":"http://yoursite.com/tags/嫉妒/"}]},{"title":"嫉妒随笔(七)：哪样的人容易遭受嫉妒？","slug":"EmotionTalk/envy/07easily-envied","date":"2019-07-08T14:17:04.000Z","updated":"2019-12-19T13:04:46.875Z","comments":true,"path":"2019/07/08/EmotionTalk/envy/07easily-envied/","link":"","permalink":"http://yoursite.com/2019/07/08/EmotionTalk/envy/07easily-envied/","excerpt":"","text":"七：哪样的人容易遭受嫉妒？ To be honest，I don’t really care！ 说句实在的，哪样的人容易遭受嫉妒，我完全一点都不在乎。事实上，你嫉妒的那种人，就算得上是容易遭嫉妒的人。一般正常的嫉妒，就是这么一说。当然你说你嫉妒别人露出的鼻毛比较长，那我更不会关心这样的嫉妒心理。不说是变态吧，但一般人应该是不会有的。其实有没有这样的人，在一些刁钻的点上嫉妒别人。我才是肯定有的。不过我觉得这要算在异常（变态）心理学去考虑下。 其实被嫉妒了，对于被嫉妒的人来讲，或多或少是有点不公平。就算是让他道歉，你总不想听到的是：“对不起，因为我的优秀让您嫉妒了。我保证，我把我的优秀低调点，以便照顾好您的情绪。”所以啊，有时候想到这里，虽然有点异样的难过，但是完全不会改变我嫉妒的现实，因此大多时候，我还是把这份嫉妒藏了起来，就算是是柯南来了，也要推理下才让他知道。 我们不可能去鼓励被嫉妒的人想办法不要变成被嫉妒的对象，因为嫉妒的由来本来就毫无办法。这里倒是可以说一句好听的话：“如果不能改变他人，那就改变自己。”我到不是想说“世人皆醉我独醒”。被嫉妒的人可以去嫉妒其它人，那样他的关心点就不会在自己的嫉妒者这里。或者，变得更优秀，让别人都不知道其实你是比其他人更值得嫉妒的对象。 关于如何消除克服嫉妒，如果三言两语就能说清楚的话，我也就不要写以上那么多内容了，这部分，我后续会写一系列的尝试办法，从我身上做实践，能否有用，都分享出来，大家共勉。","categories":[{"name":"心理说法","slug":"心理说法","permalink":"http://yoursite.com/categories/心理说法/"},{"name":"情绪调节","slug":"心理说法/情绪调节","permalink":"http://yoursite.com/categories/心理说法/情绪调节/"},{"name":"嫉妒","slug":"心理说法/情绪调节/嫉妒","permalink":"http://yoursite.com/categories/心理说法/情绪调节/嫉妒/"}],"tags":[{"name":"嫉妒","slug":"嫉妒","permalink":"http://yoursite.com/tags/嫉妒/"}]},{"title":"嫉妒随笔(六)：嫉妒的意义和作用","slug":"EmotionTalk/envy/06the-role-of-envy","date":"2019-07-08T14:14:46.000Z","updated":"2019-12-19T13:04:48.219Z","comments":true,"path":"2019/07/08/EmotionTalk/envy/06the-role-of-envy/","link":"","permalink":"http://yoursite.com/2019/07/08/EmotionTalk/envy/06the-role-of-envy/","excerpt":"","text":"六：嫉妒的意义和作用 以上说了很多，基本上都是在想着要缓解克服嫉妒，为什么呢？就如我开篇所说：“它就想一颗肿瘤，长在我身体，无时无刻地，不知不觉地，伤的心，伤的身，我受到极大的痛苦。”就如我们耳熟能详的天主教的七宗罪，从某一种从重到轻的排序来看，“嫉妒”是仅次于“傲慢”的第二大罪。其实这样的说法也比较抽象，并没有真正说出危害来。 如果让我来说，凡是对我有危害的事物，通常就是简单分为了在心理和身体两方面，如果再加上对自己身边关系亲密的人来说，那就是不免危害加倍的问题了。 我网上看了很多这方面的总结，似乎有专业教育书籍总结如下： 直接影响人的情绪和积极奋进精神 嫉妒心理容易产生偏见 嫉妒心理压抑和摧残人才 嫉妒心理影响人际关系的正常发展 嫉妒心理影响身心健康 不在其位，不谋其政。第三点虽然我可能并不会是嫉妒者，但是千百年来的历史经验，和文学影视作品，都有这样的故事，那就是功高震主，不得善终，诸如吴起、蒙恬、韩信。不过其他的几点倒是有所感悟。 自从因某件事而对某些人产生了很重的嫉妒心理之后，我总是喜欢抱怨社会不公，苍天无眼，倒是很少再去想着刻苦学习，丢了这块地，我要去抢那座城，似乎对工作没有那么投入，没有开始的激情。然而却也缺少了新时代人的血性，没有“此处不留爷，自有留爷处”的觉悟，也没有毅然辞职，令图霸业的血性。倒是变得怯懦，想离开，却又怕找不到工作。想进步，却眼高手低。瞻前顾后，优柔寡断。“当断不断，反受其乱”，现在却也还是无能狂怒。 就像在回到任何哲学问题的时候，开局说一句“一般事物都具有两面性”总是没有错，但嫉妒心理却让我也没有再去考虑其他的方面。就如一开始的例子，不如你勤奋，不如你聪明，不如你的工作效率，不比你年资高，但是别人就是被提拔，扶摇直上，而你就是原地踏步，无人问津。可是在你没有看到的其它地方，他就是比你优秀呢？比如处理与同事、上级领导的关系，对产品推广的市场的占比……就像冯骥才的《俗世奇人之好嘴杨巴》，茶汤虽好，但是中堂并没有喝。 嫉妒的对象，我之前说是“拥有的好的资源比你多的人”，事实上，有些资源例如家业、形貌这生下来就注定了，没办法。但是很多时候，这类拥有好的资源多的人，往往从一些层面来讲，就是比你优秀的人。从嫉妒的“对抗性”来看，如果对于比你优秀的人都是嫉妒，试图刻意剥夺。那么身边那里还有思齐之贤，说不定到真是狐朋狗友，鸡鸣狗盗之辈了。","categories":[{"name":"心理说法","slug":"心理说法","permalink":"http://yoursite.com/categories/心理说法/"},{"name":"情绪调节","slug":"心理说法/情绪调节","permalink":"http://yoursite.com/categories/心理说法/情绪调节/"},{"name":"嫉妒","slug":"心理说法/情绪调节/嫉妒","permalink":"http://yoursite.com/categories/心理说法/情绪调节/嫉妒/"}],"tags":[{"name":"嫉妒","slug":"嫉妒","permalink":"http://yoursite.com/tags/嫉妒/"}]},{"title":"嫉妒随笔(五)：嫉妒的特点","slug":"EmotionTalk/envy/05special-features-of-envy","date":"2019-07-08T14:11:40.000Z","updated":"2019-12-19T13:04:50.008Z","comments":true,"path":"2019/07/08/EmotionTalk/envy/05special-features-of-envy/","link":"","permalink":"http://yoursite.com/2019/07/08/EmotionTalk/envy/05special-features-of-envy/","excerpt":"","text":"五：嫉妒的特点 如果看到这里，还对嫉妒一无所知的话，其实我衷心的祝福你，因为你完全不用担心嫉妒会影响你的生活，对你的人生造成负担——因为你不会嫉妒，也就不用处理它。我也希望能够像你一样。 生活就是这样，岂能事事如人意，还不能无愧于心，怎一个惨字了得。 一个人没有嫉妒心，这也算他的优点，他的特点。而对于嫉妒来讲，它也是有它自己的特点。从社会心理学之社交情绪这一部分来讲，主要的特点有如下4点： 具有针对性，嫉妒总是针对具体的个体或群体； 具有持续性，嫉妒情绪一旦产生，就不容易摆脱，能持续影响个体的思想、情感和行为； 具有对抗性，嫉妒者心胸狭隘，希望别人朝坏的方向发展，如果别人成功，他们就会不满和愤恨，并可能用极端的手段来破坏他人的成功或伤害他人； 具有普遍性，嫉妒是人类普遍存在的社交情绪，人在现实生活中，或多或少会体验这种情绪。 这算是心理学家们对嫉妒作为社会心理学概念中提炼出来的特点。对我来说，就是在说明，怀着嫉妒心理的人，他们能做出怎样的事情来。 枪打出头鸟，最突出的，往往就是会成为攻击的对象。读书的时候，大家最关心或者印象最深的，基本都是那些成绩最好的或者最顽皮最坏事的那几个。工作的时候，一般就是最漂亮最会说话拿钱最多的那几个。其实很多时候，最刻苦、最能干、最顽强的并不在以上之列。他们就算得上被嫉妒的目标了。 一般来言，嫉妒一旦产生，就很难消除了，不然我也不会如此痛心疾首。为什么呢？大概不是心理被治愈或者嫉妒的对象降到了水平之下，怕是很难好了。随着时间的流逝，如果嫉妒对象真的就像愿望的那样什么突然瓶颈，一落千丈，泯然众人，垂垂老矣，那自然就不再嫉妒了。或者像我希望的，克服了这个嫉妒，那么也许就不再嫉妒了。 但是，还没有达到这个水平的时候，无论出现多么恶毒的咒骂，多么刻薄的刁难，多么邪气的谣言，多么消极的交流，多么疲惫的态度，我都觉得很正常。很多的努力进取积极奋斗都会因为毅力不足而半途而废，我想这嫉妒心理倒是例外。 以前有句教人谦虚的话叫：“人外有人，天外有天。”所以，即便是你嫉妒的对象，他可能也有更高级的嫉妒对象，只不过你水平太次，还没有看到那个高度。同样的，可能你在同一时间并不只有一个嫉妒的对象。一边嫉妒这个有钱的，又嫉妒那个有权的，还嫉妒那个有才的。这个人你想去咒骂一下，那个人你想去坏坏名声。倒是正事没有干，专想着歪门邪道去了。说不定有的人会意识到这个问题，结果自己也腾飞了。但是不免有的人就像吸毒了，越来越有瘾，还不好戒。","categories":[{"name":"心理说法","slug":"心理说法","permalink":"http://yoursite.com/categories/心理说法/"},{"name":"情绪调节","slug":"心理说法/情绪调节","permalink":"http://yoursite.com/categories/心理说法/情绪调节/"},{"name":"嫉妒","slug":"心理说法/情绪调节/嫉妒","permalink":"http://yoursite.com/categories/心理说法/情绪调节/嫉妒/"}],"tags":[{"name":"嫉妒","slug":"嫉妒","permalink":"http://yoursite.com/tags/嫉妒/"}]},{"title":"嫉妒随笔(四)：嫉妒与羡慕等的一些区别","slug":"EmotionTalk/envy/04some-differences","date":"2019-07-08T14:08:33.000Z","updated":"2019-12-19T13:04:51.405Z","comments":true,"path":"2019/07/08/EmotionTalk/envy/04some-differences/","link":"","permalink":"http://yoursite.com/2019/07/08/EmotionTalk/envy/04some-differences/","excerpt":"","text":"四：嫉妒与羡慕等的一些区别 虽然我已经说明了很多关于嫉妒的语言，但是肯定还是会有人对一些近义词或同义词有兴趣，例如在汉语词典的解释： 嫉妒：因人胜过自己而产生的忌恨心理。 忌妒：对才能、名誉、地位或境遇等比自己好的人心怀怨恨。 妒忌：就是“忌妒”。 羡慕：因喜爱别人有某种长处、好处或优越条件等而希望自己也有。 说句实在话，“嫉妒”和“忌妒”在平时口语的说明中，都是一个意思，就连维基百科也是这样认为，所以这一般说明中，这两者通用就好了。 不过在文法上或者更吹毛求疵地讲，或者硬要说个区别，还是有的。 从词性来讲，“忌妒（妒忌）”偏向是动词，例如：我忌妒你有名有利。“嫉妒”更偏向形容词，例如：嫉妒心理。 从词语的情感上来讲，“忌妒（妒忌）”是贬义词，而“嫉妒”是中性词。 “嫉妒”的好一面，你就可以当作是“羡慕”，坏的一面，你就可以当作是“忌妒（妒忌）”。 就连英文，都还是会有Envy和Jealousy的区分。当然在这里我就不会去查看什么牛津词典然后说一大堆，没有必要。当时在心理学层面，对这两个的英文单词的区别还是有的，也有可能对我们的“嫉妒”和“忌妒”的区别有更多了解。如果有兴趣的话，可以去这里看看。 以上都是屁话了，按照输入法输入“jidu”显示的第一个词语，后续就不再区分这两个词语了，都是嫉妒。事实上，如果都说到嫉妒了还是去谈论好的那一面，完全没有必要。","categories":[{"name":"心理说法","slug":"心理说法","permalink":"http://yoursite.com/categories/心理说法/"},{"name":"情绪调节","slug":"心理说法/情绪调节","permalink":"http://yoursite.com/categories/心理说法/情绪调节/"},{"name":"嫉妒","slug":"心理说法/情绪调节/嫉妒","permalink":"http://yoursite.com/categories/心理说法/情绪调节/嫉妒/"}],"tags":[{"name":"嫉妒","slug":"嫉妒","permalink":"http://yoursite.com/tags/嫉妒/"}]},{"title":"嫉妒随笔(三)：嫉妒的层级及分类","slug":"EmotionTalk/envy/03classification-of-jealousy","date":"2019-07-08T14:03:50.000Z","updated":"2019-12-19T13:04:53.262Z","comments":true,"path":"2019/07/08/EmotionTalk/envy/03classification-of-jealousy/","link":"","permalink":"http://yoursite.com/2019/07/08/EmotionTalk/envy/03classification-of-jealousy/","excerpt":"","text":"三：嫉妒的层级及分类 正如维基百科所说：“强烈的妒忌可能会产生憎恨”。像我之前描述那样的级别，看起来已经是非常强烈的嫉妒心了。但是并不是所有人的嫉妒都会达到如此境界。或许今天看见别人得到了升职加薪的提拔而自己一无所获，内心悲伤，但是第二天就back the game，其实在这个悲伤的期间，其实也算是在嫉妒中，不过很快就走出来了。 此外，还并不是所有的嫉妒都是消极的，都是有害的。举个例子，譬如结婚后的两夫妻，妻子还是对其他男人一样友善，一样关心，丈夫就也可能嫉妒，就会怕，就会担心突然有天妻子会弃他而去，有严重的失落感，担忧感。说实话，有这样的担心才是一个正常的现象。试想，即便结婚了，看着身边的一个个适婚男士都好像情敌，如果还毫无感觉，恐怕是无稽之谈了。但是这样的担心，这样的嫉妒，或许就能促使这份感情往正确的方向走，譬如对妻子更好，两人感情更密切，羁绊更深。 当然，如果丈夫去把妻子关心的每一个适婚男士都打一顿来缓和这份嫉妒，造成了很不良的社会性质结果，我倒是很愿意把这样的问题归咎于丈夫对这份嫉妒的处理方式，而非这份嫉妒的性质本身。 综上所述，嫉妒应该是有分层级，也有分性质。理性或良性的嫉妒对人有益，非理性恶性的嫉妒对人有害，而这种嫉妒程度越重的，对其人本身危害就越大。 其实这个观念也可以用看起来专业点的话描述，例如Wikipedia中：Psychologists have recently suggested that there are two types of envy: malicious envy and benign envy—malicious envy being proposed as a sick force that ruins a person and his/her mind and causes the envious person to blindly want the “hero” to suffer; on the other hand, benign envy being proposed as a type of positive motivational force that causes the person to aspire to be as good as the “hero”—but only if benign envy is used in a right way. 此外，里面还提到了一种因为社交媒體和自拍文化的发扬而产生的新的嫉妒：自我嫉妒（self-envy），这对我来讲并不算问题，有兴趣可以参看这里。 其实说了这么多，如果我的内心充满的是理性良性的嫉妒心，我完全不用担心，说不定反而应该高兴。但是悲惨的现实说，我的嫉妒，是非理性恶意的嫉妒，它对我的性情，对我的生活都产生了极大的负面影响，这才是我担心的。 所有你要判断自己有没有严重的嫉妒心，就想想是不是都满足了这样的特点。","categories":[{"name":"心理说法","slug":"心理说法","permalink":"http://yoursite.com/categories/心理说法/"},{"name":"情绪调节","slug":"心理说法/情绪调节","permalink":"http://yoursite.com/categories/心理说法/情绪调节/"},{"name":"嫉妒","slug":"心理说法/情绪调节/嫉妒","permalink":"http://yoursite.com/categories/心理说法/情绪调节/嫉妒/"}],"tags":[{"name":"嫉妒","slug":"嫉妒","permalink":"http://yoursite.com/tags/嫉妒/"}]},{"title":"嫉妒随笔(二)：什么是嫉妒？","slug":"EmotionTalk/envy/02what-is-envy","date":"2019-07-08T13:58:52.000Z","updated":"2019-12-19T13:04:54.707Z","comments":true,"path":"2019/07/08/EmotionTalk/envy/02what-is-envy/","link":"","permalink":"http://yoursite.com/2019/07/08/EmotionTalk/envy/02what-is-envy/","excerpt":"","text":"二：什么是嫉妒？ 所以，什么是嫉妒呢？ 从维基百科来看：妒忌又称忌妒、嫉妒，是一种人与人关系性的体现；是人的一种情感表现。由于怨恨且察觉他人享有之利益，并欲将其占为己有，因而产生的一种情感与心理状态。一般让人感受到的是难受的滋味，强烈的妒忌可能会产生憎恨。 专业点从社会心理学来讲：嫉妒是与他人比较，发现自己在才能、名誉、地位或境遇等方面不如别人而产生的一种由羞愧、愤怒、怨恨等组成的复杂情绪状态。 如果让我来说，简单点讲，就是别人拥有的好的资源比你多，你对他感到不爽，甚至还希望他很快就一无所有。这些“好的资源”可以广义的说是任何好的东西，若是要直白点，就是你一直想要却就是还没有得到的东西，俗气点，比如友情、爱情、财富、名誉。 明白了什么是嫉妒，就一并知道了产生嫉妒的几个关键点： 这是一种社会性的情绪。如果只是我自己一个人，也谈不上嫉妒了。“我嫉妒我自己长得太帅”这样的话，看起来更像是自夸自恋，想要“臭美”、“不要脸”来评价都是不错的。 这是有比较才会产生的情绪。只要不是一个人，就会有差异，只是看差异有多少。但是很多时候可能没人去关心去在意这些差异。只要不去比较这些差异的优劣，也就无从嫉妒了。 比较的结果是别人比你优秀。一般来讲，一个100米短跑10秒的运动员，不会去嫉妒一个跑完百米需要11秒的运动员，而是去嫉妒跑完百米只需要9秒的运动员。 对别人的优秀，不是正面的态度。如果对待别人的优秀，是衷心祝贺，为之高兴，以他为榜样，那也谈不上嫉妒。 “不患寡而患不均”，只要人与人所占有资源不等价，或说大抵等价，总是会有嫉妒的产生。而事实上，在资源占比上，哪里会有人人平等的可能性。你比我高，你比我帅，你还比我有钱，你还事业蒸蒸日上，家庭幸福美满，我肯定是羡慕你，嫉妒你，不说取代你，产生“想达到你所取得的成绩”的想法总是有的。","categories":[{"name":"心理说法","slug":"心理说法","permalink":"http://yoursite.com/categories/心理说法/"},{"name":"情绪调节","slug":"心理说法/情绪调节","permalink":"http://yoursite.com/categories/心理说法/情绪调节/"},{"name":"嫉妒","slug":"心理说法/情绪调节/嫉妒","permalink":"http://yoursite.com/categories/心理说法/情绪调节/嫉妒/"}],"tags":[{"name":"嫉妒","slug":"嫉妒","permalink":"http://yoursite.com/tags/嫉妒/"}]},{"title":"嫉妒随笔(一)：引出嫉妒","slug":"EmotionTalk/envy/01lead-to-envy","date":"2019-07-08T13:40:57.000Z","updated":"2019-12-19T13:04:56.032Z","comments":true,"path":"2019/07/08/EmotionTalk/envy/01lead-to-envy/","link":"","permalink":"http://yoursite.com/2019/07/08/EmotionTalk/envy/01lead-to-envy/","excerpt":"","text":"前言 我应该不算是一个心理非常健康的人，毕竟我有一个非常难以克服的缺点：强烈的嫉妒心。它就像一颗肿瘤，长在我身体，无时无刻地，不知不觉地，伤我的心，伤我的身，我受到极大的痛苦。因此，为了缓解，为了安宁，为了活下去，我需要好好了解一下这个“肿瘤”，希望能够安抚它，克服它，切除它，愉快的活下去。 这并不打算写成一篇科普性文章，也没有心思写成专业性的论文。如果只是简单了解名词，去百度Google一下也就ok。想要深度了解，若是去知网、Citeseerx检索专业文献学习也是不错。我只想简单地明白一些概念，剖析一下原因，学习一下治愈良方，为了心情不再那么沉重痛苦，为了生活再次充满愉悦欢笑。Maybe we can help each other。 一：引出嫉妒 什么是嫉妒？我来描述一下一个例子。 你和A君是同一年来到同一家公司工作，你们在同一个部门，做同一个项目。在项目的完成过程中，你付出的时间、精力、完成的内容都比A君多。在项目完成上线，收益良好，但是A君被领导提拔，升职加薪，而你就一层不变。渐渐地，A君和你做的事情不一样，接触的圈子不一样，得到的回报不一样。A君一下子节节攀升，而你还是原地踏步。那么你对A君是有一种如何的情绪呢？ 我不知道你是什么情绪，我的感受就是：为什么是他？凭什么是他？换一个事做的比我多，或者资格比我老的人都行，为什么是他？领导是弱智吗？是脑残吗？我不说别人，至少我都比他有资格被提拔。你看看他，升级之后，工作又不积极，进度还被拖延，领导为什么还对他谈笑风生，上午去开会，下午去见客户，晚上去聚餐。我做错了什么要在我面前晃？看不起谁？看吧，保不齐陪客户生意告吹，做项目稳赔不赚，手下离心离德…… 看到了吗，这样的情绪，这样的想法，如果你不说它是嫉妒，那么也得说绝对不是好的走向。 我说不定晚上睡不着觉，就在想为什么？凭什么？我说不定上班就一时半会就盯着他，然后想着，你看，他又在玩手机；你看，又去厕所了；你看，又去找人聊天，还笑那么大声。我说不定每天都很晚才能下班，要做的事情总是不能及时完成。我说不定心里一直不舒服，一直不爽，看谁都来气，谁都不想理。说不定一种怨念充满整个身躯，吃包泡面结果调料包挤到了垃圾桶，买瓶老干妈结果拧不开瓶盖，破口打骂，为什么什么都要针对我！ 如果还没有这样的想法，恭喜你，你还ok。如果像我这样了，那你就已经长出了嫉妒的“肿瘤”，而且级别不低。","categories":[{"name":"心理说法","slug":"心理说法","permalink":"http://yoursite.com/categories/心理说法/"},{"name":"情绪调节","slug":"心理说法/情绪调节","permalink":"http://yoursite.com/categories/心理说法/情绪调节/"},{"name":"嫉妒","slug":"心理说法/情绪调节/嫉妒","permalink":"http://yoursite.com/categories/心理说法/情绪调节/嫉妒/"}],"tags":[{"name":"嫉妒","slug":"嫉妒","permalink":"http://yoursite.com/tags/嫉妒/"}]},{"title":"假如我死了","slug":"DesperateSeries/02jiaruwo","date":"2019-07-01T14:14:43.000Z","updated":"2019-12-19T13:02:43.816Z","comments":true,"path":"2019/07/01/DesperateSeries/02jiaruwo/","link":"","permalink":"http://yoursite.com/2019/07/01/DesperateSeries/02jiaruwo/","excerpt":"","text":"假如我死了，在一个吵闹的夜晚，或许在一个安静的白天，我死了。没有人知道，没有人在意。为什么会有人会在意呢？75亿8千万分之一，又有什么影响呢？世界上本来就人口膨胀，本来就那么多贫穷饥荒，本来就那么多背井离乡，少我一个又有什么关系？宗教政治矛盾不会改善，落后经济建设也不会被激发，科学技术在这一刻也没有跃进，种群斗争也并不会因此停止，所以有什么关系呢？ 假如我死了，我的国家会从社会主义初级阶段实现共同富裕了吗？物质财富极大丰富了吗？人民精神境界极大提高了吗？每个人自由而全面发展了吗？或许很久的以后会，但是现实大概是不会的，所以又有什么影响呢？少一个人吃面包，就有多一个人可以吃面包；少一个人自私怯弱，就有多一分无私友爱的比例；少一个人迂腐妥协，就有多一份积极进取精神。少了我一个，说不定是为了进步，为了和平。 假如我死了，说不定家人会给我刨个坑，填点土，多么可惜。人均土地占比已经那么少了，为什么还要多空出一块地来。他们或许也会难过，他们或许也会伤心。地种了一辈子，结果变少了；人养了好多年，结果还没个回报就没了。地下种个花生，说不定也会长出一窝落花生；地下种个树苗，说不定可以长出一根房梁；地上埋堆狗屎，都能够肥沃一寸土地。说不定有些年，再来坟前看看，插根香烛。或许再些年，不能走动，杂草淹没，灌木丛生，说不定也生个蛇窝鼠窝，骇人。 假如我死了，说不定借的钱就不用还了，没有份子钱需要再出了，没有酒需要再喝了，没有那么多吵闹需要去忍受了。或许可能会成为一段时间的谈资，或许会成为一段时间的笑柄，然后呢？我解脱了，我不用再装着高兴了，不用再假装关心了，不用再伪装同情了，该是多么自在。或许他们身边会有一个更好的人填补，会有更好的经历分享，会有更好的羁绊牵引，这也是奉献，这也是情谊。 假如我死了，或许我终于得到了升华，这原本的世界不会因为我的死而变得美好，或许会带来点愤怒，但是我什么都不知道。我终于不再害怕生的煎熬，再不用理会旁人的排挤，再不用隐藏自己的邪恶，再不用担惊受怕畏手畏脚。我终于得到解脱，逃离这一切的肮脏，肮脏的一切。没有牵挂，无拘无束；没有压迫，无忧无虑；没有包袱，无欲无求。人的一生就该如此，人的存在就该如此，死亡，才是一个人最应该最正确的归宿。 假如我死了，不要悲伤，不要心急，或者这就是我想要的全部，我应得的一切。 假如我死了，没有眼泪，充满欢笑，或者这就是我留下的遗产，我保留的希望。 假如我死了，我终于做出了最后的决定，正确的决定。 2019/7/1 21:15","categories":[{"name":"绝望系列","slug":"绝望系列","permalink":"http://yoursite.com/categories/绝望系列/"},{"name":"人生感慨","slug":"绝望系列/人生感慨","permalink":"http://yoursite.com/categories/绝望系列/人生感慨/"}],"tags":[{"name":"绝望","slug":"绝望","permalink":"http://yoursite.com/tags/绝望/"}]},{"title":"你为什么还要活着？","slug":"DesperateSeries/01niweishen","date":"2019-07-01T14:14:33.000Z","updated":"2019-12-19T13:02:28.532Z","comments":true,"path":"2019/07/01/DesperateSeries/01niweishen/","link":"","permalink":"http://yoursite.com/2019/07/01/DesperateSeries/01niweishen/","excerpt":"","text":"活着，挺辛苦，挺难过，挺无奈的。每天庸庸碌碌，碌碌无为。吃饭就是浪费食物，说话就是污染环境，呼吸就是亵渎空气。每天都有沉重的生活压力，每天都是平庸乏味的机械重复，每天经历的都是讥讽排挤。走的路没有一块砖是你铺垫，住的屋没有一片瓦是你搭建，穿的衣没有一针是你缝制。你为什么还要活着？ 人生是多么的孤独空虚，人生是多么虚伪狡黠。你有多少朋友可以联系？你有多少家人长久来往？说不定偶尔来个电话，想的是多聊几句，结果无话可说；也许偶尔发了信息，不是拼单砍价，就是集赞分享。偶尔想跟家里打个电话聊个近况，却话不投机，三言两语。亲戚朋友尚不能知，还有谁更会懂你？玩个游戏都只能单刷不敢联机，发给微博都要匿名评论关闭。现实生活都是各自生活，网上隔膜更多欺骗打击。你为什么还要活着？ 有多久没有人邀请你出去参与活动，一起玩耍，有多久没有没人发来生日祝福信息？寒风里出门拿外卖快递，烈日下汗滴砖头变蒸汽。哪样东西能白给，哪样需求不要人民币？今天想买个空调洗衣机，明天还要车房齐，今天医院看病两千七，明天商场打折九折起。肩上到底扛的是谁的生活？地下躺的是谁的身躯？好运从来不会光临，灾祸始终不离不弃。你为什么还要活着？ 社会治安永远会加强，经济建设永远在提高。今天可能有吃有穿就温饱，明天可能有车有房才刚好。想买好菜要趁早，盐总得比适量少一勺。可能哪一天物质需求极大提高，却发现没有财力去享受这些美好。人们总是要追求进步，最求更高的需求，但是往往需要更多的时间、精力、财力去实现它。物质社会跑得这么快，你怎么才追的上？不过当你转头一看，有的人早就瘫坐着俯视你，还面带微笑。人们总会向往平等，但是唯有不公才是真正的平等，你无论多么努力，总是得不到，而别人就是简单弯弯腰，踮踮脚。你为什么还要活着？ 75亿8千万分之一，无力的抗争，卑微的呐喊，你是最底层的渺小。根本没有人关心过你，根本没有你存在的必要。科技进步有你几分付出，世界和平有你多少功劳？你甚至不敢阻止别人偷人钱包，有人插队你也只能往后稍稍。你不懂别人的信仰，也不知道别人的宗教。你不懂别人的政策，也不懂别人的需要。社会矛盾激化也不知道，世界末日说不定还拍手叫好。你为什么还要活着？ 不思进取，无能狂怒，勾心斗角，你为什么还要活着？ 无力斗争人生的曲折，无法承受生活的煎熬，不被社会认可，不被别人需要，你为什么还要活着？ 生而为人，你为什么还要活着？ 2019/7/1 22:11","categories":[{"name":"绝望系列","slug":"绝望系列","permalink":"http://yoursite.com/categories/绝望系列/"},{"name":"人生感慨","slug":"绝望系列/人生感慨","permalink":"http://yoursite.com/categories/绝望系列/人生感慨/"}],"tags":[{"name":"绝望","slug":"绝望","permalink":"http://yoursite.com/tags/绝望/"}]},{"title":"梦到自己喜欢的游戏","slug":"EmotionTalk/dreams/20190628","date":"2019-06-29T16:32:57.000Z","updated":"2019-12-19T13:05:16.001Z","comments":true,"path":"2019/06/30/EmotionTalk/dreams/20190628/","link":"","permalink":"http://yoursite.com/2019/06/30/EmotionTalk/dreams/20190628/","excerpt":"","text":"梦醒时间2019/09/28 02:42 梦境概况：场景简述 梦在看到一个英雄联盟主播玩VN，另一个玩德莱文，玩得很菜，我不知道为什么在旁边看。玩VN的主播可能因为打得不好被说了，一直在讲：我在回忆过去了，找回曾经的手感…… 玩着玩着就突然出现4个人玩的角色在混战的场景，当年的人当年的游戏情景。一个是玩VN，非常秀。一个是那局被VN秀的狗熊。一个叫大蛇，梦中专门强调一句，他们叫大蛇，我们叫大龙，具体指的是纳什男爵还是什么就不知道了，但纳什男爵不是玩家可操作角色。 我们四人想起了当年那局游戏相遇的情景，感觉是不错的朋友。我们一起走在我熟悉的现实生活中以前奶奶家到赶集到水碾的路上，一起聊着话题。比如说到：我们当年还没有玩得这么菜的人，很多人都没有上线了。为什么大蛇很久不见了，说是去江东读书了。突然又说到江东离海有多远。我梦中清晰的想象着中国地图，还说如果中国左右有100里，那么江东离海就50里，一半的距离，而且梦境中是指的距离是离地图下方的海。聊着江东就醒了。 其它细节 梦中就在主播说“我在回忆了”，转场景的画面是CG似的游戏角色在战斗的画面，像游戏场景。 “很秀的VN”是我给那个主播说的定义，说是那一局他就是那个很秀的VN。那个被秀的狗熊是他玩家自己跟玩VN主播说的，他就是那个被秀的狗熊。 我玩的什么角色没有提到。 有专门提到有一个人叫大蛇，我们叫大龙，像是在区分国内国外的说法不同。 梦醒的时刻聊的是江东离海的距离，梦里的场景是家中看到大湾田的画面。 有个年份2017年，记不清是说的再次上线后4人重遇的时间，还是那个大蛇要去上学的时间。 自我解析：现实情况 英雄联盟是一款网络游戏，也是我现实中耗费时间最多、投入精力最多、花费金钱最多的游戏。在有一段时间里，以前一起玩的人都弃游了，我还是一人在玩。但是最近一段时间玩得非常少了。在有游戏对局记录历史的半年内，只有3次和队友开黑（一起玩）才玩了一下。 除了单机，网游包含手机游戏没有队友的话我一般都不会玩，但是平时都有去直播平台看主播玩，所以从实际意义上来看，虽然没有亲手去玩游戏，投入的精力和金钱少了，但是时间并不算少。 最近没有发生有触发回忆过去的伤感事件。工作上也熟悉了各方面的不如意。没有抗争，就将就着它。下班之后也没有看什么电影，都只是在玩另一款单机游戏NBA2K18，因为MC模式开了一个新角色，所以每天下班投入了不少时间去玩。 心理近况 最近也不算烦躁，之前在工作上的一些内心不舒服的感觉也没有那么强烈。 没有特别的事情发生。 梦境反应 当我们不再年轻的时候，很多以前特别喜欢的事情，即便热情未消，但精力有限。这也可能是为什么是梦到看主播玩游戏，而不是自己玩游戏。所以有些看起来可能是因为年龄、生存环境、时间限制等收敛起来的兴趣爱好，甚至是梦想，虽然看起来是暂时放弃或者埋没了，但是可能在心底，一直都在一个很高的地位上，只要有契机，说不定立马就钻出来了。 在那个主播在说我在回忆了，梦中的场景是跳转到游戏角色战斗的CG画面，就像是游戏CG宣传片那样的效果。很多电影都有这种表现现实，主角或某个角色，在讲述着一个故事，现在是这个讲述者的画面，随着他话语，画面转到讲述者故事发生的场景。事实上，梦中出现的三个游戏角色，除了狗熊，最近看的主播中都没有玩，三者也不是我现实中喜欢玩的角色，所以为什么会出现这三个角色也不知道。 我倒是希望在游戏中结交朋友，并在现实中成为朋友。这是我一直都有的观点，但是能触发这一个想法的，只有最近看到一篇帖子，内容是说在一款娱乐消遣的APP中认识的人在线下一起聚会了的事情。事实上，我可能缺乏各种意义上的朋友，所以算比较羡慕，这也体现在梦中看起来4人关系不错。不过其它三个都有一个角色或名字定义，但是“我”却没有任何一点，可能也像是虽然渴望，但是却没有去争取的表现。 2017年在现实中对于我来讲并不算一个有特殊意义的年份，为什么会强调“大蛇”这个角色也不清楚，但如果是现实生活中在国外且还算有点联系的到的确只有一个大学同学。我自认为关系也还行，但平时并没有什么联系。 为什么会出现“江东”这个地方也是奇怪。如果从现实来讲，“江东”的话应该是长江以东，如果说是距离右边的海的话，100里取50里，还真的可算的上最远离海距离了。不过梦中是距离到地图下方的海，但在现实中以长江为基准，中间的话还就在重庆左右，以重庆到海的距离，地图上看起来还真往下往右都差不多。这段时间高考成绩也陆续出来，也到了大家要去填志愿选自己想读和能读的大学了。（私人层面上，去这个我梦中的“江东”读书还不错哦，说不定我回老家会遇上。）谈论某地方时梦到的是自己熟悉的生长的地方，可能有两个解释，一是没有去过别的地方，想象不出来那个地方的情景，只能用自己熟悉的地方来代替。二是你想象的地方，不管名字是什么，都会是自己喜欢而且想要回去的地方。“踏遍青山人未老，风景这边独好。” 总结说明： 这是一个典型的梦到自己喜欢的活动的“想梦”，但是对于自己喜欢的活动，很多时候并不一定是喜欢活动内容本身，还有那些一起玩耍、一起参与的人。当一个人长时间缺乏这些经历时，或许在不经意间就会透露出想要得到或者再来一次的想法。 你以为是单纯的爱好，说放弃就能放弃。而事实上，或许从来未曾走远过。 阔别已久的重逢，微笑依然是感动。 2019/6/30 0:32","categories":[{"name":"心理说法","slug":"心理说法","permalink":"http://yoursite.com/categories/心理说法/"},{"name":"梦之解析","slug":"心理说法/梦之解析","permalink":"http://yoursite.com/categories/心理说法/梦之解析/"},{"name":"想梦","slug":"心理说法/梦之解析/想梦","permalink":"http://yoursite.com/categories/心理说法/梦之解析/想梦/"}],"tags":[{"name":"解梦","slug":"解梦","permalink":"http://yoursite.com/tags/解梦/"},{"name":"梦境与现实","slug":"梦境与现实","permalink":"http://yoursite.com/tags/梦境与现实/"}]},{"title":"梦到最近发生的事情","slug":"EmotionTalk/dreams/20190619","date":"2019-06-23T02:44:02.000Z","updated":"2019-12-19T13:05:22.483Z","comments":true,"path":"2019/06/23/EmotionTalk/dreams/20190619/","link":"","permalink":"http://yoursite.com/2019/06/23/EmotionTalk/dreams/20190619/","excerpt":"","text":"梦醒时间： 2019/06/19 03:13 梦境概况：场景简述 梦见我和老爸跟着表弟（现实中最大的那个）去他的宿舍。表弟出去了一下，我和老爸转转，遇到周围住的一个女生，感觉这个女生一见如故。 然后老爸在煮面，不知道怎么说到钱的事，我和他在数钱包。然后那个女生就说：“钱嘛到处都是，要的话拿就是。”然后一个特写，她小桌子上有一卷散钱，应该就几十。然后我把我钱包里的钱取了一点，大概几十留下，其他和钱包都给了老爸，然后还附和着女生说：“对，我们年轻人用不了多少钱，不吃饭就能省点钱”之类的话。 老爸煮着面，看我的钱包说着还不少，还有好几十（在给钱包的时候应该不止，不过梦里转个镜头就少了）。特写我在看装面的卷纸，上面还有几根断面条卡在粘圆筒的夹缝里。然后也看了看钱包，真的还有好几十。 然后突然听见表弟的声音，他在一个马路边上的水龙头下洗衣服，喊我们的时候正在拧衣服水。他叫我们把温水瓶装满，然后把水烧开。温水瓶接满水烧开后，再倒满水壶，看意思是剩下的水晾衣服。我爸说知道了，把一个温水瓶接满放到灶头上烧，然后就醒了。 其它细节 梦中那女生放那卷散钱的桌子很小，就是平时50cm*50cm那种小桌子，钱摆在一个角。 大表弟洗衣服水龙头旁边的马路是一个斜坡，他出租屋在下面，是一排楼中间，这排楼和马路是垂直的。 那个女生没有名字，就是不是现实中人物的映射。 自我解析现实情况 最近一段时间，也不算短，好几个月，老爸在考完得到驾照之后都有意愿买辆车来开开。虽然是有这个打算，但是一来不知道买哪种车，二来也是外出打工住在狭小的厂房，不知道买来车的其它用处。 6月的端午节我去爸妈那边玩，和姑爷有争论过“谈恋爱是百利而无一害”这个观点。 5月中期一个关系还不错的高中女同学跟我讲，她遇到一个一看到就很喜欢的男生，然后我有鼓励她去大胆发展。后续她也说如果他们结婚了可以让我少给点彩礼。 同事上个月不久回去参加了他朋友的结婚典礼，我们也聊了一些相关话题。我也一直有主观情感上想找个女朋友的愿望，但是总拿客观现实做借口而完全没有实际行动。 大表弟在上大学，平时周末我们有一起玩手游。不过最近一两周临近大学期末考试月，没有一起玩了。 心理近况 最近几天都比较烦躁，有点焦虑，可能是工作上的琐事和对生活和工作前景的担忧。 没有发生什么与平常有异常或者特殊的事情。 梦境反映 梦见老爸可能是因为6月初的端午节我才到他那边玩了几天，也说到了买车的问题。不过仔细想想，他只是有问过路边停着或我看到的车那辆好看之类的话题。因为我对这个也不了解，所以没有提出什么建议。不过我倒是从来没有说过或表示过如果他要买车，我能给多少钱给他。虽然现实情况中他如果要买个车来开也是最多十来万的车，如果是钱的话他也拿得出来。但是他没跟我说，我也没有意识到他如果买车我也可以提供一点钱，虽然我也才工作三年，工作前景看起来也不是很好，但是几万块还是可以给的。这也正巧是梦中我在给他钱的情景。 梦中人物大多是有现实人员映射的关系，这个女生并没有，而且在梦中能感觉到我们相互有好感，比如我在和老爸说钱的问题，她指着她的桌上的钱给我说拿。现实中，可能是因为我也25岁了，平时也看到很多情侣段子，内心也有想找个女朋友的愿望，加上最近一段时间类似的事情有遇到几件，所以可能导致梦中也在想这个事，而且还是期待的两情相悦而不是一厢情愿。 梦里面对人物说的话印象深刻，这个女生说的“钱嘛到处都是，要的话拿就是。”现实大环境下，看物质的女生还是多的，但是我也喜欢那种看重两个人在一起是一起过日子而不是只看重物质生活的女生。不过也可能反映出现实我可能提供不了非常好的物质基础。我的现实情况也是如此，只有一点死工资，而且还不是很稳定的工作（主要是我自己想长久做现在这个工作的意愿不强，又对找到其它符合兴趣又待遇优渥的工作的期望很低）。 大表弟的出现，我自己想来觉得只是现实中周期性的一周一起玩几把游戏，规律性的作业突然中断了几次，就突出强调了一下。对一起玩的游戏之前可以说是很喜欢，也享受和队友一起玩，一个人玩就基本不会玩。不过最近兴趣变低了很多。 大表弟洗衣服叫我们接水的场景，梦里没什么逻辑，和那个钱转个镜头数量也变少了一样，我没办法和最近的现实生活中对应起来。 总结说明 总的来说，这个梦的关键字是：老爸、女生、钱、表弟。老爸、钱和表弟应该是对最近经历的事情的一种反映，尤其是给钱给老爸这个动作，联系到现实情况老爸想买车一条，似乎是我忽略了生活中的一点细节。 女生这点是少有和现实对不上的角色，可能只是我内心对美好爱情的渴望体现在梦境中了。从和这个互有好感一点，反映了我现实想法，我也希望是找个能过一辈子而且感情坚实的女人，而不只是想有个女朋友的想法。 梦中反映自我需求，真实事情梦中体现。 2019/6/19 21:14","categories":[{"name":"心理说法","slug":"心理说法","permalink":"http://yoursite.com/categories/心理说法/"},{"name":"梦之解析","slug":"心理说法/梦之解析","permalink":"http://yoursite.com/categories/心理说法/梦之解析/"},{"name":"想梦","slug":"心理说法/梦之解析/想梦","permalink":"http://yoursite.com/categories/心理说法/梦之解析/想梦/"}],"tags":[{"name":"解梦","slug":"解梦","permalink":"http://yoursite.com/tags/解梦/"},{"name":"梦境与现实","slug":"梦境与现实","permalink":"http://yoursite.com/tags/梦境与现实/"}]},{"title":"梦中搞砸你擅长的事","slug":"EmotionTalk/dreams/20190618","date":"2019-06-20T14:25:25.000Z","updated":"2019-12-19T13:05:28.330Z","comments":true,"path":"2019/06/20/EmotionTalk/dreams/20190618/","link":"","permalink":"http://yoursite.com/2019/06/20/EmotionTalk/dreams/20190618/","excerpt":"","text":"梦醒时间： 2019/06/18 06:16 梦境概况:场景简述 做个噩梦，梦到语文老师临时上课让做题，本来要一节课做完，但是我完全不会做。一节课过去了，很多题都不会，都没做。 因为还有一些人没有做完，老师就说第二节课继续做，没做完不能放学。好友CT第一节课就做完了，我跟他示意我不会做，让他帮忙能不能给我抄答案。但是老师在上面看着不好抄。偷偷摸摸弄了一节课，还是很多题空着。眼看要下课了，然后就潦草乱七八糟地写了字，看都看不清的字，交了题。交的时候我哭着对老师说，对不起，让你失望了。 交完卷之后回到位置上，CWR突然递给我半瓶好像是冰冻过的泡酒。本来她是笑着的，我喝了好大一口，然后就泪流不止，她看见了慢慢不笑了。旁边她的好友YXY还是笑着，然后和CWR交头轻轻说什么。 然后我被吓醒了。 其它细节 我能回忆起梦中的语文测验上面有英语题和数学题。 语文老师就是实际生活的高中语文老师。 自我解析：现实情况 在实际的读书期间，我可能很多科目都比较不算好，但是语文一定是我最自信和最喜欢的科目，所以在实际生活中，不可能发生语文做不出来，而且还哭着对老师说让她失望的事情。 CT是实际生活中读书那段时间的一个存在的好朋友。梦中人物其实可能记不清面貌身形，但是就是可以知道名字或者现实生活中可以指代的人。这个好友CT如果是在生活中，如果是发生要协助我作弊的事情，在后果不严重的情况下，例如只是平时测验，不是重大期末考之类的，是可能会帮我的。 CWR是我高中同学，整个高中三年可以说几乎没有任何交集，没有发生任何事情。实际上，在我记忆中我们好像做了快一学期的同桌，就只说过一句话，就像两个毫无关系的人。高中一排是三个人 ，CWR坐中间，我坐面向黑板的左边，而YXY就是坐她右边的人。虽然我和YXY也很少说话，但关系还是比CWR缓和点，而CWR和YXY倒的确是好朋友。 现实生活中，在大学时我是比较喜欢喝酒的，高中时主要在农忙时，家中有喝酒。不过在做这个梦时，我已经有一段时间没有喝酒了。 最近几天内，我看了一部电影《天才枪手》，印象还不错，影片根据2014年轰动一时的亚洲考场作弊案改编，讲述了天才学霸利用高智商考场作弊牟取暴利的故事。这可能是梦境发生场景是高中语文测验且语文测验中有英语题和数学题的原因。 心理近况 最近几天都比较烦躁，有点焦虑，可能是工作上的琐事和对生活和工作前景的担忧。 没有发生什么与平常有异常或者特殊的事情。 梦境反映 对于我一直以来都比较有自信的语文测验出现不会做题，可能反映对目前在做的熟悉的事情有一点的担忧和危机感。这倒是事实，我对我自己的工作技能还是比较不满意的，因为感觉工作上，我的位置是很容易就可以被代替的。虽然我有想过提升工作能力和技术，但是这也是最近我在担忧烦躁的问题之一，我已经在怀疑目前的工作是否是我希望做的事情，是否是我想做的事情。可能是一种居安思危的想法，也可能是反映最常用的，最熟悉的，最懂行的东西，就是会让你哭泣的，让你跌落到失败悬崖的东西。也可能是内心想要走出去，走出舒适区的念头，或者是想要学习新东西的念头。 而对老师哭着说对不起这一现象，可能反映了我对这种熟悉作业出现失败还是很在乎的。不是不以为然，轻描淡写，这和我内心希望做好事情而不是敷衍做事的愿望是一样的。但是严格来讲现实和愿望可能还是有点差距。而对一次语文测试预期会产生较差的结果，而对教授、培养的语文老师道歉，也可反映我可能对在工作中栽培我的领导之类的有种愧疚感。事实上，我个人觉得工作上目前领导给的指导并对我没有很多的帮助，相反可能他们认为是培养对我个人觉得是浪费时间，一种沟通不善观念不一样的东西，但我认为初衷是对的。不过我的确有这个观点：现在辞职离开感觉对不起他们自以为是培养的培养。 梦中我有梦到CT。读书期间我们关系很好，也经常联系，不过毕业工作后就很少联系了。如果说在高中期间真的要到找人作弊的话，他可能是第一人选。这可能反映了我对老朋友的想念，也可能是担心失去。虽说君子之交淡如水，但这可能只是我个人逃避维护人际关系的借口。我的确觉得有时候去维护人际是很费力的事情，但是现实社会没有人可以独自活下去。可能是督促我需要交朋友了。的确我一直在内心都很想广交朋友，但是都不想深交，觉得维护和夯实都很费精力。 高中和CWR没什么关系算得上我感觉比较遗憾的事情，虽然现在想来这对我原本的高中生活经历不会起到多少影响，但是从现在这个年纪的我的个人内心来讲，我还是那种希望与别人搞好关系的人。客观来讲，我算性格比较开朗，不算内向，但高中可能有点相反。最近并没有与人发生矛盾，所以这个情景有可能只是在看过电影之后，联系到了自己高中生活的情况，脑中想着改变的样子。 现在在6月份，我身在广东东莞，最近的天气比较热，这可能是CWR请我喝的酒是冰冻过的原因。大学毕业之后喝酒少了，是因为我觉得喝酒我一个人喝没有意义，要亲朋好友人多一起喝才高兴。可能在内心中，我还是觉得有点孤独，结合上一条一个真实经历的身为同桌却感觉毫无关系的人看我哭了请我喝酒，说不定是我内心对一个热闹生活的期待和对孤独内心感受的不满。 本来是笑着的CWR，看到我喝酒后哭了都没有笑了。在现实来讲，这是熟悉的人遇到这种情况的正常反应，而YXY这个角色在这个梦里感觉就是反映CWR和YXY是好朋友，是实际生活是一致的。而YXY还是笑着和CWR说话，说明在梦中我和YXY的关系就有可能像当年的现实中我和CWR的关系一样。除了对朋友的渴望，可能也预示着不是所有人都能够成为朋友，也许有那么一些人，不是自己想交个朋友，就会和别人成为朋友。 总结说明： 最近看的电影《天才枪手》的场景构建了梦中类似的高中测验的情景，一些细节例如语文测验中有英语题和数学题也是由此而来。 有反映出最近的心理状况，例如对工作的忧虑，和一些内心深处的想法，比如觉得有点孤独，想交深交的朋友。梦境反映了现实中的一些担忧焦虑的现状和内心渴望得到的东西，但是还没有给点想法，总体上说，是对自我的反映，不是对现实中的事物和人的折射。 自我需求，与人无关。 2019/6/18 21:46","categories":[{"name":"心理说法","slug":"心理说法","permalink":"http://yoursite.com/categories/心理说法/"},{"name":"梦之解析","slug":"心理说法/梦之解析","permalink":"http://yoursite.com/categories/心理说法/梦之解析/"},{"name":"噩梦","slug":"心理说法/梦之解析/噩梦","permalink":"http://yoursite.com/categories/心理说法/梦之解析/噩梦/"}],"tags":[{"name":"解梦","slug":"解梦","permalink":"http://yoursite.com/tags/解梦/"},{"name":"梦境与现实","slug":"梦境与现实","permalink":"http://yoursite.com/tags/梦境与现实/"}]},{"title":"梦的分类","slug":"EmotionTalk/dreams/categoryDescription","date":"2019-06-20T03:06:12.000Z","updated":"2019-12-19T13:05:11.981Z","comments":true,"path":"2019/06/20/EmotionTalk/dreams/categoryDescription/","link":"","permalink":"http://yoursite.com/2019/06/20/EmotionTalk/dreams/categoryDescription/","excerpt":"","text":"古人根据梦的内容不同，把梦分为以下十五类： 直梦 即梦见什么就发生社么，梦见谁就见到谁。人的梦都是象征性的，有的含蓄，有的直露，后者就是直梦。如你与朋友后就不见，夜里梦之，白日见之，此直梦也。 象梦 即梦意在梦境内容中通过象征手段表现出来。我们所梦到的一切，都是通过象征手法表现的。入梦到登天，其实人是无法登天的，在此，天是具有象征意义的。如天象征阳刚、尊贵、帝王；地象征阴柔、母亲、生育等等。 因梦 由于睡眠时武官的刺激而作的梦。”阴气壮则梦涉大水，阳气壮则梦涉大火，藉带而寝则梦蛇，飞鸟衔发则梦飞”，此即因梦。 想梦 想梦是意想所作之梦，是内在精神活动的产物，通常所说”日有所思，也有所梦”即想梦也。 精梦 由精神状态导致的梦，是凝念注神所作的梦，使近于想梦的一种梦。 性梦 是由于人的性情和好恶不同引起的梦。性梦主要不是讲做梦的原因，而是讲做梦者的对梦的态度。 人梦 人梦是指同样的梦境对于不同的人有不同的意义。 感梦 由于气候因素造成的梦为感梦。即由于外界气候的原因，使人有所感而作之梦。 时梦 时乃四时，由于季节因素造成的梦为时梦。”春梦发生，夏梦高明，秋冬梦熟藏，此谓时梦也” 反梦 反梦就是相反的梦，阴极则吉，阳极则凶，谓之反梦。在民间解梦，常有梦中所作与事实相反之说，在历代典籍中，亦多有反梦之记载，成语中亦有黄梁美梦的典故，唐·沈既济《枕中记》，说卢生在梦中享尽了荣华富贵，醒来时，蒸的黄粱米饭尚未熟，只落得一场空。可见反梦在人的梦中占有很大的比重。 籍梦 也就是托梦，此类梦在古代书籍中也有不少记载。人们认为神灵或祖先会通过梦来向我们预告吉凶祸福。 寄梦 就是甲的吉凶祸福在乙的梦中出现，乙的吉凶祸福在甲的梦中出现，或者异地感应做同样的梦。寄梦是由于人们之间的感应而形成的梦。 转梦 转梦是指梦的内容多变，飘忽不定。 病梦 病梦是人体病变的梦兆，从中医角度来讲，是由于人体的阴阳五行失调而造成的梦。 鬼梦 即噩梦，梦境可怕恐怖的梦。鬼梦多是由于睡觉姿势不正确，或由于身体的某些病变而造成的梦。 梦的分类来源：https://www.nongli.com/item5/augury/qi1-12.htm","categories":[{"name":"心理说法","slug":"心理说法","permalink":"http://yoursite.com/categories/心理说法/"},{"name":"梦之解析","slug":"心理说法/梦之解析","permalink":"http://yoursite.com/categories/心理说法/梦之解析/"},{"name":"分类","slug":"心理说法/梦之解析/分类","permalink":"http://yoursite.com/categories/心理说法/梦之解析/分类/"}],"tags":[{"name":"解梦","slug":"解梦","permalink":"http://yoursite.com/tags/解梦/"}]}]}